"use strict";(self.webpackChunkpodman=self.webpackChunkpodman||[]).push([[1869],{3905:(e,n,t)=>{t.d(n,{Zo:()=>m,kt:()=>k});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=a.createContext({}),l=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},m=function(e){var n=l(e.components);return a.createElement(s.Provider,{value:n},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},u=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,m=p(e,["components","mdxType","originalType","parentName"]),c=l(t),u=r,k=c["".concat(s,".").concat(u)]||c[u]||d[u]||o;return t?a.createElement(k,i(i({ref:n},m),{},{components:t})):a.createElement(k,i({ref:n},m))}));function k(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,i=new Array(o);i[0]=u;var p={};for(var s in n)hasOwnProperty.call(n,s)&&(p[s]=n[s]);p.originalType=e,p[c]="string"==typeof e?e:r,i[1]=p;for(var l=2;l<o;l++)i[l]=t[l];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},2187:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>p,toc:()=>l});var a=t(7462),r=(t(7294),t(3905));const o={},i=void 0,p={unversionedId:"podman-container/podman-container-cleanup",id:"podman-container/podman-container-cleanup",title:"podman-container-cleanup",description:"% podman-container-cleanup 1",source:"@site/docs/podman-container/podman-container-cleanup.md",sourceDirName:"podman-container",slug:"/podman-container/podman-container-cleanup",permalink:"/websites-new/docs/podman-container/podman-container-cleanup",draft:!1,editUrl:"https://github.com/containers/website-new/docs/podman-container/podman-container-cleanup.md",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"podman-container-checkpoint",permalink:"/websites-new/docs/podman-container/podman-container-checkpoint"},next:{title:"podman-container-clone",permalink:"/websites-new/docs/podman-container/podman-container-clone"}},s={},l=[{value:"NAME",id:"name",level:2},{value:"SYNOPSIS",id:"synopsis",level:2},{value:"DESCRIPTION",id:"description",level:2},{value:"OPTIONS",id:"options",level:2},{value:"<strong>--all</strong>, <strong>-a</strong>",id:"--all--a",level:4},{value:"<strong>--exec</strong>=<em>session</em>",id:"--execsession",level:4},{value:"<strong>--latest</strong>, <strong>-l</strong>",id:"--latest--l",level:4},{value:"<strong>--rm</strong>",id:"--rm",level:4},{value:"<strong>--rmi</strong>",id:"--rmi",level:4},{value:"EXAMPLES",id:"examples",level:2},{value:"SEE ALSO",id:"see-also",level:2},{value:"HISTORY",id:"history",level:2}],m={toc:l},c="wrapper";function d(e){let{components:n,...t}=e;return(0,r.kt)(c,(0,a.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"% podman-container-cleanup 1"),(0,r.kt)("h2",{id:"name"},"NAME"),(0,r.kt)("p",null,"podman","-","container","-","cleanup - Clean up the container's network and mountpoints"),(0,r.kt)("h2",{id:"synopsis"},"SYNOPSIS"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"podman container cleanup")," ","[",(0,r.kt)("em",{parentName:"p"},"options"),"]"," ",(0,r.kt)("em",{parentName:"p"},"container")," ","[",(0,r.kt)("em",{parentName:"p"},"container")," ...]"),(0,r.kt)("h2",{id:"description"},"DESCRIPTION"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"podman container cleanup")," cleans up exited ",(0,r.kt)("em",{parentName:"p"},"containers")," by removing all mountpoints and network configuration from the host. The ",(0,r.kt)("em",{parentName:"p"},"container name")," or ",(0,r.kt)("em",{parentName:"p"},"ID")," can be used. The cleanup command does not remove the ",(0,r.kt)("em",{parentName:"p"},"containers"),". Running ",(0,r.kt)("em",{parentName:"p"},"containers")," will not be cleaned up.\\\nSometimes container mount points and network stacks can remain if the podman command was killed or the ",(0,r.kt)("em",{parentName:"p"},"container")," ran in daemon mode. This command is automatically executed when ",(0,r.kt)("em",{parentName:"p"},"containers")," are run in daemon mode by the ",(0,r.kt)("inlineCode",{parentName:"p"},"conmon process")," when the ",(0,r.kt)("em",{parentName:"p"},"container")," exits."),(0,r.kt)("h2",{id:"options"},"OPTIONS"),(0,r.kt)("h4",{id:"--all--a"},(0,r.kt)("strong",{parentName:"h4"},"--all"),", ",(0,r.kt)("strong",{parentName:"h4"},"-a")),(0,r.kt)("p",null,"Clean up all ",(0,r.kt)("em",{parentName:"p"},"containers"),".\\\nThe default is ",(0,r.kt)("strong",{parentName:"p"},"false"),".\\\n",(0,r.kt)("em",{parentName:"p"},"IMPORTANT: This OPTION does not need a container name or ID as input argument.")),(0,r.kt)("h4",{id:"--execsession"},(0,r.kt)("strong",{parentName:"h4"},"--exec"),"=",(0,r.kt)("em",{parentName:"h4"},"session")),(0,r.kt)("p",null,"Clean up an exec session for a single ",(0,r.kt)("em",{parentName:"p"},"container"),".\nCan only be specified if a single ",(0,r.kt)("em",{parentName:"p"},"container")," is being cleaned up (conflicts with ",(0,r.kt)("strong",{parentName:"p"},"--all")," as such). If ",(0,r.kt)("strong",{parentName:"p"},"--rm")," is not specified, temporary files for the exec session will be cleaned up; if it is, the exec session will be removed from the ",(0,r.kt)("em",{parentName:"p"},"container"),".\\\n",(0,r.kt)("em",{parentName:"p"},"IMPORTANT: Conflicts with ",(0,r.kt)("strong",{parentName:"em"},"--rmi")," as the container is not being cleaned up so the image cannot be removed.")),(0,r.kt)("h4",{id:"--latest--l"},(0,r.kt)("strong",{parentName:"h4"},"--latest"),", ",(0,r.kt)("strong",{parentName:"h4"},"-l")),(0,r.kt)("p",null,"Instead of providing the ",(0,r.kt)("em",{parentName:"p"},"container ID")," or ",(0,r.kt)("em",{parentName:"p"},"name"),", use the last created ",(0,r.kt)("em",{parentName:"p"},"container"),". If other methods than Podman are used to run ",(0,r.kt)("em",{parentName:"p"},"containers")," such as ",(0,r.kt)("inlineCode",{parentName:"p"},"CRI-O"),", the last started ",(0,r.kt)("em",{parentName:"p"},"container")," could be from either of those methods.\\\nThe default is ",(0,r.kt)("strong",{parentName:"p"},"false"),".\\\n",(0,r.kt)("em",{parentName:"p"},"IMPORTANT: This OPTION is not available with the remote Podman client, including Mac and Windows (excluding WSL2) machines. This OPTION does not need a container name or ID as input argument.")),(0,r.kt)("h4",{id:"--rm"},(0,r.kt)("strong",{parentName:"h4"},"--rm")),(0,r.kt)("p",null,"After cleanup, remove the ",(0,r.kt)("em",{parentName:"p"},"container")," entirely.\\\nThe default is ",(0,r.kt)("strong",{parentName:"p"},"false"),"."),(0,r.kt)("h4",{id:"--rmi"},(0,r.kt)("strong",{parentName:"h4"},"--rmi")),(0,r.kt)("p",null,"After cleanup, remove the image entirely.\\\nThe default is ",(0,r.kt)("strong",{parentName:"p"},"false"),"."),(0,r.kt)("h2",{id:"examples"},"EXAMPLES"),(0,r.kt)("p",null,'Clean up the container "mywebserver".'),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"$ podman container cleanup mywebserver\n")),(0,r.kt)("p",null,'Clean up the containers with the names "mywebserver", "myflaskserver", "860a4b23".'),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"$ podman container cleanup mywebserver myflaskserver 860a4b23\n")),(0,r.kt)("h2",{id:"see-also"},"SEE ALSO"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"/websites-new/docs/podman"},"podman(1)")),", ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"/websites-new/docs/podman-container/"},"podman-container(1)")),", ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"https://github.com/containers/conmon/blob/main/docs/conmon.8.md"},"conmon(8)"))),(0,r.kt)("h2",{id:"history"},"HISTORY"),(0,r.kt)("p",null,"Jun 2018, Originally compiled by Dan Walsh ",(0,r.kt)("a",{parentName:"p",href:"mailto:dwalsh@redhat.com"},"dwalsh@redhat.com")))}d.isMDXComponent=!0}}]);