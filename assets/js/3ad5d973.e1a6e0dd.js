"use strict";(self.webpackChunkpodman=self.webpackChunkpodman||[]).push([[7014],{3905:(e,n,t)=>{t.d(n,{Zo:()=>d,kt:()=>u});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function p(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=a.createContext({}),c=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):p(p({},n),e)),t},d=function(e){var n=c(e.components);return a.createElement(s.Provider,{value:n},e.children)},m="mdxType",l={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},f=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),m=c(t),f=r,u=m["".concat(s,".").concat(f)]||m[f]||l[f]||o;return t?a.createElement(u,p(p({ref:n},d),{},{components:t})):a.createElement(u,p({ref:n},d))}));function u(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,p=new Array(o);p[0]=f;var i={};for(var s in n)hasOwnProperty.call(n,s)&&(i[s]=n[s]);i.originalType=e,i[m]="string"==typeof e?e:r,p[1]=i;for(var c=2;c<o;c++)p[c]=t[c];return a.createElement.apply(null,p)}return a.createElement.apply(null,t)}f.displayName="MDXCreateElement"},5044:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>p,default:()=>l,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var a=t(7462),r=(t(7294),t(3905));const o={},p=void 0,i={unversionedId:"podman-inspect",id:"podman-inspect",title:"podman-inspect",description:"% podman-inspect 1",source:"@site/docs/podman-inspect.md",sourceDirName:".",slug:"/podman-inspect",permalink:"/websites-new/docs/podman-inspect",draft:!1,editUrl:"https://github.com/containers/website-new/docs/podman-inspect.md",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"podman-init",permalink:"/websites-new/docs/podman-init"},next:{title:"podman-kill",permalink:"/websites-new/docs/podman-kill"}},s={},c=[{value:"NAME",id:"name",level:2},{value:"SYNOPSIS",id:"synopsis",level:2},{value:"DESCRIPTION",id:"description",level:2},{value:"OPTIONS",id:"options",level:2},{value:"<strong>--format</strong>, <strong>-f</strong>=<em>format</em>",id:"--format--fformat",level:4},{value:"<strong>--size</strong>, <strong>-s</strong>",id:"--size--s",level:4},{value:"<strong>--type</strong>, <strong>-t</strong>=<em>type</em>",id:"--type--ttype",level:4},{value:"EXAMPLE",id:"example",level:2},{value:"SEE ALSO",id:"see-also",level:2},{value:"HISTORY",id:"history",level:2}],d={toc:c},m="wrapper";function l(e){let{components:n,...t}=e;return(0,r.kt)(m,(0,a.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"% podman-inspect 1"),(0,r.kt)("h2",{id:"name"},"NAME"),(0,r.kt)("p",null,"podman","-","inspect - Display a container, image, volume, network, or pod's configuration"),(0,r.kt)("h2",{id:"synopsis"},"SYNOPSIS"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"podman inspect")," ","[",(0,r.kt)("em",{parentName:"p"},"options"),"]"," ",(0,r.kt)("em",{parentName:"p"},"name")," ","[...]"),(0,r.kt)("h2",{id:"description"},"DESCRIPTION"),(0,r.kt)("p",null,"This displays the low-level information on containers and images identified by name or ID. By default, this will render\nall results in a JSON array. If the inspect type is all, the order of inspection is: containers, images, volumes, network, pods.\nSo, if a container has the same name as an image, then the container JSON will be returned, and so on.\nIf a format is specified, the given template will be executed for each result."),(0,r.kt)("p",null,"For more inspection options, see also\n",(0,r.kt)("a",{parentName:"p",href:"/websites-new/docs/podman-container/podman-container-inspect"},"podman-container-inspect(1)"),",\n",(0,r.kt)("a",{parentName:"p",href:"/websites-new/docs/podman-image/podman-image-inspect"},"podman-image-inspect(1)"),",\n",(0,r.kt)("a",{parentName:"p",href:"/websites-new/docs/podman-network/podman-network-inspect"},"podman-network-inspect(1)"),",\n",(0,r.kt)("a",{parentName:"p",href:"/websites-new/docs/podman-pod/podman-pod-inspect"},"podman-pod-inspect(1)"),", and\n",(0,r.kt)("a",{parentName:"p",href:"/websites-new/docs/podman-volume/podman-volume-inspect"},"podman-volume-inspect(1)"),"."),(0,r.kt)("h2",{id:"options"},"OPTIONS"),(0,r.kt)("h4",{id:"--format--fformat"},(0,r.kt)("strong",{parentName:"h4"},"--format"),", ",(0,r.kt)("strong",{parentName:"h4"},"-f"),"=",(0,r.kt)("em",{parentName:"h4"},"format")),(0,r.kt)("p",null,"Format the output using the given Go template.\nThe keys of the returned JSON can be used as the values for the --format flag (see examples below)."),(0,r.kt)("p",null,"@@option latest"),(0,r.kt)("h4",{id:"--size--s"},(0,r.kt)("strong",{parentName:"h4"},"--size"),", ",(0,r.kt)("strong",{parentName:"h4"},"-s")),(0,r.kt)("p",null,"In addition to normal output, display the total file size if the type is a container."),(0,r.kt)("h4",{id:"--type--ttype"},(0,r.kt)("strong",{parentName:"h4"},"--type"),", ",(0,r.kt)("strong",{parentName:"h4"},"-t"),"=",(0,r.kt)("em",{parentName:"h4"},"type")),(0,r.kt)("p",null,"Return JSON for the specified type. Type can be 'container', 'image', 'volume', 'network', 'pod', or 'all' (default: all)\n(Only meaningful when invoked as ",(0,r.kt)("em",{parentName:"p"},"podman inspect"),")"),(0,r.kt)("h2",{id:"example"},"EXAMPLE"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'# podman inspect fedora\n[\n    {\n        "Id": "f0858ad3febdf45bb2e5501cb459affffacef081f79eaa436085c3b6d9bd46ca",\n        "Digest": "sha256:d4f7df6b691d61af6cee7328f82f1d8afdef63bc38f58516858ae3045083924a",\n        "RepoTags": [\n            "docker.io/library/fedora:latest"\n        ],\n        "RepoDigests": [\n            "docker.io/library/fedora@sha256:8fa60b88e2a7eac8460b9c0104b877f1aa0cea7fbc03c701b7e545dacccfb433",\n            "docker.io/library/fedora@sha256:d4f7df6b691d61af6cee7328f82f1d8afdef63bc38f58516858ae3045083924a"\n        ],\n        "Parent": "",\n        "Comment": "",\n        "Created": "2019-10-29T03:23:37.695123423Z",\n        "Config": {\n            "Env": [\n                "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",\n                "DISTTAG=f31-updates-candidatecontainer",\n                "FGC=f31-updates-candidate",\n                "FBR=f31-updates-candidate"\n            ],\n            "Cmd": [\n                "/bin/bash"\n            ],\n            "Labels": {\n                "maintainer": "Clement Verna \\u003ccverna@fedoraproject.org\\u003e"\n            }\n        },\n        "Version": "18.06-ce",\n        "Author": "",\n        "Architecture": "amd64",\n        "Os": "linux",\n        "Size": 201096840,\n        "VirtualSize": 201096840,\n        "GraphDriver": {\n            "Name": "overlay",\n            "Data": {\n                "UpperDir": "/home/user/.local/share/containers/storage/overlay/2ae3cee18c8ef9e0d448649747dab81c4f1ca2714a8c4550eff49574cab262c9/diff",\n                "WorkDir": "/home/user/.local/share/containers/storage/overlay/2ae3cee18c8ef9e0d448649747dab81c4f1ca2714a8c4550eff49574cab262c9/work"\n            }\n        },\n        "RootFS": {\n            "Type": "layers",\n            "Layers": [\n                "sha256:2ae3cee18c8ef9e0d448649747dab81c4f1ca2714a8c4550eff49574cab262c9"\n            ]\n        },\n        "Labels": {\n            "maintainer": "Clement Verna \\u003ccverna@fedoraproject.org\\u003e"\n        },\n        "Annotations": {},\n        "ManifestType": "application/vnd.docker.distribution.manifest.v2+json",\n        "User": "",\n        "History": [\n            {\n                "created": "2019-01-16T21:21:55.569693599Z",\n                "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna \\u003ccverna@fedoraproject.org\\u003e",\n                "empty_layer": true\n            },\n            {\n                "created": "2019-09-27T21:21:07.784469821Z",\n                "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f31-updates-candidatecontainer FGC=f31-updates-candidate FBR=f31-updates-candidate",\n                "empty_layer": true\n            },\n            {\n                "created": "2019-10-29T03:23:37.355187998Z",\n                "created_by": "/bin/sh -c #(nop) ADD file:298f828afc880ccde9205fc4418435d5e696ad165e283f0530d0b1a74326d6dc in / "\n            },\n            {\n                "created": "2019-10-29T03:23:37.695123423Z",\n                "created_by": "/bin/sh -c #(nop)  CMD [\\"/bin/bash\\"]",\n                "empty_layer": true\n            }\n        ],\n        "NamesHistory": []\n    }\n]\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'# podman inspect a04 --format "{{.ImageName}}"\nfedora\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'# podman inspect a04 --format "{{.GraphDriver.Name}}"\noverlay\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'# podman image inspect --format "size: {{.Size}}" alpine\nsize:   4405240\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"podman container inspect --latest --format {{.EffectiveCaps}}\n[CAP_CHOWN CAP_DAC_OVERRIDE CAP_FSETID CAP_FOWNER CAP_SETGID CAP_SETUID CAP_SETFCAP CAP_SETPCAP CAP_NET_BIND_SERVICE CAP_KILL]\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'# podman inspect myPod --type pod --format "{{.Name}}"\nmyPod\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'# podman inspect myVolume --type volume --format "{{.Name}}"\nmyVolume\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'# podman inspect nyNetwork --type network --format "{{.name}}"\nmyNetwork\n')),(0,r.kt)("h2",{id:"see-also"},"SEE ALSO"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"/websites-new/docs/podman"},"podman(1)")),", ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"/websites-new/docs/podman-container/podman-container-inspect"},"podman-container-inspect(1)")),", ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"/websites-new/docs/podman-image/podman-image-inspect"},"podman-image-inspect(1)")),", ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"/websites-new/docs/podman-network/podman-network-inspect"},"podman-network-inspect(1)")),", ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"/websites-new/docs/podman-pod/podman-pod-inspect"},"podman-pod-inspect(1)")),", ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"/websites-new/docs/podman-volume/podman-volume-inspect"},"podman-volume-inspect(1)"))),(0,r.kt)("h2",{id:"history"},"HISTORY"),(0,r.kt)("p",null,"July 2017, Originally compiled by Dan Walsh ",(0,r.kt)("a",{parentName:"p",href:"mailto:dwalsh@redhat.com"},"dwalsh@redhat.com")))}l.isMDXComponent=!0}}]);