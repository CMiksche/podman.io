"use strict";(self.webpackChunkpodman=self.webpackChunkpodman||[]).push([[1913],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>h});var o=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=o.createContext({}),s=function(e){var t=o.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},m=function(e){var t=s(e.components);return o.createElement(p.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},c=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,p=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),d=s(n),c=a,h=d["".concat(p,".").concat(c)]||d[c]||u[c]||r;return n?o.createElement(h,i(i({ref:t},m),{},{components:n})):o.createElement(h,i({ref:t},m))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,i=new Array(r);i[0]=c;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[d]="string"==typeof e?e:a,i[1]=l;for(var s=2;s<r;s++)i[s]=n[s];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}c.displayName="MDXCreateElement"},826:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>u,frontMatter:()=>r,metadata:()=>l,toc:()=>s});var o=n(7462),a=(n(7294),n(3905));const r={},i=void 0,l={unversionedId:"commands/podman-volume/podman-volume-create",id:"commands/podman-volume/podman-volume-create",title:"podman-volume-create",description:"% podman-volume-create 1",source:"@site/docs/commands/podman-volume/podman-volume-create.md",sourceDirName:"commands/podman-volume",slug:"/commands/podman-volume/podman-volume-create",permalink:"/docs/commands/podman-volume/podman-volume-create",draft:!1,editUrl:"https://github.com/containers/website-new/docs/commands/podman-volume/podman-volume-create.md",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"podman-volume",permalink:"/docs/commands/podman-volume/"},next:{title:"podman-volume-exists",permalink:"/docs/commands/podman-volume/podman-volume-exists"}},p={},s=[{value:"NAME",id:"name",level:2},{value:"SYNOPSIS",id:"synopsis",level:2},{value:"DESCRIPTION",id:"description",level:2},{value:"OPTIONS",id:"options",level:2},{value:"<strong>--driver</strong>, <strong>-d</strong>=<em>driver</em>",id:"--driver--ddriver",level:4},{value:"<strong>--help</strong>",id:"--help",level:4},{value:"<strong>--ignore</strong>",id:"--ignore",level:4},{value:"<strong>--label</strong>, <strong>-l</strong>=<em>label</em>",id:"--label--llabel",level:4},{value:"<strong>--opt</strong>, <strong>-o</strong>=<em>option</em>",id:"--opt--ooption",level:4},{value:"EXAMPLES",id:"examples",level:2},{value:"QUOTAS",id:"quotas",level:2},{value:"SEE ALSO",id:"see-also",level:2},{value:"HISTORY",id:"history",level:2}],m={toc:s},d="wrapper";function u(e){let{components:t,...n}=e;return(0,a.kt)(d,(0,o.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"% podman-volume-create 1"),(0,a.kt)("h2",{id:"name"},"NAME"),(0,a.kt)("p",null,"podman","-","volume","-","create - Create a new volume"),(0,a.kt)("h2",{id:"synopsis"},"SYNOPSIS"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"podman volume create")," ","[",(0,a.kt)("em",{parentName:"p"},"options"),"][*name*]"),(0,a.kt)("h2",{id:"description"},"DESCRIPTION"),(0,a.kt)("p",null,"Creates an empty volume and prepares it to be used by containers. The volume\ncan be created with a specific name, if a name is not given a random name is\ngenerated. You can add metadata to the volume by using the ",(0,a.kt)("strong",{parentName:"p"},"--label")," flag and\ndriver options can be set using the ",(0,a.kt)("strong",{parentName:"p"},"--opt")," flag."),(0,a.kt)("h2",{id:"options"},"OPTIONS"),(0,a.kt)("h4",{id:"--driver--ddriver"},(0,a.kt)("strong",{parentName:"h4"},"--driver"),", ",(0,a.kt)("strong",{parentName:"h4"},"-d"),"=",(0,a.kt)("em",{parentName:"h4"},"driver")),(0,a.kt)("p",null,"Specify the volume driver name (default ",(0,a.kt)("strong",{parentName:"p"},"local"),").\nThere are two drivers supported by Podman itself: ",(0,a.kt)("strong",{parentName:"p"},"local")," and ",(0,a.kt)("strong",{parentName:"p"},"image"),"."),(0,a.kt)("p",null,"The ",(0,a.kt)("strong",{parentName:"p"},"local")," driver uses a directory on disk as the backend by default, but can also use the ",(0,a.kt)("strong",{parentName:"p"},"mount(8)")," command to mount a filesystem as the volume if ",(0,a.kt)("strong",{parentName:"p"},"--opt")," is specified."),(0,a.kt)("p",null,"The ",(0,a.kt)("strong",{parentName:"p"},"image")," driver uses an image as the backing store of for the volume.\nAn overlay filesystem will be created, which allows changes to the volume to be committed as a new layer on top of the image."),(0,a.kt)("p",null,"Using a value other than ",(0,a.kt)("strong",{parentName:"p"},"local")," or ",(0,a.kt)("strong",{parentName:"p"},"image"),", Podman will attempt to create the volume using a volume plugin with the given name.\nSuch plugins must be defined in the ",(0,a.kt)("strong",{parentName:"p"},"volume_plugins")," section of the ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("a",{parentName:"strong",href:"https://github.com/containers/common/blob/main/docs/containers.conf.5.md"},"containers.conf(5)"))," configuration file."),(0,a.kt)("h4",{id:"--help"},(0,a.kt)("strong",{parentName:"h4"},"--help")),(0,a.kt)("p",null,"Print usage statement"),(0,a.kt)("h4",{id:"--ignore"},(0,a.kt)("strong",{parentName:"h4"},"--ignore")),(0,a.kt)("p",null,"Don't fail if the named volume already exists, instead just print the name. Note that the new options are not applied to the existing volume."),(0,a.kt)("h4",{id:"--label--llabel"},(0,a.kt)("strong",{parentName:"h4"},"--label"),", ",(0,a.kt)("strong",{parentName:"h4"},"-l"),"=",(0,a.kt)("em",{parentName:"h4"},"label")),(0,a.kt)("p",null,"Set metadata for a volume (e.g., --label mykey=value)."),(0,a.kt)("h4",{id:"--opt--ooption"},(0,a.kt)("strong",{parentName:"h4"},"--opt"),", ",(0,a.kt)("strong",{parentName:"h4"},"-o"),"=",(0,a.kt)("em",{parentName:"h4"},"option")),(0,a.kt)("p",null,"Set driver specific options.\nFor the default driver, ",(0,a.kt)("strong",{parentName:"p"},"local"),", this allows a volume to be configured to mount a filesystem on the host."),(0,a.kt)("p",null,"For the ",(0,a.kt)("inlineCode",{parentName:"p"},"local")," driver the following options are supported: ",(0,a.kt)("inlineCode",{parentName:"p"},"type"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"device"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"o"),", and ",(0,a.kt)("inlineCode",{parentName:"p"},"[no]copy"),"."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"The ",(0,a.kt)("inlineCode",{parentName:"li"},"type")," option sets the type of the filesystem to be mounted, and is equivalent to the ",(0,a.kt)("inlineCode",{parentName:"li"},"-t")," flag to ",(0,a.kt)("strong",{parentName:"li"},"mount(8)"),"."),(0,a.kt)("li",{parentName:"ul"},"The ",(0,a.kt)("inlineCode",{parentName:"li"},"device")," option sets the device to be mounted, and is equivalent to the ",(0,a.kt)("inlineCode",{parentName:"li"},"device")," argument to ",(0,a.kt)("strong",{parentName:"li"},"mount(8)"),"."),(0,a.kt)("li",{parentName:"ul"},"The ",(0,a.kt)("inlineCode",{parentName:"li"},"copy")," option enables copying files from the container image path where the mount is created to the newly created volume on the first run. ",(0,a.kt)("inlineCode",{parentName:"li"},"copy")," is the default.")),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"o")," option sets options for the mount, and is equivalent to the filesystem\noptions (also ",(0,a.kt)("inlineCode",{parentName:"p"},"-o"),") passed to ",(0,a.kt)("strong",{parentName:"p"},"mount(8)")," with the following exceptions:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"The ",(0,a.kt)("inlineCode",{parentName:"li"},"o")," option supports ",(0,a.kt)("inlineCode",{parentName:"li"},"uid")," and ",(0,a.kt)("inlineCode",{parentName:"li"},"gid")," options to set the UID and GID of the created volume that are not normally supported by ",(0,a.kt)("strong",{parentName:"li"},"mount(8)"),"."),(0,a.kt)("li",{parentName:"ul"},"The ",(0,a.kt)("inlineCode",{parentName:"li"},"o")," option supports the ",(0,a.kt)("inlineCode",{parentName:"li"},"size")," option to set the maximum size of the created volume, the ",(0,a.kt)("inlineCode",{parentName:"li"},"inodes")," option to set the maximum number of inodes for the volume and ",(0,a.kt)("inlineCode",{parentName:"li"},"noquota"),' to completely disable quota support even for tracking of disk usage. Currently these flags are only supported on "xfs" file system mounted with the ',(0,a.kt)("inlineCode",{parentName:"li"},"prjquota")," flag described in the ",(0,a.kt)("strong",{parentName:"li"},"xfs_quota(8)")," man page."),(0,a.kt)("li",{parentName:"ul"},"The ",(0,a.kt)("inlineCode",{parentName:"li"},"o")," option supports using volume options other than the UID/GID options with the ",(0,a.kt)("strong",{parentName:"li"},"local")," driver and requires root privileges."),(0,a.kt)("li",{parentName:"ul"},"The ",(0,a.kt)("inlineCode",{parentName:"li"},"o")," options supports the ",(0,a.kt)("inlineCode",{parentName:"li"},"timeout")," option which allows users to set a driver specific timeout in seconds before volume creation fails. For example, ",(0,a.kt)("strong",{parentName:"li"},"--opt=o=timeout=10")," sets a driver timeout of 10 seconds.")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("em",{parentName:"strong"},"Note"))," Do not confuse the ",(0,a.kt)("inlineCode",{parentName:"p"},"--opt,-o")," create option with the ",(0,a.kt)("inlineCode",{parentName:"p"},"-o")," mount option. For example, with ",(0,a.kt)("inlineCode",{parentName:"p"},"podman volume create"),", use ",(0,a.kt)("inlineCode",{parentName:"p"},"-o=o=uid=1000")," ",(0,a.kt)("em",{parentName:"p"},"not")," ",(0,a.kt)("inlineCode",{parentName:"p"},"-o=uid=1000"),"."),(0,a.kt)("p",null,"For the ",(0,a.kt)("strong",{parentName:"p"},"image")," driver, the only supported option is ",(0,a.kt)("inlineCode",{parentName:"p"},"image"),", which specifies the image the volume is based on.\nThis option is mandatory when using the ",(0,a.kt)("strong",{parentName:"p"},"image")," driver."),(0,a.kt)("p",null,"When not using the ",(0,a.kt)("strong",{parentName:"p"},"local")," and ",(0,a.kt)("strong",{parentName:"p"},"image")," drivers, the given options are passed directly to the volume plugin. In this case, supported options are dictated by the plugin in question, not Podman."),(0,a.kt)("h2",{id:"examples"},"EXAMPLES"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"$ podman volume create myvol\n\n$ podman volume create\n\n$ podman volume create --label foo=bar myvol\n\n# podman volume create --opt device=tmpfs --opt type=tmpfs --opt o=nodev,noexec myvol\n\n# podman volume create --opt device=tmpfs --opt type=tmpfs --opt o=uid=1000,gid=1000 testvol\n\n# podman volume create --driver image --opt image=fedora:latest fedoraVol\n")),(0,a.kt)("h2",{id:"quotas"},"QUOTAS"),(0,a.kt)("p",null,"podman volume create uses ",(0,a.kt)("inlineCode",{parentName:"p"},"XFS project quota controls")," for controlling the size and the number of inodes of builtin volumes. The directory used to store the volumes must be an",(0,a.kt)("inlineCode",{parentName:"p"},"XFS")," file system and be mounted with the ",(0,a.kt)("inlineCode",{parentName:"p"},"pquota")," option."),(0,a.kt)("p",null,"Example /etc/fstab entry:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"/dev/podman/podman-var /var xfs defaults,x-systemd.device-timeout=0,pquota 1 2\n")),(0,a.kt)("p",null,"Podman generates project IDs for each builtin volume, but these project IDs need to be unique for the XFS file system. These project IDs by default are generated randomly, with a potential for overlap with other quotas on the same file\nsystem."),(0,a.kt)("p",null,"The xfs_quota tool can be used to assign a project ID to the storage driver directory, e.g.:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"echo 100000:/var/lib/containers/storage/overlay >> /etc/projects\necho 200000:/var/lib/containers/storage/volumes >> /etc/projects\necho storage:100000 >> /etc/projid\necho volumes:200000 >> /etc/projid\nxfs_quota -x -c 'project -s storage volumes' /<xfs mount point>\n")),(0,a.kt)("p",null,"In the example above we are configuring the overlay storage driver for newly\ncreated containers as well as volumes to use project IDs with a ",(0,a.kt)("strong",{parentName:"p"},"start offset"),".\nAll containers will be assigned larger project IDs (e.g. >= 100000).\nAll volume assigned project IDs larger project IDs starting with 200000.\nThis prevents xfs_quota management conflicts with containers/storage."),(0,a.kt)("h2",{id:"see-also"},"SEE ALSO"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("a",{parentName:"strong",href:"/docs/podman"},"podman(1)")),", ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("a",{parentName:"strong",href:"https://github.com/containers/common/blob/main/docs/containers.conf.5.md"},"containers.conf(5)")),", ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("a",{parentName:"strong",href:"/docs/commands/podman-volume/"},"podman-volume(1)")),", ",(0,a.kt)("strong",{parentName:"p"},"mount(8)"),", ",(0,a.kt)("strong",{parentName:"p"},"xfs_quota(8)"),", ",(0,a.kt)("strong",{parentName:"p"},"xfs_quota(8)"),", ",(0,a.kt)("strong",{parentName:"p"},"projects(5)"),", ",(0,a.kt)("strong",{parentName:"p"},"projid(5)")),(0,a.kt)("h2",{id:"history"},"HISTORY"),(0,a.kt)("p",null,"January 2020, updated with information on volume plugins by Matthew Heon ",(0,a.kt)("a",{parentName:"p",href:"mailto:mheon@redhat.com"},"mheon@redhat.com"),"\nNovember 2018, Originally compiled by Urvashi Mohnani ",(0,a.kt)("a",{parentName:"p",href:"mailto:umohnani@redhat.com"},"umohnani@redhat.com")))}u.isMDXComponent=!0}}]);