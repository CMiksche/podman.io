"use strict";(self.webpackChunkpodman=self.webpackChunkpodman||[]).push([[3372],{3905:(n,e,t)=>{t.d(e,{Zo:()=>c,kt:()=>f});var r=t(7294);function o(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function a(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function i(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?a(Object(t),!0).forEach((function(e){o(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function s(n,e){if(null==n)return{};var t,r,o=function(n,e){if(null==n)return{};var t,r,o={},a=Object.keys(n);for(r=0;r<a.length;r++)t=a[r],e.indexOf(t)>=0||(o[t]=n[t]);return o}(n,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(n);for(r=0;r<a.length;r++)t=a[r],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(o[t]=n[t])}return o}var l=r.createContext({}),p=function(n){var e=r.useContext(l),t=e;return n&&(t="function"==typeof n?n(e):i(i({},e),n)),t},c=function(n){var e=p(n.components);return r.createElement(l.Provider,{value:e},n.children)},m="mdxType",d={inlineCode:"code",wrapper:function(n){var e=n.children;return r.createElement(r.Fragment,{},e)}},u=r.forwardRef((function(n,e){var t=n.components,o=n.mdxType,a=n.originalType,l=n.parentName,c=s(n,["components","mdxType","originalType","parentName"]),m=p(t),u=o,f=m["".concat(l,".").concat(u)]||m[u]||d[u]||a;return t?r.createElement(f,i(i({ref:e},c),{},{components:t})):r.createElement(f,i({ref:e},c))}));function f(n,e){var t=arguments,o=e&&e.mdxType;if("string"==typeof n||o){var a=t.length,i=new Array(a);i[0]=u;var s={};for(var l in e)hasOwnProperty.call(e,l)&&(s[l]=e[l]);s.originalType=n,s[m]="string"==typeof n?n:o,i[1]=s;for(var p=2;p<a;p++)i[p]=t[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},2437:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>s,toc:()=>p});var r=t(7462),o=(t(7294),t(3905));const a={},i=void 0,s={unversionedId:"commands/podman-info",id:"commands/podman-info",title:"podman-info",description:"% podman-info 1",source:"@site/docs/commands/podman-info.md",sourceDirName:"commands",slug:"/commands/podman-info",permalink:"/website-new/docs/commands/podman-info",draft:!1,editUrl:"https://github.com/containers/website-new/docs/commands/podman-info.md",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"podman-import",permalink:"/website-new/docs/commands/podman-import"},next:{title:"podman-init",permalink:"/website-new/docs/commands/podman-init"}},l={},p=[{value:"NAME",id:"name",level:2},{value:"SYNOPSIS",id:"synopsis",level:2},{value:"DESCRIPTION",id:"description",level:2},{value:"OPTIONS",id:"options",level:2},{value:"<strong>--format</strong>, <strong>-f</strong>=<em>format</em>",id:"--format--fformat",level:4},{value:"EXAMPLES",id:"examples",level:2},{value:"Extracting the list of container registries with a Go template",id:"extracting-the-list-of-container-registries-with-a-go-template",level:4},{value:"Extracting the list of container registries from JSON with jq",id:"extracting-the-list-of-container-registries-from-json-with-jq",level:4},{value:"SEE ALSO",id:"see-also",level:2}],c={toc:p},m="wrapper";function d(n){let{components:e,...t}=n;return(0,o.kt)(m,(0,r.Z)({},c,t,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"% podman-info 1"),(0,o.kt)("h2",{id:"name"},"NAME"),(0,o.kt)("p",null,"podman","-","info - Displays Podman related system information"),(0,o.kt)("h2",{id:"synopsis"},"SYNOPSIS"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"podman info")," ","[",(0,o.kt)("em",{parentName:"p"},"options"),"]"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"podman system info")," ","[",(0,o.kt)("em",{parentName:"p"},"options"),"]"),(0,o.kt)("h2",{id:"description"},"DESCRIPTION"),(0,o.kt)("p",null,"Displays information pertinent to the host, current storage stats, configured container registries, and build of podman."),(0,o.kt)("h2",{id:"options"},"OPTIONS"),(0,o.kt)("h4",{id:"--format--fformat"},(0,o.kt)("strong",{parentName:"h4"},"--format"),", ",(0,o.kt)("strong",{parentName:"h4"},"-f"),"=",(0,o.kt)("em",{parentName:"h4"},"format")),(0,o.kt)("p",null,'Change output format to "json" or a Go template.'),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"th"},"Placeholder")),(0,o.kt)("th",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"th"},"Info pertaining to ...")))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},".Host ..."),(0,o.kt)("td",{parentName:"tr",align:null},"...the host on which podman is running")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},".Plugins ..."),(0,o.kt)("td",{parentName:"tr",align:null},"...external plugins")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},".Registries ..."),(0,o.kt)("td",{parentName:"tr",align:null},"...configured registries")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},".Store ..."),(0,o.kt)("td",{parentName:"tr",align:null},"...the storage driver and paths")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},".Version ..."),(0,o.kt)("td",{parentName:"tr",align:null},"...podman version")))),(0,o.kt)("p",null,"Each of the above branch out into further subfields, more than can\nreasonably be enumerated in this document."),(0,o.kt)("h2",{id:"examples"},"EXAMPLES"),(0,o.kt)("p",null,"Run ",(0,o.kt)("inlineCode",{parentName:"p"},"podman info")," for a YAML formatted response:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'$ podman info\nhost:\n  arch: amd64\n  buildahVersion: 1.23.0\n  cgroupControllers: []\n  cgroupManager: systemd\n  cgroupVersion: v2\n  conmon:\n    package: conmon-2.0.29-2.fc34.x86_64\n    path: /usr/bin/conmon\n    version: \'conmon version 2.0.29, commit: \'\n cpu_utilization:\n   idle_percent: 96.84\n   system_percent: 0.71\n   user_percent: 2.45\n  cpus: 8\n  distribution:\n    distribution: fedora\n    variant: workstation\n    version: "34"\n  eventLogger: journald\n  hostname: localhost.localdomain\n  idMappings:\n    gidmap:\n    - container_id: 0\n      host_id: 3267\n      size: 1\n    - container_id: 1\n      host_id: 100000\n      size: 65536\n    uidmap:\n    - container_id: 0\n      host_id: 3267\n      size: 1\n    - container_id: 1\n      host_id: 100000\n      size: 65536\n  kernel: 533-200.fc34.x86_64\n  linkmode: dynamic\n  logDriver: journald\n  memFree: 1833385984\n  memTotal: 16401895424\n  ociRuntime:\n    name: crun\n    package: crun-1.0-1.fc34.x86_64\n    path: /usr/bin/crun\n    version: |-\n      crun version 1.0\n      commit: 139dc6971e2f1d931af520188763e984d6cdfbf8\n      spec: 1.0.0\n      +SYSTEMD +SELINUX +APPARMOR +CAP +SECCOMP +EBPF +CRIU +YAJL\n  os: linux\n  remoteSocket:\n    path: /run/user/3267/podman/podman.sock\n  security:\n    apparmorEnabled: false\n    capabilities: CAP_CHOWN,CAP_DAC_OVERRIDE,CAP_FOWNER,CAP_FSETID,CAP_KILL,CAP_NET_BIND_SERVICE,CAP_SETFCAP,CAP_SETGID,CAP_SETPCAP,CAP_SETUID\n    rootless: true\n    seccompEnabled: true\n    seccompProfilePath: /usr/share/containers/seccomp.json\n    selinuxEnabled: true\n  serviceIsRemote: false\n  slirp4netns:\n    executable: /bin/slirp4netns\n    package: slirp4netns-12-2.fc34.x86_64\n    version: |-\n      slirp4netns version 12\n      commit: 7a104a101aa3278a2152351a082a6df71f57c9a3\n      libslirp: 4.4.0\n      SLIRP_CONFIG_VERSION_MAX: 3\n      libseccomp: 2.5.0\n  swapFree: 15687475200\n  swapTotal: 16886259712\n  uptime: 47h 15m 9.91s (Approximately 1.96 days)\nplugins:\n  log:\n  - k8s-file\n  - none\n  - journald\n  network:\n  - bridge\n  - macvlan\n  volume:\n  - local\nregistries:\n  search:\n  - registry.fedoraproject.org\n  - registry.access.redhat.com\n  - docker.io\n  - quay.io\nstore:\n  configFile: /home/dwalsh/.config/containers/storage.conf\n  containerStore:\n    number: 9\n    paused: 0\n    running: 1\n    stopped: 8\n  graphDriverName: overlay\n  graphOptions: {}\n  graphRoot: /home/dwalsh/.local/share/containers/storage\n  graphRootAllocated: 510389125120\n  graphRootUsed: 129170714624\n  graphStatus:\n    Backing Filesystem: extfs\n    Native Overlay Diff: "true"\n    Supports d_type: "true"\n    Using metacopy: "false"\n  imageCopyTmpDir: /home/dwalsh/.local/share/containers/storage/tmp\n  imageStore:\n    number: 5\n  runRoot: /run/user/3267/containers\n  transientStore: false\n  volumePath: /home/dwalsh/.local/share/containers/storage/volumes\nversion:\n  APIVersion: 4.0.0\n  Built: 1631648722\n  BuiltTime: Tue Sep 14 15:45:22 2021\n  GitCommit: 23677f92dd83e96d2bc8f0acb611865fb8b1a56d\n  GoVersion: go16.6\n  OsArch: linux/amd64\n  Version: 4.0.0\n')),(0,o.kt)("p",null,"Run ",(0,o.kt)("inlineCode",{parentName:"p"},"podman info --format json")," for a JSON formatted response:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'$ podman info --format json\n{\n  "host": {\n    "arch": "amd64",\n    "buildahVersion": "1.23.0",\n    "cgroupManager": "systemd",\n    "cgroupVersion": "v2",\n    "cgroupControllers": [],\n    "conmon": {\n      "package": "conmon-2.0.29-2.fc34.x86_64",\n      "path": "/usr/bin/conmon",\n      "version": "conmon version 2.0.29, commit: "\n    },\n    "cpus": 8,\n    "distribution": {\n      "distribution": "fedora",\n      "version": "34"\n    },\n    "eventLogger": "journald",\n    "hostname": "localhost.localdomain",\n    "idMappings": {\n      "gidmap": [\n    {\n      "container_id": 0,\n      "host_id": 3267,\n      "size": 1\n    },\n    {\n      "container_id": 1,\n      "host_id": 100000,\n      "size": 65536\n    }\n      ],\n      "uidmap": [\n    {\n      "container_id": 0,\n      "host_id": 3267,\n      "size": 1\n    },\n    {\n      "container_id": 1,\n      "host_id": 100000,\n      "size": 65536\n    }\n      ]\n    },\n    "kernel": "533-200.fc34.x86_64",\n    "logDriver": "journald",\n    "memFree": 1785753600,\n    "memTotal": 16401895424,\n    "ociRuntime": {\n      "name": "crun",\n      "package": "crun-1.0-1.fc34.x86_64",\n      "path": "/usr/bin/crun",\n      "version": "crun version 1.0\\ncommit: 139dc6971e2f1d931af520188763e984d6cdfbf8\\nspec: 1.0.0\\n+SYSTEMD +SELINUX +APPARMOR +CAP +SECCOMP +EBPF +CRIU +YAJL"\n    },\n    "os": "linux",\n    "remoteSocket": {\n      "path": "/run/user/3267/podman/podman.sock"\n    },\n    "serviceIsRemote": false,\n    "security": {\n      "apparmorEnabled": false,\n      "capabilities": "CAP_CHOWN,CAP_DAC_OVERRIDE,CAP_FOWNER,CAP_FSETID,CAP_KILL,CAP_NET_BIND_SERVICE,CAP_SETFCAP,CAP_SETGID,CAP_SETPCAP,CAP_SETUID",\n      "rootless": true,\n      "seccompEnabled": true,\n      "seccompProfilePath": "/usr/share/containers/seccomp.json",\n      "selinuxEnabled": true\n    },\n    "slirp4netns": {\n      "executable": "/bin/slirp4netns",\n      "package": "slirp4netns-12-2.fc34.x86_64",\n      "version": "slirp4netns version 12\\ncommit: 7a104a101aa3278a2152351a082a6df71f57c9a3\\nlibslirp: 4.4.0\\nSLIRP_CONFIG_VERSION_MAX: 3\\nlibseccomp: 2.5.0"\n    },\n    "swapFree": 15687475200,\n    "swapTotal": 16886259712,\n    "uptime": "47h 17m 29.75s (Approximately 1.96 days)",\n    "linkmode": "dynamic"\n  },\n  "store": {\n    "configFile": "/home/dwalsh/.config/containers/storage.conf",\n    "containerStore": {\n      "number": 9,\n      "paused": 0,\n      "running": 1,\n      "stopped": 8\n    },\n    "graphDriverName": "overlay",\n    "graphOptions": {\n\n    },\n    "graphRoot": "/home/dwalsh/.local/share/containers/storage",\n    "graphStatus": {\n      "Backing Filesystem": "extfs",\n      "Native Overlay Diff": "true",\n      "Supports d_type": "true",\n      "Using metacopy": "false"\n    },\n    "imageCopyTmpDir": "/home/dwalsh/.local/share/containers/storage/tmp",\n    "imageStore": {\n      "number": 5\n    },\n    "runRoot": "/run/user/3267/containers",\n    "volumePath": "/home/dwalsh/.local/share/containers/storage/volumes",\n    "transientStore": false\n  },\n  "registries": {\n    "search": [\n  "registry.fedoraproject.org",\n  "registry.access.redhat.com",\n  "docker.io",\n  "quay.io"\n]\n  },\n  "plugins": {\n    "volume": [\n      "local"\n    ],\n    "network": [\n      "bridge",\n      "macvlan"\n    ],\n    "log": [\n      "k8s-file",\n      "none",\n      "journald"\n    ]\n  },\n  "version": {\n    "APIVersion": "4.0.0",\n    "Version": "4.0.0",\n    "GoVersion": "go16.6",\n    "GitCommit": "23677f92dd83e96d2bc8f0acb611865fb8b1a56d",\n    "BuiltTime": "Tue Sep 14 15:45:22 2021",\n    "Built": 1631648722,\n    "OsArch": "linux/amd64"\n  }\n}\n')),(0,o.kt)("h4",{id:"extracting-the-list-of-container-registries-with-a-go-template"},"Extracting the list of container registries with a Go template"),(0,o.kt)("p",null,"If shell completion is enabled, type ",(0,o.kt)("inlineCode",{parentName:"p"},"podman info --format={{.")," and then press ",(0,o.kt)("inlineCode",{parentName:"p"},"[TAB]")," twice."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"$ podman info --format={{.\n{{.Host.         {{.Plugins.      {{.Registries}}  {{.Store.        {{.Version.\n")),(0,o.kt)("p",null,"Press ",(0,o.kt)("inlineCode",{parentName:"p"},"R")," ",(0,o.kt)("inlineCode",{parentName:"p"},"[TAB]")," ",(0,o.kt)("inlineCode",{parentName:"p"},"[ENTER]")," to print the registries information."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"$ podman info -f {{.Registries}}\nmap[search:[registry.fedoraproject.org registry.access.redhat.com docker.io quay.io]]\n$\n")),(0,o.kt)("p",null,"The output still contains a map and an array. The map value can be extracted with"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"$ podman info -f '{{index .Registries \"search\"}}'\n[registry.fedoraproject.org registry.access.redhat.com docker.io quay.io]\n")),(0,o.kt)("p",null,"The array can be printed as one entry per line"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"$ podman info -f '{{range index .Registries \"search\"}}{{.}}\\n{{end}}'\nregistry.fedoraproject.org\nregistry.access.redhat.com\ndocker.io\nquay.io\n\n")),(0,o.kt)("h4",{id:"extracting-the-list-of-container-registries-from-json-with-jq"},"Extracting the list of container registries from JSON with jq"),(0,o.kt)("p",null,"The command-line JSON processor ",(0,o.kt)("a",{parentName:"p",href:"https://stedolan.github.io/jq/"},(0,o.kt)("strong",{parentName:"a"},"jq"))," can be used to extract the list\nof container registries."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'$ podman info -f json | jq \'.registries["search"]\'\n[\n  "registry.fedoraproject.org",\n  "registry.access.redhat.com",\n  "docker.io",\n  "quay.io"\n]\n')),(0,o.kt)("p",null,"The array can be printed as one entry per line"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"$ podman info -f json | jq -r '.registries[\"search\"] | .[]'\nregistry.fedoraproject.org\nregistry.access.redhat.com\ndocker.io\nquay.io\n")),(0,o.kt)("p",null,"Note, the Go template struct fields start with upper case. When running ",(0,o.kt)("inlineCode",{parentName:"p"},"podman info")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"podman info --format=json"),", the same names start with lower case."),(0,o.kt)("h2",{id:"see-also"},"SEE ALSO"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("a",{parentName:"strong",href:"/website-new/docs/podman"},"podman(1)")),", ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("a",{parentName:"strong",href:"https://github.com/containers/image/blob/main/docs/containers-registries.conf.5.md"},"containers-registries.conf(5)")),", ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("a",{parentName:"strong",href:"https://github.com/containers/storage/blob/main/docs/containers-storage.conf.5.md"},"containers-storage.conf(5)"))))}d.isMDXComponent=!0}}]);