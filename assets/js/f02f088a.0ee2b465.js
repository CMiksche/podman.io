"use strict";(self.webpackChunkpodman=self.webpackChunkpodman||[]).push([[2509],{3905:(e,n,t)=>{t.d(n,{Zo:()=>l,kt:()=>u});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var p=r.createContext({}),d=function(e){var n=r.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},l=function(e){var n=d(e.components);return r.createElement(p.Provider,{value:n},e.children)},s="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},k=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,p=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),s=d(t),k=o,u=s["".concat(p,".").concat(k)]||s[k]||m[k]||a;return t?r.createElement(u,i(i({ref:n},l),{},{components:t})):r.createElement(u,i({ref:n},l))}));function u(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=k;var c={};for(var p in n)hasOwnProperty.call(n,p)&&(c[p]=n[p]);c.originalType=e,c[s]="string"==typeof e?e:o,i[1]=c;for(var d=2;d<a;d++)i[d]=t[d];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}k.displayName="MDXCreateElement"},1941:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>i,default:()=>m,frontMatter:()=>a,metadata:()=>c,toc:()=>d});var r=t(7462),o=(t(7294),t(3905));const a={},i=void 0,c={unversionedId:"podman-network/podman-network-disconnect",id:"podman-network/podman-network-disconnect",title:"podman-network-disconnect",description:"% podman-network-disconnect 1",source:"@site/docs/podman-network/podman-network-disconnect.md",sourceDirName:"podman-network",slug:"/podman-network/podman-network-disconnect",permalink:"/website-new/docs/podman-network/podman-network-disconnect",draft:!1,editUrl:"https://github.com/containers/website-new/docs/podman-network/podman-network-disconnect.md",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"podman-network-create",permalink:"/website-new/docs/podman-network/podman-network-create"},next:{title:"podman-network-exists",permalink:"/website-new/docs/podman-network/podman-network-exists"}},p={},d=[{value:"NAME",id:"name",level:2},{value:"SYNOPSIS",id:"synopsis",level:2},{value:"DESCRIPTION",id:"description",level:2},{value:"OPTIONS",id:"options",level:2},{value:"<strong>--force</strong>, <strong>-f</strong>",id:"--force--f",level:4},{value:"EXAMPLE",id:"example",level:2},{value:"SEE ALSO",id:"see-also",level:2},{value:"HISTORY",id:"history",level:2}],l={toc:d},s="wrapper";function m(e){let{components:n,...t}=e;return(0,o.kt)(s,(0,r.Z)({},l,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"% podman-network-disconnect 1"),(0,o.kt)("h2",{id:"name"},"NAME"),(0,o.kt)("p",null,"podman","-","network","-","disconnect - Disconnect a container from a network"),(0,o.kt)("h2",{id:"synopsis"},"SYNOPSIS"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"podman network disconnect")," ","[",(0,o.kt)("em",{parentName:"p"},"options"),"]"," network container"),(0,o.kt)("h2",{id:"description"},"DESCRIPTION"),(0,o.kt)("p",null,"Disconnects a container from a network. A container can be disconnected from a network by name or by ID.\nIf all networks are disconnected from the container, it will behave like a container created with ",(0,o.kt)("inlineCode",{parentName:"p"},"--network=none"),"\nand it will longer have network connectivity until a network is connected again."),(0,o.kt)("h2",{id:"options"},"OPTIONS"),(0,o.kt)("h4",{id:"--force--f"},(0,o.kt)("strong",{parentName:"h4"},"--force"),", ",(0,o.kt)("strong",{parentName:"h4"},"-f")),(0,o.kt)("p",null,"Force the container to disconnect from a network"),(0,o.kt)("h2",{id:"example"},"EXAMPLE"),(0,o.kt)("p",null,"Disconnect a container named ",(0,o.kt)("em",{parentName:"p"},"web")," from a network called ",(0,o.kt)("em",{parentName:"p"},"test"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"podman network disconnect test web\n")),(0,o.kt)("h2",{id:"see-also"},"SEE ALSO"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("a",{parentName:"strong",href:"/website-new/docs/podman"},"podman(1)")),", ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("a",{parentName:"strong",href:"/website-new/docs/podman-network/"},"podman-network(1)")),", ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("a",{parentName:"strong",href:"/website-new/docs/podman-network/podman-network-connect"},"podman-network-connect(1)"))),(0,o.kt)("h2",{id:"history"},"HISTORY"),(0,o.kt)("p",null,"November 2020, Originally compiled by Brent Baude ",(0,o.kt)("a",{parentName:"p",href:"mailto:bbaude@redhat.com"},"bbaude@redhat.com")))}m.isMDXComponent=!0}}]);