"use strict";(self.webpackChunkpodman=self.webpackChunkpodman||[]).push([[376],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>h});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var m=a.createContext({}),p=function(e){var t=a.useContext(m),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},s=function(e){var t=p(e.components);return a.createElement(m.Provider,{value:t},e.children)},d="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,m=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),d=p(n),u=r,h=d["".concat(m,".").concat(u)]||d[u]||c[u]||l;return n?a.createElement(h,o(o({ref:t},s),{},{components:n})):a.createElement(h,o({ref:t},s))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,o=new Array(l);o[0]=u;var i={};for(var m in t)hasOwnProperty.call(t,m)&&(i[m]=t[m]);i.originalType=e,i[d]="string"==typeof e?e:r,o[1]=i;for(var p=2;p<l;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},1765:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>m,contentTitle:()=>o,default:()=>c,frontMatter:()=>l,metadata:()=>i,toc:()=>p});var a=n(7462),r=(n(7294),n(3905));const l={},o=void 0,i={unversionedId:"podman-machine/podman-machine-list",id:"podman-machine/podman-machine-list",title:"podman-machine-list",description:"% podman-machine-list 1",source:"@site/docs/podman-machine/podman-machine-list.md",sourceDirName:"podman-machine",slug:"/podman-machine/podman-machine-list",permalink:"/websites-new/docs/podman-machine/podman-machine-list",draft:!1,editUrl:"https://github.com/containers/website-new/docs/podman-machine/podman-machine-list.md",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"podman-machine-inspect",permalink:"/websites-new/docs/podman-machine/podman-machine-inspect"},next:{title:"podman-machine-os-apply",permalink:"/websites-new/docs/podman-machine/podman-machine-os-apply"}},m={},p=[{value:"NAME",id:"name",level:2},{value:"SYNOPSIS",id:"synopsis",level:2},{value:"DESCRIPTION",id:"description",level:2},{value:"OPTIONS",id:"options",level:2},{value:"<strong>--format</strong>=<em>format</em>",id:"--formatformat",level:4},{value:"<strong>--help</strong>",id:"--help",level:4},{value:"<strong>--quiet</strong>, <strong>-q</strong>",id:"--quiet--q",level:4},{value:"EXAMPLES",id:"examples",level:2},{value:"SEE ALSO",id:"see-also",level:2},{value:"HISTORY",id:"history",level:2}],s={toc:p},d="wrapper";function c(e){let{components:t,...n}=e;return(0,r.kt)(d,(0,a.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"% podman-machine-list 1"),(0,r.kt)("h2",{id:"name"},"NAME"),(0,r.kt)("p",null,"podman","-","machine","-","list - List virtual machines"),(0,r.kt)("h2",{id:"synopsis"},"SYNOPSIS"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"podman machine list")," ","[",(0,r.kt)("em",{parentName:"p"},"options"),"]"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"podman machine ls")," ","[",(0,r.kt)("em",{parentName:"p"},"options"),"]"),(0,r.kt)("h2",{id:"description"},"DESCRIPTION"),(0,r.kt)("p",null,"List Podman managed virtual machines."),(0,r.kt)("p",null,"Podman on MacOS and Windows requires a virtual machine. This is because containers are Linux -\ncontainers do not run on any other OS because containers' core functionality are\ntied to the Linux kernel. Podman machine must be used to manage MacOS and Windows machines,\nbut can be optionally used on Linux."),(0,r.kt)("p",null,"Rootless only."),(0,r.kt)("p",null,"NOTE: The podman-machine configuration file is managed under the\n",(0,r.kt)("inlineCode",{parentName:"p"},"$XDG_CONFIG_HOME/containers/podman/machine/")," directory. Changing the ",(0,r.kt)("inlineCode",{parentName:"p"},"$XDG_CONFIG_HOME"),"\nenvironment variable while the machines are running can lead to unexpected behavior.\n(see ",(0,r.kt)("a",{parentName:"p",href:"/websites-new/docs/podman"},"podman(1)"),")"),(0,r.kt)("h2",{id:"options"},"OPTIONS"),(0,r.kt)("h4",{id:"--formatformat"},(0,r.kt)("strong",{parentName:"h4"},"--format"),"=",(0,r.kt)("em",{parentName:"h4"},"format")),(0,r.kt)("p",null,"Change the default output format. This can be of a supported type like 'json'\nor a Go template.\nValid placeholders for the Go template are listed below:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"th"},"Placeholder")),(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"th"},"Description")))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},".CPUs"),(0,r.kt)("td",{parentName:"tr",align:null},"Number of CPUs")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},".Created"),(0,r.kt)("td",{parentName:"tr",align:null},"Time since VM creation")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},".Default"),(0,r.kt)("td",{parentName:"tr",align:null},"Is default machine")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},".DiskSize"),(0,r.kt)("td",{parentName:"tr",align:null},"Disk size of machine")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},".IdentityPath"),(0,r.kt)("td",{parentName:"tr",align:null},"Path to ssh identity file")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},".LastUp"),(0,r.kt)("td",{parentName:"tr",align:null},"Time machine was last up")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},".LastUp"),(0,r.kt)("td",{parentName:"tr",align:null},"Time since the VM was last run")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},".Memory"),(0,r.kt)("td",{parentName:"tr",align:null},"Allocated memory for machine")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},".Name"),(0,r.kt)("td",{parentName:"tr",align:null},"VM name")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},".Port"),(0,r.kt)("td",{parentName:"tr",align:null},"SSH Port to use to connect to VM")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},".RemoteUsername"),(0,r.kt)("td",{parentName:"tr",align:null},"VM Username for rootless Podman")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},".Running"),(0,r.kt)("td",{parentName:"tr",align:null},"Is machine running")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},".Stream"),(0,r.kt)("td",{parentName:"tr",align:null},"Stream name")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},".UserModeNetworking"),(0,r.kt)("td",{parentName:"tr",align:null},"Whether machine uses user-mode networking")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},".VMType"),(0,r.kt)("td",{parentName:"tr",align:null},"VM type")))),(0,r.kt)("h4",{id:"--help"},(0,r.kt)("strong",{parentName:"h4"},"--help")),(0,r.kt)("p",null,"Print usage statement."),(0,r.kt)("p",null,"@@option noheading"),(0,r.kt)("h4",{id:"--quiet--q"},(0,r.kt)("strong",{parentName:"h4"},"--quiet"),", ",(0,r.kt)("strong",{parentName:"h4"},"-q")),(0,r.kt)("p",null,"Only print the name of the machine. This also implies no table heading\nis printed."),(0,r.kt)("h2",{id:"examples"},"EXAMPLES"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'$ podman machine list\nNAME                    VM TYPE     CREATED      LAST UP      CPUS        MEMORY      DISK SIZE\npodman-machine-default  qemu        2 weeks ago  2 weeks ago  1           247GB     10.74GB\n\n$ podman machine ls --format "table {{.Name}}\\t{{.VMType}}\\t{{.Created}}\\t{{.LastUp}}"\nNAME                    VM TYPE     CREATED      LAST UP\npodman-machine-default  qemu        2 weeks ago  2 weeks ago\n\n$ podman machine ls --format json\n[\n    {\n        "Name": "podman-machine-default",\n        "Default": false,\n        "Created": "2021-12-27T10:36:14.373347492-05:00",\n        "Running": false,\n        "LastUp": "2021-12-27T11:22:507333371-05:00",\n        "Stream": "default",\n        "VMType": "qemu",\n        "CPUs": 1,\n        "Memory": "2147483648",\n        "DiskSize": "10737418240"\n    }\n]\n')),(0,r.kt)("h2",{id:"see-also"},"SEE ALSO"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"/websites-new/docs/podman"},"podman(1)")),", ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"/websites-new/docs/podman-machine/"},"podman-machine(1)"))),(0,r.kt)("h2",{id:"history"},"HISTORY"),(0,r.kt)("p",null,"March 2021, Originally compiled by Ashley Cui ",(0,r.kt)("a",{parentName:"p",href:"mailto:acui@redhat.com"},"acui@redhat.com")))}c.isMDXComponent=!0}}]);