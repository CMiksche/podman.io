"use strict";(self.webpackChunkpodman=self.webpackChunkpodman||[]).push([[9650],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>h});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var p=a.createContext({}),s=function(e){var n=a.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},c=function(e){var n=s(e.components);return a.createElement(p.Provider,{value:n},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},u=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=s(t),u=r,h=m["".concat(p,".").concat(u)]||m[u]||d[u]||o;return t?a.createElement(h,i(i({ref:n},c),{},{components:t})):a.createElement(h,i({ref:n},c))}));function h(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,i=new Array(o);i[0]=u;var l={};for(var p in n)hasOwnProperty.call(n,p)&&(l[p]=n[p]);l.originalType=e,l[m]="string"==typeof e?e:r,i[1]=l;for(var s=2;s<o;s++)i[s]=t[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},5365:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var a=t(7462),r=(t(7294),t(3905));const o={},i=void 0,l={unversionedId:"podman-container/podman-container-runlabel",id:"podman-container/podman-container-runlabel",title:"podman-container-runlabel",description:"% podman-container-runlabel 1",source:"@site/docs/podman-container/podman-container-runlabel.md",sourceDirName:"podman-container",slug:"/podman-container/podman-container-runlabel",permalink:"/website-new/docs/podman-container/podman-container-runlabel",draft:!1,editUrl:"https://github.com/containers/website-new/docs/podman-container/podman-container-runlabel.md",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"podman-container-restore",permalink:"/website-new/docs/podman-container/podman-container-restore"},next:{title:"podman-cp",permalink:"/website-new/docs/podman-cp"}},p={},s=[{value:"NAME",id:"name",level:2},{value:"SYNOPSIS",id:"synopsis",level:2},{value:"DESCRIPTION",id:"description",level:2},{value:"VARIABLES",id:"variables",level:2},{value:"OPTIONS",id:"options",level:2},{value:"<strong>--display</strong>",id:"--display",level:4},{value:"<strong>--help</strong>, <strong>-h</strong>",id:"--help--h",level:4},{value:"<strong>--name</strong>, <strong>-n</strong>=<em>name</em>",id:"--name--nname",level:4},{value:"<strong>--quiet</strong>, <strong>-q</strong>",id:"--quiet--q",level:4},{value:"<strong>--replace</strong>",id:"--replace",level:4},{value:"EXAMPLES",id:"examples",level:2},{value:"SEE ALSO",id:"see-also",level:2},{value:"HISTORY",id:"history",level:2}],c={toc:s},m="wrapper";function d(e){let{components:n,...t}=e;return(0,r.kt)(m,(0,a.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"% podman-container-runlabel 1"),(0,r.kt)("h2",{id:"name"},"NAME"),(0,r.kt)("p",null,"podman-container-runlabel - Executes a command as described by a container-image label"),(0,r.kt)("h2",{id:"synopsis"},"SYNOPSIS"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"podman container runlabel")," ","[",(0,r.kt)("em",{parentName:"p"},"options"),"]"," ",(0,r.kt)("em",{parentName:"p"},"label")," ",(0,r.kt)("em",{parentName:"p"},"image")," ","[",(0,r.kt)("em",{parentName:"p"},"arg..."),"]"),(0,r.kt)("h2",{id:"description"},"DESCRIPTION"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"podman container runlabel")," reads the specified ",(0,r.kt)("inlineCode",{parentName:"p"},"label")," of the ",(0,r.kt)("inlineCode",{parentName:"p"},"image")," and executes it as command on the host. If the label does not exist, Podman will exit with an error. Additional arguments will be appended to the command."),(0,r.kt)("p",null,"Historically, container images describe the contents (e.g., layers) and how a container runtime (e.g., crun(1) or runc(1)) should execute the container. For instance, an image may set the environment and the command in its configuration. However, a container image cannot directly specify how a container engine such as Podman should execute it. For instance, an image configuration does not include information about log drivers, namespaces or which capabilities it needs to run correctly."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"podman container runlabel")," addresses the limitation of container images in a simple yet efficient way. Podman will read the contents of the label and interpret it as a command that will be executed on the host. This way an image can describe exactly how it should be executed by Podman. For instance, a label with the content ",(0,r.kt)("inlineCode",{parentName:"p"},"/usr/bin/podman run -d --pid=host --privileged \\${IMAGE}"),' instructs the image to be executed in a detached, privileged container that is using the PID namespace of the host. This lifts the self-description of a container image from "what" to "how".'),(0,r.kt)("p",null,"Please note that the ",(0,r.kt)("inlineCode",{parentName:"p"},"runlabel")," command is intended to be run in trusted environments exclusively. Using the command on untrusted images is not recommended."),(0,r.kt)("h2",{id:"variables"},"VARIABLES"),(0,r.kt)("p",null,"The contents of a label may refer to the following variables which will be substituted while processing the label."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"IMAGE"),"\nThe name of the image. When executing ",(0,r.kt)("inlineCode",{parentName:"p"},"podman container runlabel label fedora")," the ",(0,r.kt)("inlineCode",{parentName:"p"},"IMAGE")," variable will be replaced with ",(0,r.kt)("inlineCode",{parentName:"p"},"fedora"),". Valid formats are ",(0,r.kt)("inlineCode",{parentName:"p"},"IMAGE"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"$IMAGE"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"${IMAGE}")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"=IMAGE"),"."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"NAME"),"\nAs specified by the ",(0,r.kt)("inlineCode",{parentName:"p"},"--name")," option. The format is identical to the one of the IMAGE attribute."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"PWD"),"\nWill be replaced with the current working directory."),(0,r.kt)("h2",{id:"options"},"OPTIONS"),(0,r.kt)("p",null,"@@option authfile"),(0,r.kt)("p",null,"@@option cert-dir"),(0,r.kt)("p",null,"@@option creds"),(0,r.kt)("h4",{id:"--display"},(0,r.kt)("strong",{parentName:"h4"},"--display")),(0,r.kt)("p",null,"Display the label's value of the image having populated its environment variables. The runlabel command will not execute if --display is specified."),(0,r.kt)("h4",{id:"--help--h"},(0,r.kt)("strong",{parentName:"h4"},"--help"),", ",(0,r.kt)("strong",{parentName:"h4"},"-h")),(0,r.kt)("p",null,"Print usage statement"),(0,r.kt)("h4",{id:"--name--nname"},(0,r.kt)("strong",{parentName:"h4"},"--name"),", ",(0,r.kt)("strong",{parentName:"h4"},"-n"),"=",(0,r.kt)("em",{parentName:"h4"},"name")),(0,r.kt)("p",null,"Use this name for creating content for the container. If not specified, name defaults to the name of the image."),(0,r.kt)("h4",{id:"--quiet--q"},(0,r.kt)("strong",{parentName:"h4"},"--quiet"),", ",(0,r.kt)("strong",{parentName:"h4"},"-q")),(0,r.kt)("p",null,"Suppress output information when pulling images"),(0,r.kt)("h4",{id:"--replace"},(0,r.kt)("strong",{parentName:"h4"},"--replace")),(0,r.kt)("p",null,"If a container exists of the default or given name, as needed it will be stopped, deleted and a new container will be created from this image."),(0,r.kt)("p",null,"@@option tls-verify"),(0,r.kt)("h2",{id:"examples"},"EXAMPLES"),(0,r.kt)("p",null,"Execute the ",(0,r.kt)("inlineCode",{parentName:"p"},"run")," label of an image called foobar."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"$ podman container runlabel run foobar\n")),(0,r.kt)("p",null,"Execute the ",(0,r.kt)("inlineCode",{parentName:"p"},"install")," label of an image called foobar with additional arguments."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"$ podman container runlabel install foobar apples oranges\n")),(0,r.kt)("p",null,"Display the contents of the ",(0,r.kt)("inlineCode",{parentName:"p"},"run")," label of image foobar."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"$ podman container runlabel --display run foobar\n")),(0,r.kt)("h2",{id:"see-also"},"SEE ALSO"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"/website-new/docs/podman"},"podman(1)")),", ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"https://github.com/containers/crun/blob/main/crun.1.md"},"crun(1)")),", ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"https://github.com/opencontainers/runc/blob/main/man/runc.8.md"},"runc(8)")),", ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"https://github.com/containers/image/blob/main/docs/containers-certs.d.5.md"},"containers-certs.d(5)")),", ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"https://github.com/containers/image/blob/main/docs/containers-auth.json.5.md"},"containers-auth.json(5)")),", ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"https://github.com/containers/image/blob/main/docs/containers-registries.conf.5.md"},"containers-registries.conf(5)"))),(0,r.kt)("h2",{id:"history"},"HISTORY"),(0,r.kt)("p",null,"August 2021, Refinements by Valentin Rothberg (rothberg at redhat dot com)"),(0,r.kt)("p",null,"September 2018, Originally compiled by Brent Baude (bbaude at redhat dot com)"))}d.isMDXComponent=!0}}]);