"use strict";(self.webpackChunkpodman=self.webpackChunkpodman||[]).push([[4141],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>k});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function p(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=o.createContext({}),l=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):p(p({},t),e)),n},u=function(e){var t=l(e.components);return o.createElement(s.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),c=l(n),m=r,k=c["".concat(s,".").concat(m)]||c[m]||d[m]||a;return n?o.createElement(k,p(p({ref:t},u),{},{components:n})):o.createElement(k,p({ref:t},u))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,p=new Array(a);p[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[c]="string"==typeof e?e:r,p[1]=i;for(var l=2;l<a;l++)p[l]=n[l];return o.createElement.apply(null,p)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},2655:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>p,default:()=>d,frontMatter:()=>a,metadata:()=>i,toc:()=>l});var o=n(7462),r=(n(7294),n(3905));const a={},p=void 0,i={unversionedId:"podman-update",id:"podman-update",title:"podman-update",description:"% podman-update 1",source:"@site/docs/podman-update.md",sourceDirName:".",slug:"/podman-update",permalink:"/websites-new/docs/podman-update",draft:!1,editUrl:"https://github.com/containers/website-new/docs/podman-update.md",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"podman-untag",permalink:"/websites-new/docs/podman-untag"},next:{title:"podman-version",permalink:"/websites-new/docs/podman-version"}},s={},l=[{value:"NAME",id:"name",level:2},{value:"SYNOPSIS",id:"synopsis",level:2},{value:"DESCRIPTION",id:"description",level:2},{value:"OPTIONS",id:"options",level:2},{value:"EXAMPLEs",id:"examples",level:2},{value:"SEE ALSO",id:"see-also",level:2},{value:"HISTORY",id:"history",level:2}],u={toc:l},c="wrapper";function d(e){let{components:t,...n}=e;return(0,r.kt)(c,(0,o.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"% podman-update 1"),(0,r.kt)("h2",{id:"name"},"NAME"),(0,r.kt)("p",null,"podman","-","update - Updates the cgroup configuration of a given container"),(0,r.kt)("h2",{id:"synopsis"},"SYNOPSIS"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"podman update")," ","[",(0,r.kt)("em",{parentName:"p"},"options"),"]"," ",(0,r.kt)("em",{parentName:"p"},"container")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"podman container update")," ","[",(0,r.kt)("em",{parentName:"p"},"options"),"]"," ",(0,r.kt)("em",{parentName:"p"},"container")),(0,r.kt)("h2",{id:"description"},"DESCRIPTION"),(0,r.kt)("p",null,"Updates the cgroup configuration of an already existing container. The currently supported options are a subset of the\npodman create/run resource limits options. These new options are non-persistent and only last for the current execution of the container; the configuration will be honored on its next run.\nThis means that this command can only be executed on an already running container and the changes made will be erased the next time the container is stopped and restarted, this is to ensure immutability.\nThis command takes one argument, a container name or ID, alongside the resource flags to modify the cgroup."),(0,r.kt)("h2",{id:"options"},"OPTIONS"),(0,r.kt)("p",null,"@@option blkio-weight"),(0,r.kt)("p",null,"@@option blkio-weight-device"),(0,r.kt)("p",null,"@@option cpu-period"),(0,r.kt)("p",null,"@@option cpu-quota"),(0,r.kt)("p",null,"@@option cpu-rt-period"),(0,r.kt)("p",null,"@@option cpu-rt-runtime"),(0,r.kt)("p",null,"@@option cpu-shares"),(0,r.kt)("p",null,"@@option cpus.container"),(0,r.kt)("p",null,"@@option cpuset-cpus"),(0,r.kt)("p",null,"@@option cpuset-mems"),(0,r.kt)("p",null,"@@option device-read-bps"),(0,r.kt)("p",null,"@@option device-read-iops"),(0,r.kt)("p",null,"@@option device-write-bps"),(0,r.kt)("p",null,"@@option device-write-iops"),(0,r.kt)("p",null,"@@option memory"),(0,r.kt)("p",null,"@@option memory-reservation"),(0,r.kt)("p",null,"@@option memory-swap"),(0,r.kt)("p",null,"@@option memory-swappiness"),(0,r.kt)("p",null,"@@option pids-limit"),(0,r.kt)("h2",{id:"examples"},"EXAMPLEs"),(0,r.kt)("p",null,"update a container with a new cpu quota and period"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"podman update --cpus=5 myCtr\n")),(0,r.kt)("p",null,"update a container with all available options for cgroups v2"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"podman update --cpus 5 --cpuset-cpus 0 --cpu-shares 123 --cpuset-mems 0 --memory 1G --memory-swap 2G --memory-reservation 2G --blkio-weight-device /dev/zero:123 --blkio-weight 123 --device-read-bps /dev/zero:10mb --device-write-bps /dev/zero:10mb --device-read-iops /dev/zero:1000 --device-write-iops /dev/zero:1000 --pids-limit 123 ctrID\n")),(0,r.kt)("p",null,"update a container with all available options for cgroups v1"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"podman update --cpus 5 --cpuset-cpus 0 --cpu-shares 123 --cpuset-mems 0 --memory 1G --memory-swap 2G --memory-reservation 2G --memory-swappiness 50 --pids-limit 123 ctrID\n")),(0,r.kt)("h2",{id:"see-also"},"SEE ALSO"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"/websites-new/docs/podman"},"podman(1)")),", ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"/websites-new/docs/podman-create"},"podman-create(1)")),", ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"/websites-new/docs/podman-run"},"podman-run(1)"))),(0,r.kt)("h2",{id:"history"},"HISTORY"),(0,r.kt)("p",null,"August 2022, Originally written by Charlie Doern ",(0,r.kt)("a",{parentName:"p",href:"mailto:cdoern@redhat.com"},"cdoern@redhat.com")))}d.isMDXComponent=!0}}]);