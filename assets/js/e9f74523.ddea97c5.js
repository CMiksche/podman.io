"use strict";(self.webpackChunkpodman=self.webpackChunkpodman||[]).push([[3706],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>c});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),m=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},l=function(e){var t=m(e.components);return a.createElement(p.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},g=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,l=o(e,["components","mdxType","originalType","parentName"]),d=m(n),g=r,c=d["".concat(p,".").concat(g)]||d[g]||u[g]||i;return n?a.createElement(c,s(s({ref:t},l),{},{components:n})):a.createElement(c,s({ref:t},l))}));function c(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,s=new Array(i);s[0]=g;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o[d]="string"==typeof e?e:r,s[1]=o;for(var m=2;m<i;m++)s[m]=n[m];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}g.displayName="MDXCreateElement"},5421:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>s,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>m});var a=n(7462),r=(n(7294),n(3905));const i={},s=void 0,o={unversionedId:"podman-manifest/podman-manifest-push",id:"podman-manifest/podman-manifest-push",title:"podman-manifest-push",description:"% podman-manifest-push 1",source:"@site/docs/podman-manifest/podman-manifest-push.md",sourceDirName:"podman-manifest",slug:"/podman-manifest/podman-manifest-push",permalink:"/websites-new/docs/podman-manifest/podman-manifest-push",draft:!1,editUrl:"https://github.com/containers/website-new/docs/podman-manifest/podman-manifest-push.md",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"podman-manifest-inspect",permalink:"/websites-new/docs/podman-manifest/podman-manifest-inspect"},next:{title:"podman-manifest-remove",permalink:"/websites-new/docs/podman-manifest/podman-manifest-remove"}},p={},m=[{value:"NAME",id:"name",level:2},{value:"SYNOPSIS",id:"synopsis",level:2},{value:"DESCRIPTION",id:"description",level:2},{value:"RETURN VALUE",id:"return-value",level:2},{value:"OPTIONS",id:"options",level:2},{value:"<strong>--all</strong>",id:"--all",level:4},{value:"<strong>--format</strong>, <strong>-f</strong>=<em>format</em>",id:"--format--fformat",level:4},{value:"<strong>--quiet</strong>, <strong>-q</strong>",id:"--quiet--q",level:4},{value:"<strong>--remove-signatures</strong>",id:"--remove-signatures",level:4},{value:"<strong>--rm</strong>",id:"--rm",level:4},{value:"<strong>--sign-by</strong>=<em>fingerprint</em>",id:"--sign-byfingerprint",level:4},{value:"<strong>--sign-by-sigstore</strong>=*param-file***",id:"--sign-by-sigstoreparam-file",level:4},{value:"<strong>--sign-by-sigstore-private-key</strong>=<em>path</em>",id:"--sign-by-sigstore-private-keypath",level:4},{value:"DESTINATION",id:"destination",level:2},{value:"EXAMPLE",id:"example",level:2},{value:"SEE ALSO",id:"see-also",level:2}],l={toc:m},d="wrapper";function u(e){let{components:t,...n}=e;return(0,r.kt)(d,(0,a.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"% podman-manifest-push 1"),(0,r.kt)("h2",{id:"name"},"NAME"),(0,r.kt)("p",null,"podman","-","manifest","-","push - Push a manifest list or image index to a registry"),(0,r.kt)("h2",{id:"synopsis"},"SYNOPSIS"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"podman manifest push")," ","[",(0,r.kt)("em",{parentName:"p"},"options"),"]"," ",(0,r.kt)("em",{parentName:"p"},"listnameorindexname")," ","[",(0,r.kt)("em",{parentName:"p"},"destination"),"]"),(0,r.kt)("h2",{id:"description"},"DESCRIPTION"),(0,r.kt)("p",null,"Pushes a manifest list or image index to a registry."),(0,r.kt)("h2",{id:"return-value"},"RETURN VALUE"),(0,r.kt)("p",null,"The list image's ID and the digest of the image's manifest."),(0,r.kt)("h2",{id:"options"},"OPTIONS"),(0,r.kt)("h4",{id:"--all"},(0,r.kt)("strong",{parentName:"h4"},"--all")),(0,r.kt)("p",null,"Push the images mentioned in the manifest list or image index, in addition to\nthe list or index itself. (Default true)"),(0,r.kt)("p",null,"@@option authfile"),(0,r.kt)("p",null,"@@option cert-dir"),(0,r.kt)("p",null,"@@option compression-format"),(0,r.kt)("p",null,"@@option creds"),(0,r.kt)("p",null,"@@option digestfile"),(0,r.kt)("h4",{id:"--format--fformat"},(0,r.kt)("strong",{parentName:"h4"},"--format"),", ",(0,r.kt)("strong",{parentName:"h4"},"-f"),"=",(0,r.kt)("em",{parentName:"h4"},"format")),(0,r.kt)("p",null,"Manifest list type (oci or v2s2) to use when pushing the list (default is oci)."),(0,r.kt)("h4",{id:"--quiet--q"},(0,r.kt)("strong",{parentName:"h4"},"--quiet"),", ",(0,r.kt)("strong",{parentName:"h4"},"-q")),(0,r.kt)("p",null,"When writing the manifest, suppress progress output"),(0,r.kt)("h4",{id:"--remove-signatures"},(0,r.kt)("strong",{parentName:"h4"},"--remove-signatures")),(0,r.kt)("p",null,"Don't copy signatures when pushing images."),(0,r.kt)("h4",{id:"--rm"},(0,r.kt)("strong",{parentName:"h4"},"--rm")),(0,r.kt)("p",null,"Delete the manifest list or image index from local storage if pushing succeeds."),(0,r.kt)("h4",{id:"--sign-byfingerprint"},(0,r.kt)("strong",{parentName:"h4"},"--sign-by"),"=",(0,r.kt)("em",{parentName:"h4"},"fingerprint")),(0,r.kt)("p",null,"Sign the pushed images with a \u201csimple signing\u201d signature using the specified key. (This option is not available with the remote Podman client, including Mac and Windows (excluding WSL2) machines)"),(0,r.kt)("h4",{id:"--sign-by-sigstoreparam-file"},(0,r.kt)("strong",{parentName:"h4"},"--sign-by-sigstore"),"=","*","param-file","*","*","*"),(0,r.kt)("p",null,"Add a sigstore signature based on further options specified in a containers sigstore signing parameter file ",(0,r.kt)("em",{parentName:"p"},"param-file"),".\nSee containers-sigstore-signing-params.yaml(5) for details about the file format."),(0,r.kt)("h4",{id:"--sign-by-sigstore-private-keypath"},(0,r.kt)("strong",{parentName:"h4"},"--sign-by-sigstore-private-key"),"=",(0,r.kt)("em",{parentName:"h4"},"path")),(0,r.kt)("p",null,"Sign the pushed images with a sigstore signature using a private key at the specified path. (This option is not available with the remote Podman client, including Mac and Windows (excluding WSL2) machines)"),(0,r.kt)("p",null,"@@option sign-passphrase-file"),(0,r.kt)("p",null,"@@option tls-verify"),(0,r.kt)("h2",{id:"destination"},"DESTINATION"),(0,r.kt)("p",null,'The DESTINATION is a location to store container images\nThe Image "DESTINATION" uses a "transport":"details" format.\nIf a transport is not given, podman push will attempt to push\nto a registry.'),(0,r.kt)("p",null,"Multiple transports are supported:"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"dir:"),(0,r.kt)("em",{parentName:"p"},"path"),"\nAn existing local directory ",(0,r.kt)("em",{parentName:"p"},"path")," storing the manifest, layer tarballs and signatures as individual files. This is a non-standardized format, primarily useful for debugging or noninvasive container inspection."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"$ podman manifest push mylist:v11 dir:/tmp/mylist\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"docker://"),(0,r.kt)("em",{parentName:"p"},"docker-reference"),'\nAn image in a registry implementing the "Docker Registry HTTP API V2". By default, uses the authorization state in ',(0,r.kt)("inlineCode",{parentName:"p"},"$XDG_RUNTIME_DIR/containers/auth.json"),", which is set using ",(0,r.kt)("inlineCode",{parentName:"p"},"(podman login)"),". If the authorization state is not found there, ",(0,r.kt)("inlineCode",{parentName:"p"},"$HOME/.docker/config.json")," is checked, which is set using ",(0,r.kt)("inlineCode",{parentName:"p"},"(docker login)"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"$ podman manifest push mylist:v11 docker://registry.example.org/mylist:v11\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"docker-archive:"),(0,r.kt)("em",{parentName:"p"},"path"),"[",(0,r.kt)("strong",{parentName:"p"},":"),(0,r.kt)("em",{parentName:"p"},"docker-reference"),"]","\nAn image is stored in the ",(0,r.kt)("inlineCode",{parentName:"p"},"docker save")," formatted file. ",(0,r.kt)("em",{parentName:"p"},"docker-reference")," is only used when creating such a file, and it must not contain a digest."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"$ podman manifest push mylist:v11 docker-archive:/tmp/mylist\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"docker-daemon:"),(0,r.kt)("em",{parentName:"p"},"docker-reference"),"\nAn image in ",(0,r.kt)("em",{parentName:"p"},"docker-reference")," format stored in the docker daemon internal storage. ",(0,r.kt)("em",{parentName:"p"},"docker-reference")," must contain a tag."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"$ podman manifest push mylist:v11 docker-daemon:registry.example.org/mylist:v11\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"oci-archive:"),(0,r.kt)("em",{parentName:"p"},"path"),(0,r.kt)("strong",{parentName:"p"},":"),(0,r.kt)("em",{parentName:"p"},"tag"),"\nAn image ",(0,r.kt)("em",{parentName:"p"},"tag"),' in a directory compliant with "Open Container Image Layout Specification" at ',(0,r.kt)("em",{parentName:"p"},"path"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"$ podman manifest push mylist:v11 oci-archive:/tmp/mylist\n")),(0,r.kt)("h2",{id:"example"},"EXAMPLE"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"podman manifest push mylist:v11 docker://registry.example.org/mylist:v11\n")),(0,r.kt)("h2",{id:"see-also"},"SEE ALSO"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"/websites-new/docs/podman"},"podman(1)")),", ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"/websites-new/docs/podman-manifest/"},"podman-manifest(1)"))))}u.isMDXComponent=!0}}]);