"use strict";(self.webpackChunkpodman=self.webpackChunkpodman||[]).push([[3897],{3905:(t,e,n)=>{n.d(e,{Zo:()=>m,kt:()=>c});var a=n(7294);function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function l(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function o(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?l(Object(n),!0).forEach((function(e){r(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function p(t,e){if(null==t)return{};var n,a,r=function(t,e){if(null==t)return{};var n,a,r={},l=Object.keys(t);for(a=0;a<l.length;a++)n=l[a],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(a=0;a<l.length;a++)n=l[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var d=a.createContext({}),i=function(t){var e=a.useContext(d),n=e;return t&&(n="function"==typeof t?t(e):o(o({},e),t)),n},m=function(t){var e=i(t.components);return a.createElement(d.Provider,{value:e},t.children)},s="mdxType",u={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},k=a.forwardRef((function(t,e){var n=t.components,r=t.mdxType,l=t.originalType,d=t.parentName,m=p(t,["components","mdxType","originalType","parentName"]),s=i(n),k=r,c=s["".concat(d,".").concat(k)]||s[k]||u[k]||l;return n?a.createElement(c,o(o({ref:e},m),{},{components:n})):a.createElement(c,o({ref:e},m))}));function c(t,e){var n=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var l=n.length,o=new Array(l);o[0]=k;var p={};for(var d in e)hasOwnProperty.call(e,d)&&(p[d]=e[d]);p.originalType=t,p[s]="string"==typeof t?t:r,o[1]=p;for(var i=2;i<l;i++)o[i]=n[i];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}k.displayName="MDXCreateElement"},1380:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>d,contentTitle:()=>o,default:()=>u,frontMatter:()=>l,metadata:()=>p,toc:()=>i});var a=n(7462),r=(n(7294),n(3905));const l={},o=void 0,p={unversionedId:"commands/podman-pod/podman-pod-ps",id:"commands/podman-pod/podman-pod-ps",title:"podman-pod-ps",description:"% podman-pod-ps 1",source:"@site/docs/commands/podman-pod/podman-pod-ps.md",sourceDirName:"commands/podman-pod",slug:"/commands/podman-pod/podman-pod-ps",permalink:"/docs/commands/podman-pod/podman-pod-ps",draft:!1,editUrl:"https://github.com/containers/website-new/docs/commands/podman-pod/podman-pod-ps.md",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"podman-pod-prune",permalink:"/docs/commands/podman-pod/podman-pod-prune"},next:{title:"podman-pod-restart",permalink:"/docs/commands/podman-pod/podman-pod-restart"}},d={},i=[{value:"NAME",id:"name",level:2},{value:"SYNOPSIS",id:"synopsis",level:2},{value:"DESCRIPTION",id:"description",level:2},{value:"OPTIONS",id:"options",level:2},{value:"<strong>--ctr-ids</strong>",id:"--ctr-ids",level:4},{value:"<strong>--ctr-names</strong>",id:"--ctr-names",level:4},{value:"<strong>--ctr-status</strong>",id:"--ctr-status",level:4},{value:"<strong>--filter</strong>, <strong>-f</strong>=<em>filter</em>",id:"--filter--ffilter",level:4},{value:"<strong>--format</strong>=<em>format</em>",id:"--formatformat",level:4},{value:"<strong>--help</strong>, <strong>-h</strong>",id:"--help--h",level:4},{value:"<strong>--latest</strong>, <strong>-l</strong>",id:"--latest--l",level:4},{value:"<strong>--namespace</strong>, <strong>--ns</strong>",id:"--namespace---ns",level:4},{value:"<strong>--no-trunc</strong>",id:"--no-trunc",level:4},{value:"<strong>--quiet</strong>, <strong>-q</strong>",id:"--quiet--q",level:4},{value:"<strong>--sort</strong>",id:"--sort",level:4},{value:"EXAMPLES",id:"examples",level:2},{value:"pod ps",id:"pod-ps",level:2},{value:"SEE ALSO",id:"see-also",level:2},{value:"HISTORY",id:"history",level:2}],m={toc:i},s="wrapper";function u(t){let{components:e,...n}=t;return(0,r.kt)(s,(0,a.Z)({},m,n,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"% podman-pod-ps 1"),(0,r.kt)("h2",{id:"name"},"NAME"),(0,r.kt)("p",null,"podman","-","pod","-","ps - Prints out information about pods"),(0,r.kt)("h2",{id:"synopsis"},"SYNOPSIS"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"podman pod ps")," ","[",(0,r.kt)("em",{parentName:"p"},"options"),"]"),(0,r.kt)("h2",{id:"description"},"DESCRIPTION"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"podman pod ps")," lists the pods on the system.\nBy default it lists:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"pod ID"),(0,r.kt)("li",{parentName:"ul"},"pod name"),(0,r.kt)("li",{parentName:"ul"},"the time the pod was created"),(0,r.kt)("li",{parentName:"ul"},"number of containers attached to pod"),(0,r.kt)("li",{parentName:"ul"},"container ID of the pod infra container"),(0,r.kt)("li",{parentName:"ul"},"status of pod as defined by the following table")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"th"},"Status")),(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"th"},"Description")))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Created"),(0,r.kt)("td",{parentName:"tr",align:null},"No containers running nor stopped")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Running"),(0,r.kt)("td",{parentName:"tr",align:null},"at least one container is running")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Stopped"),(0,r.kt)("td",{parentName:"tr",align:null},"At least one container stopped and none running")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Exited"),(0,r.kt)("td",{parentName:"tr",align:null},"All containers stopped in pod")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Dead"),(0,r.kt)("td",{parentName:"tr",align:null},"Error retrieving state")))),(0,r.kt)("h2",{id:"options"},"OPTIONS"),(0,r.kt)("h4",{id:"--ctr-ids"},(0,r.kt)("strong",{parentName:"h4"},"--ctr-ids")),(0,r.kt)("p",null,"Display the container IDs"),(0,r.kt)("h4",{id:"--ctr-names"},(0,r.kt)("strong",{parentName:"h4"},"--ctr-names")),(0,r.kt)("p",null,"Display the container names"),(0,r.kt)("h4",{id:"--ctr-status"},(0,r.kt)("strong",{parentName:"h4"},"--ctr-status")),(0,r.kt)("p",null,"Display the container statuses"),(0,r.kt)("h4",{id:"--filter--ffilter"},(0,r.kt)("strong",{parentName:"h4"},"--filter"),", ",(0,r.kt)("strong",{parentName:"h4"},"-f"),"=",(0,r.kt)("em",{parentName:"h4"},"filter")),(0,r.kt)("p",null,"Provide filter values."),(0,r.kt)("p",null,"The ",(0,r.kt)("em",{parentName:"p"},"filters")," argument format is of ",(0,r.kt)("inlineCode",{parentName:"p"},"key=value"),". If there is more than one ",(0,r.kt)("em",{parentName:"p"},"filter"),", then pass multiple OPTIONS: ",(0,r.kt)("strong",{parentName:"p"},"--filter")," ",(0,r.kt)("em",{parentName:"p"},"foo=bar")," ",(0,r.kt)("strong",{parentName:"p"},"--filter")," ",(0,r.kt)("em",{parentName:"p"},"bif=baz"),"."),(0,r.kt)("p",null,"Supported filters:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Filter"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("em",{parentName:"td"},"ctr-ids")),(0,r.kt)("td",{parentName:"tr",align:null},"Filter by container ID within the pod.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("em",{parentName:"td"},"ctr-names")),(0,r.kt)("td",{parentName:"tr",align:null},"Filter by container name within the pod.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("em",{parentName:"td"},"ctr-number")),(0,r.kt)("td",{parentName:"tr",align:null},"Filter by number of containers in the pod.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("em",{parentName:"td"},"ctr-status")),(0,r.kt)("td",{parentName:"tr",align:null},"Filter by container status within the pod.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("em",{parentName:"td"},"id")),(0,r.kt)("td",{parentName:"tr",align:null},"Filter by pod ID.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("em",{parentName:"td"},"label")),(0,r.kt)("td",{parentName:"tr",align:null},"Filter by container with (or without, in the case of label!=","[...]"," is used) the specified labels.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("em",{parentName:"td"},"name")),(0,r.kt)("td",{parentName:"tr",align:null},"Filter by pod name.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("em",{parentName:"td"},"network")),(0,r.kt)("td",{parentName:"tr",align:null},"Filter by network name or full ID of network.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("em",{parentName:"td"},"status")),(0,r.kt)("td",{parentName:"tr",align:null},"Filter by pod status.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("em",{parentName:"td"},"until")),(0,r.kt)("td",{parentName:"tr",align:null},"Filter by pods created before given timestamp.")))),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"ctr-ids"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"ctr-names"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"id"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"name")," filters accept ",(0,r.kt)("inlineCode",{parentName:"p"},"regex")," format."),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"ctr-status")," filter accepts values: ",(0,r.kt)("inlineCode",{parentName:"p"},"created"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"running"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"paused"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"stopped"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"exited"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"unknown"),"."),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"label")," ",(0,r.kt)("em",{parentName:"p"},"filter")," accepts two formats. One is the ",(0,r.kt)("inlineCode",{parentName:"p"},"label"),"=",(0,r.kt)("em",{parentName:"p"},"key")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"label"),"=",(0,r.kt)("em",{parentName:"p"},"key"),"=",(0,r.kt)("em",{parentName:"p"},"value"),", which removes containers with the specified labels. The other format is the ",(0,r.kt)("inlineCode",{parentName:"p"},"label!"),"=",(0,r.kt)("em",{parentName:"p"},"key")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"label!"),"=",(0,r.kt)("em",{parentName:"p"},"key"),"=",(0,r.kt)("em",{parentName:"p"},"value"),", which removes containers without the specified labels."),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"until")," ",(0,r.kt)("em",{parentName:"p"},"filter")," can be Unix timestamps, date formatted timestamps, or Go duration strings (e.g. 10m, 1h30m) computed relative to the machine\u2019s time."),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"status")," filter accepts values: ",(0,r.kt)("inlineCode",{parentName:"p"},"stopped"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"running"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"paused"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"exited"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"dead"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"created"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"degraded"),"."),(0,r.kt)("h4",{id:"--formatformat"},(0,r.kt)("strong",{parentName:"h4"},"--format"),"=",(0,r.kt)("em",{parentName:"h4"},"format")),(0,r.kt)("p",null,"Pretty-print containers to JSON or using a Go template"),(0,r.kt)("p",null,"Valid placeholders for the Go template are listed below:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"th"},"Placeholder")),(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"th"},"Description")))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},".Cgroup"),(0,r.kt)("td",{parentName:"tr",align:null},"Cgroup path of pod")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},".ContainerIds"),(0,r.kt)("td",{parentName:"tr",align:null},"Comma-separated list of container IDs in the pod")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},".ContainerNames"),(0,r.kt)("td",{parentName:"tr",align:null},"Comma-separated list of container names in the pod")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},".ContainerStatuses"),(0,r.kt)("td",{parentName:"tr",align:null},"Comma-separated list of container statuses")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},".Created"),(0,r.kt)("td",{parentName:"tr",align:null},"Creation time of pod")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},".ID"),(0,r.kt)("td",{parentName:"tr",align:null},"Container ID")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},".InfraID"),(0,r.kt)("td",{parentName:"tr",align:null},"Pod infra container ID")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},".Labels"),(0,r.kt)("td",{parentName:"tr",align:null},"All the labels assigned to the pod")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},".Name"),(0,r.kt)("td",{parentName:"tr",align:null},"Name of pod")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},".Networks"),(0,r.kt)("td",{parentName:"tr",align:null},"Show all networks connected to the infra container")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},".NumberOfContainers"),(0,r.kt)("td",{parentName:"tr",align:null},"Show the number of containers attached to pod")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},".Status"),(0,r.kt)("td",{parentName:"tr",align:null},"Status of pod")))),(0,r.kt)("h4",{id:"--help--h"},(0,r.kt)("strong",{parentName:"h4"},"--help"),", ",(0,r.kt)("strong",{parentName:"h4"},"-h")),(0,r.kt)("p",null,"Print usage statement"),(0,r.kt)("h4",{id:"--latest--l"},(0,r.kt)("strong",{parentName:"h4"},"--latest"),", ",(0,r.kt)("strong",{parentName:"h4"},"-l")),(0,r.kt)("p",null,"Show the latest pod created (all states) (This option is not available with the remote Podman client, including Mac and Windows (excluding WSL2) machines)"),(0,r.kt)("h4",{id:"--namespace---ns"},(0,r.kt)("strong",{parentName:"h4"},"--namespace"),", ",(0,r.kt)("strong",{parentName:"h4"},"--ns")),(0,r.kt)("p",null,"Display namespace information of the pod"),(0,r.kt)("h4",{id:"--no-trunc"},(0,r.kt)("strong",{parentName:"h4"},"--no-trunc")),(0,r.kt)("p",null,"Do not truncate the output (default ",(0,r.kt)("em",{parentName:"p"},"false"),")."),(0,r.kt)("p",null,"@@option noheading"),(0,r.kt)("h4",{id:"--quiet--q"},(0,r.kt)("strong",{parentName:"h4"},"--quiet"),", ",(0,r.kt)("strong",{parentName:"h4"},"-q")),(0,r.kt)("p",null,"Print the numeric IDs of the pods only"),(0,r.kt)("h4",{id:"--sort"},(0,r.kt)("strong",{parentName:"h4"},"--sort")),(0,r.kt)("p",null,"Sort by created, ID, name, status, or number of containers"),(0,r.kt)("p",null,"Default: created"),(0,r.kt)("h2",{id:"examples"},"EXAMPLES"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"$ podman pod ps\nPOD ID         NAME              STATUS    CREATED          INFRA ID       # OF CONTAINERS\n00dfd6fa02c0   jolly_goldstine   Running   31 hours ago     ba465ab0a3a4   1\nf4df8692e116   nifty_torvalds    Created   10 minutes ago   331693bff40a   2\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"$ podman pod ps --ctr-names\nPOD ID         NAME              STATUS    CREATED          INFRA ID       NAMES\n00dfd6fa02c0   jolly_goldstine   Running   31 hours ago     ba465ab0a3a4   loving_archimedes\nf4df8692e116   nifty_torvalds    Created   10 minutes ago   331693bff40a   thirsty_hawking,wizardly_golick\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"$ podman pod ps --ctr-status --ctr-names --ctr-ids\nPOD ID         NAME              STATUS    CREATED          INFRA ID       IDS                         NAMES                             STATUS\n00dfd6fa02c0   jolly_goldstine   Running   31 hours ago     ba465ab0a3a4   ba465ab0a3a4                loving_archimedes                 running\nf4df8692e116   nifty_torvalds    Created   10 minutes ago   331693bff40a   331693bff40a,8e428daeb89e   thirsty_hawking,wizardly_golick   configured,configured\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'$ podman pod ps --format "{{.ID}}  {{.ContainerNames}}  {{.Cgroup}}"\n00dfd6fa02c0   loving_archimedes   /libpod_parent\nf4df8692e116   thirsty_hawking,wizardly_golick   /libpod_parent\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"$ podman pod ps --sort id --filter ctr-number=2\nPOD ID         NAME             STATUS    CREATED          INFRA ID       # OF CONTAINERS\nf4df8692e116   nifty_torvalds   Created   10 minutes ago   331693bff40a   2\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"$ podman pod ps  --ctr-ids\nPOD ID         NAME              STATUS    CREATED          INFRA ID       IDS\n00dfd6fa02c0   jolly_goldstine   Running   31 hours ago     ba465ab0a3a4   ba465ab0a3a4\nf4df8692e116   nifty_torvalds    Created   10 minutes ago   331693bff40a   331693bff40a,8e428daeb89e\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"$ podman pod ps --no-trunc --ctr-ids\nPOD ID                                                             NAME              STATUS    CREATED          INFRA ID                                                           IDS\n00dfd6fa02c0a2daaedfdf8fcecd06f22ad114d46d167d71777224735f701866   jolly_goldstine   Running   31 hours ago     ba465ab0a3a4e15e3539a1e79c32d1213a02b0989371e274f98e0f1ae9de7050   ba465ab0a3a4e15e3539a1e79c32d1213a02b0989371e274f98e0f1ae9de7050\nf4df8692e116a3e6d1d62572644ed36ca475d933808cc3c93435c45aa139314b   nifty_torvalds    Created   10 minutes ago   331693bff40a926b6d52b184e116afd15497610c378d5d4c42945dd6e33b75b0   331693bff40a926b6d52b184e116afd15497610c378d5d4c42945dd6e33b75b0,8e428daeb89e69b71e7916a13accfb87d122889442b5c05c2d99cf94a3230e9d\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"$ podman pod ps --ctr-names\nPOD ID         NAME   STATUS    CREATED        INFRA ID       NAMES\n314f4da82d74   hi     Created   17 hours ago   a9f2d2165675   jovial_jackson,hopeful_archimedes,vibrant_ptolemy,heuristic_jennings,keen_raman,hopeful_newton,mystifying_bose,silly_lalande,serene_lichterman ...\n")),(0,r.kt)("h2",{id:"pod-ps"},"pod ps"),(0,r.kt)("p",null,"Print a list of pods"),(0,r.kt)("h2",{id:"see-also"},"SEE ALSO"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"/docs/podman"},"podman(1)")),", ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"/docs/commands/podman-pod/"},"podman-pod(1)"))),(0,r.kt)("h2",{id:"history"},"HISTORY"),(0,r.kt)("p",null,"July 2018, Originally compiled by Peter Hunt ",(0,r.kt)("a",{parentName:"p",href:"mailto:pehunt@redhat.com"},"pehunt@redhat.com")))}u.isMDXComponent=!0}}]);