"use strict";(self.webpackChunkpodman=self.webpackChunkpodman||[]).push([[7738],{3905:(e,n,t)=>{t.d(n,{Zo:()=>d,kt:()=>f});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function p(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var i=r.createContext({}),l=function(e){var n=r.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):p(p({},n),e)),t},d=function(e){var n=l(e.components);return r.createElement(i.Provider,{value:n},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},c=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),m=l(t),c=a,f=m["".concat(i,".").concat(c)]||m[c]||u[c]||o;return t?r.createElement(f,p(p({ref:n},d),{},{components:t})):r.createElement(f,p({ref:n},d))}));function f(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,p=new Array(o);p[0]=c;var s={};for(var i in n)hasOwnProperty.call(n,i)&&(s[i]=n[i]);s.originalType=e,s[m]="string"==typeof e?e:a,p[1]=s;for(var l=2;l<o;l++)p[l]=t[l];return r.createElement.apply(null,p)}return r.createElement.apply(null,t)}c.displayName="MDXCreateElement"},984:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>p,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var r=t(7462),a=(t(7294),t(3905));const o={},p=void 0,s={unversionedId:"podman-unshare",id:"podman-unshare",title:"podman-unshare",description:"% podman-unshare 1",source:"@site/docs/podman-unshare.md",sourceDirName:".",slug:"/podman-unshare",permalink:"/websites-new/docs/podman-unshare",draft:!1,editUrl:"https://github.com/containers/website-new/docs/podman-unshare.md",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"podman-unpause",permalink:"/websites-new/docs/podman-unpause"},next:{title:"podman-untag",permalink:"/websites-new/docs/podman-untag"}},i={},l=[{value:"NAME",id:"name",level:2},{value:"SYNOPSIS",id:"synopsis",level:2},{value:"DESCRIPTION",id:"description",level:2},{value:"OPTIONS",id:"options",level:2},{value:"<strong>--help</strong>, <strong>-h</strong>",id:"--help--h",level:4},{value:"<strong>--rootless-netns</strong>",id:"--rootless-netns",level:4},{value:"Exit Codes",id:"exit-codes",level:2},{value:"EXAMPLE",id:"example",level:2},{value:"SEE ALSO",id:"see-also",level:2}],d={toc:l},m="wrapper";function u(e){let{components:n,...t}=e;return(0,a.kt)(m,(0,r.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"% podman-unshare 1"),(0,a.kt)("h2",{id:"name"},"NAME"),(0,a.kt)("p",null,"podman","-","unshare - Run a command inside of a modified user namespace"),(0,a.kt)("h2",{id:"synopsis"},"SYNOPSIS"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"podman unshare")," ","[",(0,a.kt)("em",{parentName:"p"},"options"),"][*command*]"),(0,a.kt)("h2",{id:"description"},"DESCRIPTION"),(0,a.kt)("p",null,"Launches a process (by default, ",(0,a.kt)("em",{parentName:"p"},"$SHELL"),") in a new user namespace. The user\nnamespace is configured so that the invoking user's UID and primary GID appear\nto be UID 0 and GID 0, respectively. Any ranges which match that user and\ngroup in ",(0,a.kt)("inlineCode",{parentName:"p"},"/etc/subuid")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"/etc/subgid")," are also mapped in as themselves with the\nhelp of the ",(0,a.kt)("em",{parentName:"p"},"newuidmap(1)")," and ",(0,a.kt)("em",{parentName:"p"},"newgidmap(1)")," helpers."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"podman unshare")," is useful for troubleshooting unprivileged operations and for\nmanually clearing storage and other data related to images and containers."),(0,a.kt)("p",null,"It is also useful to use the ",(0,a.kt)("strong",{parentName:"p"},"podman mount")," command. If an unprivileged user wants to mount and work with a container, then they need to execute\n",(0,a.kt)("strong",{parentName:"p"},"podman unshare"),". Executing ",(0,a.kt)("strong",{parentName:"p"},"podman mount")," fails for unprivileged users unless the user is running inside a ",(0,a.kt)("strong",{parentName:"p"},"podman unshare")," session."),(0,a.kt)("p",null,"The unshare session defines two environment variables:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"CONTAINERS_GRAPHROOT"),": the path to the persistent container's data."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"CONTAINERS_RUNROOT"),": the path to the volatile container's data.")),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"IMPORTANT: This command is not available with the remote Podman client.")),(0,a.kt)("h2",{id:"options"},"OPTIONS"),(0,a.kt)("h4",{id:"--help--h"},(0,a.kt)("strong",{parentName:"h4"},"--help"),", ",(0,a.kt)("strong",{parentName:"h4"},"-h")),(0,a.kt)("p",null,"Print usage statement"),(0,a.kt)("h4",{id:"--rootless-netns"},(0,a.kt)("strong",{parentName:"h4"},"--rootless-netns")),(0,a.kt)("p",null,"Join the rootless network namespace used for netavark networking. It can be used to\nconnect to a rootless container via IP address (bridge networking). This is otherwise\nnot possible from the host network namespace."),(0,a.kt)("h2",{id:"exit-codes"},"Exit Codes"),(0,a.kt)("p",null,"The exit code from ",(0,a.kt)("inlineCode",{parentName:"p"},"podman unshare")," gives information about why the container\nfailed to run or why it exited. When ",(0,a.kt)("inlineCode",{parentName:"p"},"podman unshare")," commands exit with a non-zero code,\nthe exit codes follow the ",(0,a.kt)("inlineCode",{parentName:"p"},"chroot")," standard, see below:"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"125")," The error is with podman ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("em",{parentName:"strong"},"itself"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"$ podman unshare --foo; echo $?\nError: unknown flag: --foo\n125\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"126")," Executing a ",(0,a.kt)("em",{parentName:"p"},"contained command")," and the ",(0,a.kt)("em",{parentName:"p"},"command")," cannot be invoked"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"$ podman unshare /etc; echo $?\nError: fork/exec /etc: permission denied\n126\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"127")," Executing a ",(0,a.kt)("em",{parentName:"p"},"contained command")," and the ",(0,a.kt)("em",{parentName:"p"},"command")," cannot be found"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"$ podman unshare foo; echo $?\nError: fork/exec /usr/bin/bogus: no such file or directory\n127\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Exit code")," ",(0,a.kt)("em",{parentName:"p"},"contained command")," exit code"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"$ podman unshare /bin/sh -c 'exit 3'; echo $?\n3\n")),(0,a.kt)("h2",{id:"example"},"EXAMPLE"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"$ podman unshare id\nuid=0(root) gid=0(root) groups=0(root),65534(nobody)\n\n$ podman unshare cat /proc/self/uid_map /proc/self/gid_map\n         0       1000          1\n         1      10000      65536\n         0       1000          1\n         1      10000      65536\n\n$ podman unshare --rootless-netns ip addr\n1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n    inet 127.0.0/8 scope host lo\n       valid_lft forever preferred_lft forever\n    inet6 ::1/128 scope host\n       valid_lft forever preferred_lft forever\n2: tap0: <BROADCAST,UP,LOWER_UP> mtu 65520 qdisc fq_codel state UNKNOWN group default qlen 1000\n    link/ether aa:8c:0b:73:98:f6 brd ff:ff:ff:ff:ff:ff\n    inet 10.0.200/24 brd 10.0.2.255 scope global tap0\n       valid_lft forever preferred_lft forever\n    inet6 fd00::a88c:bff:fe73:98f6/64 scope global dynamic mngtmpaddr\n       valid_lft 86389sec preferred_lft 14389sec\n    inet6 fe80::a88c:bff:fe73:98f6/64 scope link\n       valid_lft forever preferred_lft forever\n")),(0,a.kt)("h2",{id:"see-also"},"SEE ALSO"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("a",{parentName:"strong",href:"/websites-new/docs/podman"},"podman(1)")),", ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("a",{parentName:"strong",href:"/websites-new/docs/podman-mount"},"podman-mount(1)")),", ",(0,a.kt)("strong",{parentName:"p"},"namespaces(7)"),", ",(0,a.kt)("strong",{parentName:"p"},"newuidmap(1)"),", ",(0,a.kt)("strong",{parentName:"p"},"newgidmap(1)"),", ",(0,a.kt)("strong",{parentName:"p"},"user_namespaces(7)")))}u.isMDXComponent=!0}}]);