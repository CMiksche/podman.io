"use strict";(self.webpackChunkpodman=self.webpackChunkpodman||[]).push([[8034],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>g});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function p(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),l=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):p(p({},t),e)),n},m=function(e){var t=l(e.components);return a.createElement(s.Provider,{value:t},e.children)},d="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,m=i(e,["components","mdxType","originalType","parentName"]),d=l(n),u=r,g=d["".concat(s,".").concat(u)]||d[u]||c[u]||o;return n?a.createElement(g,p(p({ref:t},m),{},{components:n})):a.createElement(g,p({ref:t},m))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,p=new Array(o);p[0]=u;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[d]="string"==typeof e?e:r,p[1]=i;for(var l=2;l<o;l++)p[l]=n[l];return a.createElement.apply(null,p)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},2898:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>p,default:()=>c,frontMatter:()=>o,metadata:()=>i,toc:()=>l});var a=n(7462),r=(n(7294),n(3905));const o={},p=void 0,i={unversionedId:"podman-save",id:"podman-save",title:"podman-save",description:"% podman-save 1",source:"@site/docs/podman-save.md",sourceDirName:".",slug:"/podman-save",permalink:"/website-new/docs/podman-save",draft:!1,editUrl:"https://github.com/containers/website-new/docs/podman-save.md",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"podman-run",permalink:"/website-new/docs/podman-run"},next:{title:"podman-search",permalink:"/website-new/docs/podman-search"}},s={},l=[{value:"NAME",id:"name",level:2},{value:"SYNOPSIS",id:"synopsis",level:2},{value:"DESCRIPTION",id:"description",level:2},{value:"OPTIONS",id:"options",level:2},{value:"<strong>--format</strong>=<em>format</em>",id:"--formatformat",level:4},{value:"<strong>--help</strong>, <strong>-h</strong>",id:"--help--h",level:4},{value:"<strong>--multi-image-archive</strong>, <strong>-m</strong>",id:"--multi-image-archive--m",level:4},{value:"<strong>--output</strong>, <strong>-o</strong>=<em>file</em>",id:"--output--ofile",level:4},{value:"<strong>--quiet</strong>, <strong>-q</strong>",id:"--quiet--q",level:4},{value:"<strong>--uncompressed</strong>",id:"--uncompressed",level:4},{value:"EXAMPLES",id:"examples",level:2},{value:"SEE ALSO",id:"see-also",level:2},{value:"HISTORY",id:"history",level:2}],m={toc:l},d="wrapper";function c(e){let{components:t,...n}=e;return(0,r.kt)(d,(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"% podman-save 1"),(0,r.kt)("h2",{id:"name"},"NAME"),(0,r.kt)("p",null,"podman","-","save - Save image(s) to an archive"),(0,r.kt)("h2",{id:"synopsis"},"SYNOPSIS"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"podman save")," ","[",(0,r.kt)("em",{parentName:"p"},"options"),"]"," ",(0,r.kt)("em",{parentName:"p"},"name"),"[:",(0,r.kt)("em",{parentName:"p"},"tag"),"]"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"podman image save")," ","[",(0,r.kt)("em",{parentName:"p"},"options"),"]"," ",(0,r.kt)("em",{parentName:"p"},"name"),"[:",(0,r.kt)("em",{parentName:"p"},"tag"),"]"),(0,r.kt)("h2",{id:"description"},"DESCRIPTION"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"podman save")," saves an image to a local file or directory.\n",(0,r.kt)("strong",{parentName:"p"},"podman save")," writes to STDOUT by default and can be redirected to a\nfile using the ",(0,r.kt)("strong",{parentName:"p"},"output")," flag. The ",(0,r.kt)("strong",{parentName:"p"},"quiet")," flag suppresses the output when set.\n",(0,r.kt)("strong",{parentName:"p"},"podman save")," will save parent layers of the image(s) and the image(s) can be loaded using ",(0,r.kt)("strong",{parentName:"p"},"podman load"),".\nTo export the containers, use the ",(0,r.kt)("strong",{parentName:"p"},"podman export"),".\nNote: ",(0,r.kt)("inlineCode",{parentName:"p"},":")," is a restricted character and cannot be part of the file name."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"podman ","[GLOBAL OPTIONS]")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"podman save ","[GLOBAL OPTIONS]")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"podman save ","[OPTIONS]"," NAME","[:TAG]")),(0,r.kt)("h2",{id:"options"},"OPTIONS"),(0,r.kt)("p",null,"@@option dir-compress"),(0,r.kt)("p",null,"Note: This flag can only be set with ",(0,r.kt)("strong",{parentName:"p"},"--format=docker-dir"),"."),(0,r.kt)("h4",{id:"--formatformat"},(0,r.kt)("strong",{parentName:"h4"},"--format"),"=",(0,r.kt)("em",{parentName:"h4"},"format")),(0,r.kt)("p",null,"An image format to produce, one of:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Format"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"docker-archive")),(0,r.kt)("td",{parentName:"tr",align:null},"A tar archive interoperable with ",(0,r.kt)("strong",{parentName:"td"},"docker load(1)")," (the default)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"oci-archive")),(0,r.kt)("td",{parentName:"tr",align:null},"A tar archive using the OCI Image Format")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"oci-dir")),(0,r.kt)("td",{parentName:"tr",align:null},"A directory using the OCI Image Format")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"docker-dir")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"dir")," transport (see ",(0,r.kt)("strong",{parentName:"td"},"containers-transports(5)"),") with v2s2 manifest type")))),(0,r.kt)("h4",{id:"--help--h"},(0,r.kt)("strong",{parentName:"h4"},"--help"),", ",(0,r.kt)("strong",{parentName:"h4"},"-h")),(0,r.kt)("p",null,"Print usage statement"),(0,r.kt)("h4",{id:"--multi-image-archive--m"},(0,r.kt)("strong",{parentName:"h4"},"--multi-image-archive"),", ",(0,r.kt)("strong",{parentName:"h4"},"-m")),(0,r.kt)("p",null,"Allow for creating archives with more than one image. Additional names will be interpreted as images instead of tags. Only supported for ",(0,r.kt)("strong",{parentName:"p"},"--format=docker-archive"),".\nThe default for this option can be modified via the ",(0,r.kt)("inlineCode",{parentName:"p"},'multi_image_archive="true"|"false"')," flag in containers.conf."),(0,r.kt)("h4",{id:"--output--ofile"},(0,r.kt)("strong",{parentName:"h4"},"--output"),", ",(0,r.kt)("strong",{parentName:"h4"},"-o"),"=",(0,r.kt)("em",{parentName:"h4"},"file")),(0,r.kt)("p",null,"Write to a file, default is STDOUT"),(0,r.kt)("h4",{id:"--quiet--q"},(0,r.kt)("strong",{parentName:"h4"},"--quiet"),", ",(0,r.kt)("strong",{parentName:"h4"},"-q")),(0,r.kt)("p",null,"Suppress the output"),(0,r.kt)("h4",{id:"--uncompressed"},(0,r.kt)("strong",{parentName:"h4"},"--uncompressed")),(0,r.kt)("p",null,"Accept uncompressed layers when using one of the OCI formats."),(0,r.kt)("h2",{id:"examples"},"EXAMPLES"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"$ podman save --quiet -o alpine.tar alpine:2.6\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"$ podman save > alpine-all.tar alpine\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"$ podman save -o oci-alpine.tar --format oci-archive alpine\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"$ podman save --compress --format oci-dir -o alp-dir alpine\nGetting image source signatures\nCopying blob sha256:2fdfe1cd78c20d05774f0919be19bc1a3e4729bce219968e4188e7e0f1af679d\n 1.97 MB / 1.97 MB [========================================================] 0s\nCopying config sha256:501d1a8f0487e93128df34ea349795bc324d5e0c0d5112e08386a9dfaff620be\n 584 B / 584 B [============================================================] 0s\nWriting manifest to image destination\nStoring signatures\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"$ podman save --format docker-dir -o ubuntu-dir ubuntu\nGetting image source signatures\nCopying blob sha256:660c48dd555dcbfdfe19c80a30f557ac57a15f595250e67bfad1e5663c1725bb\n 45.55 MB / 45.55 MB [======================================================] 8s\nCopying blob sha256:4c7380416e7816a5ab1f840482c9c3ca8de58c6f3ee7f95e55ad299abbfe599f\n 846 B / 846 B [============================================================] 0s\nCopying blob sha256:421e436b5f80d876128b74139531693be9b4e59e4f1081c9a3c379c95094e375\n 620 B / 620 B [============================================================] 0s\nCopying blob sha256:e4ce6c3651b3a090bb43688f512f687ea6e3e533132bcbc4a83fb97e7046cea3\n 849 B / 849 B [============================================================] 0s\nCopying blob sha256:be588e74bd348ce48bb7161350f4b9d783c331f37a853a80b0b4abc0a33c569e\n 169 B / 169 B [============================================================] 0s\nCopying config sha256:20c44cd7596ff4807aef84273c99588d22749e2a7e15a7545ac96347baa65eda\n 3.53 KB / 3.53 KB [========================================================] 0s\nWriting manifest to image destination\nStoring signatures\n")),(0,r.kt)("h2",{id:"see-also"},"SEE ALSO"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"/website-new/docs/podman"},"podman(1)")),", ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"/website-new/docs/podman-load"},"podman-load(1)")),", ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"https://github.com/containers/common/blob/main/docs/containers.conf.5.md"},"containers.conf(5)")),", ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"https://github.com/containers/image/blob/main/docs/containers-transports.5.md"},"containers-transports(5)"))),(0,r.kt)("h2",{id:"history"},"HISTORY"),(0,r.kt)("p",null,"July 2017, Originally compiled by Urvashi Mohnani ",(0,r.kt)("a",{parentName:"p",href:"mailto:umohnani@redhat.com"},"umohnani@redhat.com")))}c.isMDXComponent=!0}}]);