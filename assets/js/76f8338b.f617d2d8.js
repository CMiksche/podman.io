"use strict";(self.webpackChunkpodman=self.webpackChunkpodman||[]).push([[7267],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>h});var o=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var m=o.createContext({}),p=function(e){var t=o.useContext(m),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},l=function(e){var t=p(e.components);return o.createElement(m.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},u=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,m=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),c=p(n),u=a,h=c["".concat(m,".").concat(u)]||c[u]||d[u]||r;return n?o.createElement(h,s(s({ref:t},l),{},{components:n})):o.createElement(h,s({ref:t},l))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,s=new Array(r);s[0]=u;var i={};for(var m in t)hasOwnProperty.call(t,m)&&(i[m]=t[m]);i.originalType=e,i[c]="string"==typeof e?e:a,s[1]=i;for(var p=2;p<r;p++)s[p]=n[p];return o.createElement.apply(null,s)}return o.createElement.apply(null,n)}u.displayName="MDXCreateElement"},5404:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>m,contentTitle:()=>s,default:()=>d,frontMatter:()=>r,metadata:()=>i,toc:()=>p});var o=n(7462),a=(n(7294),n(3905));const r={},s=void 0,i={unversionedId:"commands/podman-system/podman-system-service",id:"commands/podman-system/podman-system-service",title:"podman-system-service",description:"% podman-system-service 1",source:"@site/docs/commands/podman-system/podman-system-service.md",sourceDirName:"commands/podman-system",slug:"/commands/podman-system/podman-system-service",permalink:"/docs/commands/podman-system/podman-system-service",draft:!1,editUrl:"https://github.com/containers/website-new/docs/commands/podman-system/podman-system-service.md",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"podman-system-reset",permalink:"/docs/commands/podman-system/podman-system-reset"},next:{title:"podman-system-connection",permalink:"/docs/commands/podman-system-connection/"}},m={},p=[{value:"NAME",id:"name",level:2},{value:"SYNOPSIS",id:"synopsis",level:2},{value:"DESCRIPTION",id:"description",level:2},{value:"OPTIONS",id:"options",level:2},{value:"<strong>--cors</strong>",id:"--cors",level:4},{value:"<strong>--help</strong>, <strong>-h</strong>",id:"--help--h",level:4},{value:"<strong>--time</strong>, <strong>-t</strong>",id:"--time--t",level:4},{value:"EXAMPLES",id:"examples",level:2},{value:"SEE ALSO",id:"see-also",level:2},{value:"HISTORY",id:"history",level:2}],l={toc:p},c="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(c,(0,o.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"% podman-system-service 1"),(0,a.kt)("h2",{id:"name"},"NAME"),(0,a.kt)("p",null,"podman","-","system","-","service - Run an API service"),(0,a.kt)("h2",{id:"synopsis"},"SYNOPSIS"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"podman system service")," ","[",(0,a.kt)("em",{parentName:"p"},"options"),"]"),(0,a.kt)("h2",{id:"description"},"DESCRIPTION"),(0,a.kt)("p",null,"The ",(0,a.kt)("strong",{parentName:"p"},"podman system service")," command creates a listening service that will answer API calls for Podman. You may\noptionally provide an endpoint for the API in URI form. For example, ",(0,a.kt)("em",{parentName:"p"},"unix:///tmp/foobar.sock")," or ",(0,a.kt)("em",{parentName:"p"},"tcp://localhost:8080"),".\nIf no endpoint is provided, defaults will be used. The default endpoint for a rootful\nservice is ",(0,a.kt)("em",{parentName:"p"},"unix:///run/podman/podman.sock")," and rootless is ",(0,a.kt)("em",{parentName:"p"},"unix://$XDG_RUNTIME_DIR/podman/podman.sock")," (for\nexample ",(0,a.kt)("em",{parentName:"p"},"unix:///run/user/1000/podman/podman.sock"),")"),(0,a.kt)("p",null,"To access the API service inside a container:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"mount the socket as a volume"),(0,a.kt)("li",{parentName:"ul"},"run the container with ",(0,a.kt)("inlineCode",{parentName:"li"},"--security-opt label=disable"))),(0,a.kt)("p",null,"The REST API provided by ",(0,a.kt)("strong",{parentName:"p"},"podman system service")," is split into two parts: a compatibility layer offering support for the Docker v1.40 API, and a Podman-native Libpod layer.\nDocumentation for the latter is available at ",(0,a.kt)("em",{parentName:"p"},(0,a.kt)("a",{parentName:"em",href:"https://docs.podman.io/en/latest/_static/api.html"},"https://docs.podman.io/en/latest/_static/api.html")),".\nBoth APIs are versioned, but the server will not reject requests with an unsupported version set."),(0,a.kt)("p",null,"Please note that the API grants full access to Podman's capabilities, and as such should be treated as allowing arbitrary code execution as the user running the API.\nAs such, we strongly recommend against making the API socket available via the network.\nThe default configuration (a Unix socket with permissions set to only allow the user running Podman) is the most secure way of running the API."),(0,a.kt)("p",null,"Note: The default systemd unit files (system and user) change the log-level option to ",(0,a.kt)("em",{parentName:"p"},"info")," from ",(0,a.kt)("em",{parentName:"p"},"error"),". This change provides additional information on each API call."),(0,a.kt)("h2",{id:"options"},"OPTIONS"),(0,a.kt)("h4",{id:"--cors"},(0,a.kt)("strong",{parentName:"h4"},"--cors")),(0,a.kt)("p",null,"CORS headers to inject to the HTTP response. The default value is empty string which disables CORS headers."),(0,a.kt)("h4",{id:"--help--h"},(0,a.kt)("strong",{parentName:"h4"},"--help"),", ",(0,a.kt)("strong",{parentName:"h4"},"-h")),(0,a.kt)("p",null,"Print usage statement."),(0,a.kt)("h4",{id:"--time--t"},(0,a.kt)("strong",{parentName:"h4"},"--time"),", ",(0,a.kt)("strong",{parentName:"h4"},"-t")),(0,a.kt)("p",null,"The time until the session expires in ",(0,a.kt)("em",{parentName:"p"},"seconds"),". The default is 5\nseconds. A value of ",(0,a.kt)("inlineCode",{parentName:"p"},"0")," means no timeout, therefore the session will not expire."),(0,a.kt)("p",null,"The default timeout can be changed via the ",(0,a.kt)("inlineCode",{parentName:"p"},"service_timeout=VALUE")," field in containers.conf.\nSee ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("a",{parentName:"strong",href:"https://github.com/containers/common/blob/main/docs/containers.conf.5.md"},"containers.conf(5)"))," for more information."),(0,a.kt)("h2",{id:"examples"},"EXAMPLES"),(0,a.kt)("p",null,"Run an API listening for 5 seconds using the default socket."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"podman system service --time 5\n")),(0,a.kt)("h2",{id:"see-also"},"SEE ALSO"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("a",{parentName:"strong",href:"/docs/podman"},"podman(1)")),", ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("a",{parentName:"strong",href:"/docs/commands/podman-system-connection/"},"podman-system-connection(1)")),", ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("a",{parentName:"strong",href:"https://github.com/containers/common/blob/main/docs/containers.conf.5.md"},"containers.conf(5)"))),(0,a.kt)("h2",{id:"history"},"HISTORY"),(0,a.kt)("p",null,"January 2020, Originally compiled by Brent Baude ",(0,a.kt)("inlineCode",{parentName:"p"},"<bbaude@redhat.com>"),"\nNovember 2020, Updated by Jhon Honce (jhonce at redhat dot com)"))}d.isMDXComponent=!0}}]);