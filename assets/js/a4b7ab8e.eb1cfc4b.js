"use strict";(self.webpackChunkpodman=self.webpackChunkpodman||[]).push([[7126],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>w});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),d=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},c=function(e){var t=d(e.components);return a.createElement(p.Provider,{value:t},e.children)},m="mdxType",l={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},k=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),m=d(n),k=r,w=m["".concat(p,".").concat(k)]||m[k]||l[k]||o;return n?a.createElement(w,s(s({ref:t},c),{},{components:n})):a.createElement(w,s({ref:t},c))}));function w(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,s=new Array(o);s[0]=k;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[m]="string"==typeof e?e:r,s[1]=i;for(var d=2;d<o;d++)s[d]=n[d];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}k.displayName="MDXCreateElement"},3827:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>s,default:()=>l,frontMatter:()=>o,metadata:()=>i,toc:()=>d});var a=n(7462),r=(n(7294),n(3905));const o={},s=void 0,i={unversionedId:"podman-network/podman-network-connect",id:"podman-network/podman-network-connect",title:"podman-network-connect",description:"% podman-network-connect 1",source:"@site/docs/podman-network/podman-network-connect.md",sourceDirName:"podman-network",slug:"/podman-network/podman-network-connect",permalink:"/website-new/docs/podman-network/podman-network-connect",draft:!1,editUrl:"https://github.com/containers/website-new/docs/podman-network/podman-network-connect.md",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"podman-network",permalink:"/website-new/docs/podman-network/"},next:{title:"podman-network-create",permalink:"/website-new/docs/podman-network/podman-network-create"}},p={},d=[{value:"NAME",id:"name",level:2},{value:"SYNOPSIS",id:"synopsis",level:2},{value:"DESCRIPTION",id:"description",level:2},{value:"OPTIONS",id:"options",level:2},{value:"<strong>--alias</strong>=<em>name</em>",id:"--aliasname",level:4},{value:"<strong>--ip</strong>=<em>address</em>",id:"--ipaddress",level:4},{value:"<strong>--ip6</strong>=<em>address</em>",id:"--ip6address",level:4},{value:"<strong>--mac-address</strong>=<em>address</em>",id:"--mac-addressaddress",level:4},{value:"EXAMPLE",id:"example",level:2},{value:"SEE ALSO",id:"see-also",level:2},{value:"HISTORY",id:"history",level:2}],c={toc:d},m="wrapper";function l(e){let{components:t,...n}=e;return(0,r.kt)(m,(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"% podman-network-connect 1"),(0,r.kt)("h2",{id:"name"},"NAME"),(0,r.kt)("p",null,"podman","-","network","-","connect - Connect a container to a network"),(0,r.kt)("h2",{id:"synopsis"},"SYNOPSIS"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"podman network connect")," ","[",(0,r.kt)("em",{parentName:"p"},"options"),"]"," network container"),(0,r.kt)("h2",{id:"description"},"DESCRIPTION"),(0,r.kt)("p",null,"Connects a container to a network. A container can be connected to a network by name or by ID.\nOnce connected, the container can communicate with other containers in the same network."),(0,r.kt)("h2",{id:"options"},"OPTIONS"),(0,r.kt)("h4",{id:"--aliasname"},(0,r.kt)("strong",{parentName:"h4"},"--alias"),"=",(0,r.kt)("em",{parentName:"h4"},"name")),(0,r.kt)("p",null,"Add network-scoped alias for the container. If the network has DNS enabled (",(0,r.kt)("inlineCode",{parentName:"p"},"podman network inspect -f {{.DNSEnabled}} <NAME>"),"),\nthese aliases can be used for name resolution on the given network. Multiple ",(0,r.kt)("em",{parentName:"p"},"--alias")," options may be specified as input.\nNOTE: When using CNI a container will only have access to aliases on the first network that it joins. This limitation does\nnot exist with netavark/aardvark-dns."),(0,r.kt)("h4",{id:"--ipaddress"},(0,r.kt)("strong",{parentName:"h4"},"--ip"),"=",(0,r.kt)("em",{parentName:"h4"},"address")),(0,r.kt)("p",null,"Set a static ipv4 address for this container on this network."),(0,r.kt)("h4",{id:"--ip6address"},(0,r.kt)("strong",{parentName:"h4"},"--ip6"),"=",(0,r.kt)("em",{parentName:"h4"},"address")),(0,r.kt)("p",null,"Set a static ipv6 address for this container on this network."),(0,r.kt)("h4",{id:"--mac-addressaddress"},(0,r.kt)("strong",{parentName:"h4"},"--mac-address"),"=",(0,r.kt)("em",{parentName:"h4"},"address")),(0,r.kt)("p",null,"Set a static mac address for this container on this network."),(0,r.kt)("h2",{id:"example"},"EXAMPLE"),(0,r.kt)("p",null,"Connect a container named ",(0,r.kt)("em",{parentName:"p"},"web")," to a network named ",(0,r.kt)("em",{parentName:"p"},"test")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"podman network connect test web\n")),(0,r.kt)("p",null,"Connect a container name ",(0,r.kt)("em",{parentName:"p"},"web")," to a network named ",(0,r.kt)("em",{parentName:"p"},"test")," with two aliases: web1 and web2"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"podman network connect --alias web1 --alias web2 test web\n")),(0,r.kt)("p",null,"Connect a container name ",(0,r.kt)("em",{parentName:"p"},"web")," to a network named ",(0,r.kt)("em",{parentName:"p"},"test")," with a static ip."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"podman network connect --ip 10.893 test web\n")),(0,r.kt)("h2",{id:"see-also"},"SEE ALSO"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"/website-new/docs/podman"},"podman(1)")),", ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"/website-new/docs/podman-network/"},"podman-network(1)")),", ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"/website-new/docs/podman-network/podman-network-inspect"},"podman-network-inspect(1)")),", ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"/website-new/docs/podman-network/podman-network-disconnect"},"podman-network-disconnect(1)"))),(0,r.kt)("h2",{id:"history"},"HISTORY"),(0,r.kt)("p",null,"November 2020, Originally compiled by Brent Baude ",(0,r.kt)("a",{parentName:"p",href:"mailto:bbaude@redhat.com"},"bbaude@redhat.com")))}l.isMDXComponent=!0}}]);