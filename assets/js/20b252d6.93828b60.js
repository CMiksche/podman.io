"use strict";(self.webpackChunkpodman=self.webpackChunkpodman||[]).push([[2364],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>u});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=r.createContext({}),m=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=m(e.components);return r.createElement(l.Provider,{value:t},e.children)},d="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=m(n),c=i,u=d["".concat(l,".").concat(c)]||d[c]||g[c]||a;return n?r.createElement(u,o(o({ref:t},p),{},{components:n})):r.createElement(u,o({ref:t},p))}));function u(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=c;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[d]="string"==typeof e?e:i,o[1]=s;for(var m=2;m<a;m++)o[m]=n[m];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"},853:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>g,frontMatter:()=>a,metadata:()=>s,toc:()=>m});var r=n(7462),i=(n(7294),n(3905));const a={},o=void 0,s={unversionedId:"commands/podman-image/podman-image-sign",id:"commands/podman-image/podman-image-sign",title:"podman-image-sign",description:"% podman-image-sign 1",source:"@site/docs/commands/podman-image/podman-image-sign.md",sourceDirName:"commands/podman-image",slug:"/commands/podman-image/podman-image-sign",permalink:"/docs/commands/podman-image/podman-image-sign",draft:!1,editUrl:"https://github.com/containers/website-new/docs/commands/podman-image/podman-image-sign.md",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"podman-image-scp",permalink:"/docs/commands/podman-image/podman-image-scp"},next:{title:"podman-image-tree",permalink:"/docs/commands/podman-image/podman-image-tree"}},l={},m=[{value:"NAME",id:"name",level:2},{value:"SYNOPSIS",id:"synopsis",level:2},{value:"DESCRIPTION",id:"description",level:2},{value:"OPTIONS",id:"options",level:2},{value:"<strong>--all</strong>, <strong>-a</strong>",id:"--all--a",level:4},{value:"<strong>--directory</strong>, <strong>-d</strong>=<em>dir</em>",id:"--directory--ddir",level:4},{value:"<strong>--help</strong>, <strong>-h</strong>",id:"--help--h",level:4},{value:"<strong>--sign-by</strong>=<em>identity</em>",id:"--sign-byidentity",level:4},{value:"EXAMPLES",id:"examples",level:2},{value:"RELATED CONFIGURATION",id:"related-configuration",level:2},{value:"SEE ALSO",id:"see-also",level:2},{value:"HISTORY",id:"history",level:2}],p={toc:m},d="wrapper";function g(e){let{components:t,...n}=e;return(0,i.kt)(d,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"% podman-image-sign 1"),(0,i.kt)("h2",{id:"name"},"NAME"),(0,i.kt)("p",null,"podman-image-sign - Create a signature for an image"),(0,i.kt)("h2",{id:"synopsis"},"SYNOPSIS"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"podman image sign")," ","[",(0,i.kt)("em",{parentName:"p"},"options"),"]"," ",(0,i.kt)("em",{parentName:"p"},"image")," ","[",(0,i.kt)("em",{parentName:"p"},"image")," ...]"),(0,i.kt)("h2",{id:"description"},"DESCRIPTION"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"podman image sign")," will create a local signature for one or more local images that have\nbeen pulled from a registry. The signature will be written to a directory\nderived from the registry configuration files in ",(0,i.kt)("inlineCode",{parentName:"p"},"$HOME/.config/containers/registries.d")," if it exists,\notherwise ",(0,i.kt)("inlineCode",{parentName:"p"},"/etc/containers/registries.d")," (unless overridden at compile-time), see ",(0,i.kt)("strong",{parentName:"p"},"containers-registries.d(5)")," for more information.\nBy default, the signature will be written into ",(0,i.kt)("inlineCode",{parentName:"p"},"/var/lib/containers/sigstore")," for root and ",(0,i.kt)("inlineCode",{parentName:"p"},"$HOME/.local/share/containers/sigstore")," for non-root users"),(0,i.kt)("h2",{id:"options"},"OPTIONS"),(0,i.kt)("h4",{id:"--all--a"},(0,i.kt)("strong",{parentName:"h4"},"--all"),", ",(0,i.kt)("strong",{parentName:"h4"},"-a")),(0,i.kt)("p",null,"Sign all the manifests of the multi-architecture image (default false)."),(0,i.kt)("p",null,"@@option authfile"),(0,i.kt)("p",null,"@@option cert-dir"),(0,i.kt)("h4",{id:"--directory--ddir"},(0,i.kt)("strong",{parentName:"h4"},"--directory"),", ",(0,i.kt)("strong",{parentName:"h4"},"-d"),"=",(0,i.kt)("em",{parentName:"h4"},"dir")),(0,i.kt)("p",null,"Store the signatures in the specified directory. Default: /var/lib/containers/sigstore"),(0,i.kt)("h4",{id:"--help--h"},(0,i.kt)("strong",{parentName:"h4"},"--help"),", ",(0,i.kt)("strong",{parentName:"h4"},"-h")),(0,i.kt)("p",null,"Print usage statement."),(0,i.kt)("h4",{id:"--sign-byidentity"},(0,i.kt)("strong",{parentName:"h4"},"--sign-by"),"=",(0,i.kt)("em",{parentName:"h4"},"identity")),(0,i.kt)("p",null,"Override the default identity of the signature."),(0,i.kt)("h2",{id:"examples"},"EXAMPLES"),(0,i.kt)("p",null,"Sign the busybox image with the identity of ",(0,i.kt)("a",{parentName:"p",href:"mailto:foo@bar.com"},"foo@bar.com")," with a user's keyring and save the signature in /tmp/signatures/."),(0,i.kt)("p",null,"sudo podman image sign --sign-by ",(0,i.kt)("a",{parentName:"p",href:"mailto:foo@bar.com"},"foo@bar.com")," --directory /tmp/signatures docker://privateregistry.example.com/foobar"),(0,i.kt)("p",null,"sudo podman image sign --authfile=/tmp/foobar.json --sign-by ",(0,i.kt)("a",{parentName:"p",href:"mailto:foo@bar.com"},"foo@bar.com")," --directory /tmp/signatures docker://privateregistry.example.com/foobar"),(0,i.kt)("h2",{id:"related-configuration"},"RELATED CONFIGURATION"),(0,i.kt)("p",null,"The write (and read) location for signatures is defined in YAML-based\nconfiguration files in /etc/containers/registries.d/ for root,\nor $HOME/.config/containers/registries.d for non-root users. When signing\nan image, Podman will use those configuration files to determine\nwhere to write the signature based on the name of the originating\nregistry or a default storage value unless overridden with the --directory\noption. For example, consider the following configuration file."),(0,i.kt)("p",null,"docker:\nprivateregistry.example.com:\nsigstore: file:///var/lib/containers/sigstore"),(0,i.kt)("p",null,"When signing an image preceded with the registry name 'privateregistry.example.com',\nthe signature will be written into sub-directories of\n/var/lib/containers/sigstore/privateregistry.example.com. The use of 'sigstore' also means\nthe signature will be 'read' from that same location on a pull-related function."),(0,i.kt)("h2",{id:"see-also"},"SEE ALSO"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("a",{parentName:"strong",href:"https://github.com/containers/image/blob/main/docs/containers-certs.d.5.md"},"containers-certs.d(5)")),", ",(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("a",{parentName:"strong",href:"https://github.com/containers/image/blob/main/docs/containers-registries.d.5.md"},"containers-registries.d(5)"))),(0,i.kt)("h2",{id:"history"},"HISTORY"),(0,i.kt)("p",null,"November 2018, Originally compiled by Qi Wang (qiwan at redhat dot com)"))}g.isMDXComponent=!0}}]);