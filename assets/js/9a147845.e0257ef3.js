"use strict";(self.webpackChunkpodman=self.webpackChunkpodman||[]).push([[90647],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>h});var a=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},m=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},d="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,s=e.parentName,m=i(e,["components","mdxType","originalType","parentName"]),d=p(n),u=o,h=d["".concat(s,".").concat(u)]||d[u]||c[u]||r;return n?a.createElement(h,l(l({ref:t},m),{},{components:n})):a.createElement(h,l({ref:t},m))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,l=new Array(r);l[0]=u;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[d]="string"==typeof e?e:o,l[1]=i;for(var p=2;p<r;p++)l[p]=n[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},59010:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>c,frontMatter:()=>r,metadata:()=>i,toc:()=>p});var a=n(87462),o=(n(67294),n(3905));const r={title:"Easy Development Dependency Management With Podman and Tent",layout:"default",author:"fhsinchy",categories:["blogs"],tags:["tent","hpc","podman","containers","dependency-management","linux"]},l=void 0,i={permalink:"/blogs/2021/02/08/easy-development-dependency-management-with-podman-and-tent",source:"@site/blog/2021-02-08-easy-development-dependency-management-with-podman-and-tent.md",title:"Easy Development Dependency Management With Podman and Tent",description:"podman logo",date:"2021-02-08T00:00:00.000Z",formattedDate:"February 8, 2021",tags:[{label:"tent",permalink:"/blogs/tags/tent"},{label:"hpc",permalink:"/blogs/tags/hpc"},{label:"podman",permalink:"/blogs/tags/podman"},{label:"containers",permalink:"/blogs/tags/containers"},{label:"dependency-management",permalink:"/blogs/tags/dependency-management"},{label:"linux",permalink:"/blogs/tags/linux"}],readingTime:4.705,hasTruncateMarker:!0,authors:[{name:"fhsinchy"}],frontMatter:{title:"Easy Development Dependency Management With Podman and Tent",layout:"default",author:"fhsinchy",categories:["blogs"],tags:["tent","hpc","podman","containers","dependency-management","linux"]},prevItem:{title:"Announcement&#58; Support for Older Distros on Kubic Project/OBS",permalink:"/blogs/2021/03/02/podman-support-for-older-distros"},nextItem:{title:"Easy Development Dependency Management With Podman and Tent",permalink:"/blogs/2021/02/08/new"}},s={authorsImageUrls:[void 0]},p=[{value:"By Farhan Hasin Chowdhury GitHub",id:"by-farhan-hasin-chowdhury-github",level:2},{value:"Dependencies",id:"dependencies",level:2},{value:"Installation",id:"installation",level:2},{value:"Build From Source",id:"build-from-source",level:2},{value:"Usage",id:"usage",level:2},{value:"Start a Service",id:"start-a-service",level:3},{value:"Start Service with Default Configuration",id:"start-service-with-default-configuration",level:3},{value:"Stop a Service",id:"stop-a-service",level:3},{value:"Stop all Services",id:"stop-all-services",level:3},{value:"Running Multiple Versions",id:"running-multiple-versions",level:2},{value:"Container Management",id:"container-management",level:2},{value:"Contribution",id:"contribution",level:2}],m={toc:p},d="wrapper";function c(e){let{components:t,...r}=e;return(0,o.kt)(d,(0,a.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"podman logo",src:n(1382).Z,width:"228",height:"61"})),(0,o.kt)("h1",{id:"easy-development-dependency-management-with-podman-and-tent"},"Easy Development Dependency Management With Podman and Tent"),(0,o.kt)("h2",{id:"by-farhan-hasin-chowdhury-github"},"By Farhan Hasin Chowdhury ",(0,o.kt)("a",{parentName:"h2",href:"https://github.com/fhsinchy"},"GitHub")),(0,o.kt)("p",null,"Installing and managing development dependencies for various project is a chore and one thing that can improve your everyday workflow is the usage of containers."),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/fhsinchy/tent/"},"Tent")," is a CLI tool for running development dependencies such as MySQL, Mongo, ElasticSearch etc inside pre-configured containers using simple one-liners."),(0,o.kt)("p",null,"Running containers can be accessed via their exposed ports and can be paired with any other application on your system."),(0,o.kt)("p",null,"Starting a service such as ",(0,o.kt)("inlineCode",{parentName:"p"},"mysql")," is as simple as executing ",(0,o.kt)("inlineCode",{parentName:"p"},"tent start mysql")," and you'll never have to look back at it."),(0,o.kt)("p",null,"But ",(0,o.kt)("inlineCode",{parentName:"p"},"mysql")," is not the only available service. A list of all the available services can be found on: ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/fhsinchy/tent/blob/master/store/services.go"},"services.go")),(0,o.kt)("p",null,"Tent is heavily inspired from ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/tighten/takeout"},"tighten/takeout")," and is an experimental project. Hence, care should be taken if you're using it in a critical environment."),(0,o.kt)("h2",{id:"dependencies"},"Dependencies"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Linux"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://podman.io/getting-started/installation"},"Podman")," Installed"),(0,o.kt)("li",{parentName:"ul"},"Podman System Service Running")),(0,o.kt)("p",null,"If you have Podman installed, you can start the system service as follows:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"## starts the podman system service\nsystemctl --user start podman.socket\n\n## enables the podman system service, so it doesn't close on every reboot\nsystemctl --user enable podman.socket\n\n## stops the podman system service\nsystemctl --user stop podman.socket\n\n## disables the podman system service, so it doesn't start on every reboot\nsystemctl --user disable podman.socket\n")),(0,o.kt)("p",null,"Tent assumes that you're running the service in non-root mode, hence the ",(0,o.kt)("inlineCode",{parentName:"p"},"--user")," argument is necessary in the above commands."),(0,o.kt)("h2",{id:"installation"},"Installation"),(0,o.kt)("p",null,"Visit the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/fhsinchy/tent/releases/"},"tent release page")," and download the ",(0,o.kt)("inlineCode",{parentName:"p"},"tent")," binary to your computer. Open up your terminal where you've donwloaded the file and execute following commands:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"chmod +x ./tent\n\nsudo mv ./tent /usr/local/bin\n")),(0,o.kt)("p",null,"Now the ",(0,o.kt)("inlineCode",{parentName:"p"},"tent")," command should be available everywhere in your system."),(0,o.kt)("h2",{id:"build-from-source"},"Build From Source"),(0,o.kt)("p",null,"If you're on a Fedora system, the following command should install the necessary development dependencies."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'sudo dnf groupinstall "Development Tools" -y && sudo dnf install golang btrfs-progs-devel gpgme-devel device-mapper-devel -y\n')),(0,o.kt)("p",null,"And on a Ubuntu system, the following command should install the necessary development dependencies."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo apt install build-essential golang-go libbtrfs-dev libgpgme-dev libdevmapper-dev -y\n")),(0,o.kt)("p",null,"If you're on a different system you, may look for equivalent package on the respective package repositories."),(0,o.kt)("p",null,"Now build and install the application as follows:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"git clone https://github.com/fhsinchy/tent.git ~/tent\n\ncd ~/tent\n\nmake install\n")),(0,o.kt)("h2",{id:"usage"},"Usage"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"tent")," binary has following commands:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"tent start <service name>")," - starts a container for the given service"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"tent stop <service name>")," - stops and removes a container for the given service"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"tent list")," - lists all running containers")),(0,o.kt)("p",null,"Most of the services in ",(0,o.kt)("inlineCode",{parentName:"p"},"tent")," utilizes volumes for persisting data, so even if you stop a service, it's data will be persisted in a volume for later usage. These volumes can listed by executing ",(0,o.kt)("inlineCode",{parentName:"p"},"podman volume ls")," and can be managed like any other podman volume."),(0,o.kt)("h3",{id:"start-a-service"},"Start a Service"),(0,o.kt)("p",null,"The generic syntax for the ",(0,o.kt)("inlineCode",{parentName:"p"},"start")," command is as follows:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"tent start <service name>\n\n## starts mysql and prompts you where necessary\ntent start mysql\n\n## starts redis and mongo and prompts you where necessary\ntent start redis mongo\n")),(0,o.kt)("h3",{id:"start-service-with-default-configuration"},"Start Service with Default Configuration"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"--default")," flag for the ",(0,o.kt)("inlineCode",{parentName:"p"},"start")," command can be used to skip all the prompts and start a service with default configuration"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"tent start <service name> --default\n\n## starts mysql with the default configuration\ntent start mysql --default\n\n## starts redis and mongo with default configuration\ntent start redis mongo --default\n")),(0,o.kt)("h3",{id:"stop-a-service"},"Stop a Service"),(0,o.kt)("p",null,"The generic syntax for the ",(0,o.kt)("inlineCode",{parentName:"p"},"stop")," command is as follows:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"tent stop <service name>\n\n## stops mysql and removes the container\n## prompts you if multiple containers are found\ntent stop mysql\n\n## stops all mysql containers and removes them\ntent stop mysql --all\n\n## stops redis and mongo then removes the containers.\n## prompts you if multiple containers are found for any of the given services.\ntent stop redis mongo\n\n## stops all redis and mongo conainers and then removes them\ntent stop redis mongo --all\n")),(0,o.kt)("h3",{id:"stop-all-services"},"Stop all Services"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"--all")," flag for the ",(0,o.kt)("inlineCode",{parentName:"p"},"stop")," command can be used to stop and remove all running tent containers at once"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"tent stop --all\n")),(0,o.kt)("h2",{id:"running-multiple-versions"},"Running Multiple Versions"),(0,o.kt)("p",null,"Given all the services are running inside containers, you can spin up multiple versions of the same service as long as you're keeping the port different."),(0,o.kt)("p",null,"Run ",(0,o.kt)("inlineCode",{parentName:"p"},"tent start mysql")," twice; the first time, use the ",(0,o.kt)("inlineCode",{parentName:"p"},"--default")," flag, and the second time, put ",(0,o.kt)("inlineCode",{parentName:"p"},"5.7")," as tag and ",(0,o.kt)("inlineCode",{parentName:"p"},"3307")," as host port."),(0,o.kt)("p",null,"Now, if you run ",(0,o.kt)("inlineCode",{parentName:"p"},"tent list"),", you'll see both services running at the same time."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"+--------------+----------------+---------------+---------------+\n| CONTAINER              | Image               | PORTS          |\n+--------------+----------------+---------------+---------------+\n| tent-mysql-5.7-3307    | docker.io/mysql:5.7 | 3307->3306/tcp |\n| tent-mysql-latest-3306 | docker.io/mysql:5.7 | 3306->3306/tcp |\n+--------------+----------------+---------------+---------------+\n")),(0,o.kt)("h2",{id:"container-management"},"Container Management"),(0,o.kt)("p",null,"Containers started by ",(0,o.kt)("inlineCode",{parentName:"p"},"tent")," are regular containers with some pre-set configurations. So you can use regular ",(0,o.kt)("inlineCode",{parentName:"p"},"podman")," commands such as ",(0,o.kt)("inlineCode",{parentName:"p"},"ls"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"inspect"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"logs")," etc on them. Although ",(0,o.kt)("inlineCode",{parentName:"p"},"tent")," comes with a ",(0,o.kt)("inlineCode",{parentName:"p"},"list")," command, using the ",(0,o.kt)("inlineCode",{parentName:"p"},"podman")," commands will result in more informative results. The target of ",(0,o.kt)("inlineCode",{parentName:"p"},"tent")," is to provide plug and play containers, not to become a full-fledged ",(0,o.kt)("inlineCode",{parentName:"p"},"podman")," cli."),(0,o.kt)("h2",{id:"contribution"},"Contribution"),(0,o.kt)("p",null,"Tent is an open-source project and contributions are more than welcomed. If you're a Go programmer do take some time to go through the source-code, see if you can improve any part of the program, the maintainer will be more than happy to co-operate. And if you like the project, don't forget to leave a star and share with other fellow developers to show your appreciation."))}c.isMDXComponent=!0},1382:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/podman-ce586c2894883ad9c353492b5e1893a8.svg"}}]);