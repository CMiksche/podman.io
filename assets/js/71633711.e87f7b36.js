"use strict";(self.webpackChunkpodman=self.webpackChunkpodman||[]).push([[4905],{3905:(t,e,n)=>{n.d(e,{Zo:()=>m,kt:()=>k});var a=n(7294);function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function l(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function o(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?l(Object(n),!0).forEach((function(e){r(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function i(t,e){if(null==t)return{};var n,a,r=function(t,e){if(null==t)return{};var n,a,r={},l=Object.keys(t);for(a=0;a<l.length;a++)n=l[a],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(a=0;a<l.length;a++)n=l[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var p=a.createContext({}),s=function(t){var e=a.useContext(p),n=e;return t&&(n="function"==typeof t?t(e):o(o({},e),t)),n},m=function(t){var e=s(t.components);return a.createElement(p.Provider,{value:e},t.children)},d="mdxType",u={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},c=a.forwardRef((function(t,e){var n=t.components,r=t.mdxType,l=t.originalType,p=t.parentName,m=i(t,["components","mdxType","originalType","parentName"]),d=s(n),c=r,k=d["".concat(p,".").concat(c)]||d[c]||u[c]||l;return n?a.createElement(k,o(o({ref:e},m),{},{components:n})):a.createElement(k,o({ref:e},m))}));function k(t,e){var n=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var l=n.length,o=new Array(l);o[0]=c;var i={};for(var p in e)hasOwnProperty.call(e,p)&&(i[p]=e[p]);i.originalType=t,i[d]="string"==typeof t?t:r,o[1]=i;for(var s=2;s<l;s++)o[s]=n[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},5051:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>p,contentTitle:()=>o,default:()=>u,frontMatter:()=>l,metadata:()=>i,toc:()=>s});var a=n(7462),r=(n(7294),n(3905));const l={},o=void 0,i={unversionedId:"podman-start",id:"podman-start",title:"podman-start",description:"% podman-start 1",source:"@site/docs/podman-start.md",sourceDirName:".",slug:"/podman-start",permalink:"/website-new/docs/podman-start",draft:!1,editUrl:"https://github.com/containers/website-new/docs/podman-start.md",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"podman-secret-rm",permalink:"/website-new/docs/podman-secret/podman-secret-rm"},next:{title:"podman-stats",permalink:"/website-new/docs/podman-stats"}},p={},s=[{value:"NAME",id:"name",level:2},{value:"SYNOPSIS",id:"synopsis",level:2},{value:"DESCRIPTION",id:"description",level:2},{value:"OPTIONS",id:"options",level:2},{value:"<strong>--all</strong>",id:"--all",level:4},{value:"<strong>--attach</strong>, <strong>-a</strong>",id:"--attach--a",level:4},{value:"<strong>--filter</strong>, <strong>-f</strong>",id:"--filter--f",level:4},{value:"EXAMPLE",id:"example",level:2},{value:"SEE ALSO",id:"see-also",level:2},{value:"HISTORY",id:"history",level:2}],m={toc:s},d="wrapper";function u(t){let{components:e,...n}=t;return(0,r.kt)(d,(0,a.Z)({},m,n,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"% podman-start 1"),(0,r.kt)("h2",{id:"name"},"NAME"),(0,r.kt)("p",null,"podman","-","start - Start one or more containers"),(0,r.kt)("h2",{id:"synopsis"},"SYNOPSIS"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"podman start")," ","[",(0,r.kt)("em",{parentName:"p"},"options"),"]"," ",(0,r.kt)("em",{parentName:"p"},"container")," ..."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"podman container start")," ","[",(0,r.kt)("em",{parentName:"p"},"options"),"]"," ",(0,r.kt)("em",{parentName:"p"},"container")," ..."),(0,r.kt)("h2",{id:"description"},"DESCRIPTION"),(0,r.kt)("p",null,"Start one or more containers using container IDs or names as input. The ",(0,r.kt)("em",{parentName:"p"},"attach")," and ",(0,r.kt)("em",{parentName:"p"},"interactive"),"\noptions cannot be used to override the ",(0,r.kt)("em",{parentName:"p"},"--tty")," and ",(0,r.kt)("em",{parentName:"p"},"--interactive")," options from when the container\nwas created. Starting an already running container with the ",(0,r.kt)("em",{parentName:"p"},"--attach")," option, Podman simply\nattaches to the container."),(0,r.kt)("h2",{id:"options"},"OPTIONS"),(0,r.kt)("h4",{id:"--all"},(0,r.kt)("strong",{parentName:"h4"},"--all")),(0,r.kt)("p",null,"Start all the containers created by Podman, default is only running containers."),(0,r.kt)("h4",{id:"--attach--a"},(0,r.kt)("strong",{parentName:"h4"},"--attach"),", ",(0,r.kt)("strong",{parentName:"h4"},"-a")),(0,r.kt)("p",null,"Attach container's STDOUT and STDERR. The default is false. This option cannot be used when\nstarting multiple containers."),(0,r.kt)("p",null,"@@option detach-keys"),(0,r.kt)("h4",{id:"--filter--f"},(0,r.kt)("strong",{parentName:"h4"},"--filter"),", ",(0,r.kt)("strong",{parentName:"h4"},"-f")),(0,r.kt)("p",null,"Filter what containers are going to be started from the given arguments.\nMultiple filters can be given with multiple uses of the --filter flag.\nFilters with the same key work inclusive with the only exception being\n",(0,r.kt)("inlineCode",{parentName:"p"},"label")," which is exclusive. Filters with different keys always work exclusive."),(0,r.kt)("p",null,"Valid filters are listed below:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"th"},"Filter")),(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"th"},"Description")))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"id"),(0,r.kt)("td",{parentName:"tr",align:null},"[ID]"," Container's ID (accepts regex)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"name"),(0,r.kt)("td",{parentName:"tr",align:null},"[Name]"," Container's name (accepts regex)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"label"),(0,r.kt)("td",{parentName:"tr",align:null},"[Key]"," or ","[Key=Value]"," Label assigned to a container")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"exited"),(0,r.kt)("td",{parentName:"tr",align:null},"[Int]"," Container's exit code")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"status"),(0,r.kt)("td",{parentName:"tr",align:null},"[Status]"," Container's status: 'created', 'exited', 'paused', 'running', 'unknown'")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"ancestor"),(0,r.kt)("td",{parentName:"tr",align:null},"[ImageName]"," Image or descendant used to create container")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"before"),(0,r.kt)("td",{parentName:"tr",align:null},"[ID]"," or ","[Name]"," Containers created before this container")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"since"),(0,r.kt)("td",{parentName:"tr",align:null},"[ID]"," or ","[Name]"," Containers created since this container")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"volume"),(0,r.kt)("td",{parentName:"tr",align:null},"[VolumeName]"," or ","[MountpointDestination]"," Volume mounted in container")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"health"),(0,r.kt)("td",{parentName:"tr",align:null},"[Status]"," healthy or unhealthy")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"pod"),(0,r.kt)("td",{parentName:"tr",align:null},"[Pod]"," name or full or partial ID of pod")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"network"),(0,r.kt)("td",{parentName:"tr",align:null},"[Network]"," name or full ID of network")))),(0,r.kt)("p",null,"@@option interactive"),(0,r.kt)("p",null,"@@option latest"),(0,r.kt)("p",null,"@@option sig-proxy"),(0,r.kt)("p",null,"The default is ",(0,r.kt)("strong",{parentName:"p"},"true")," when attaching, ",(0,r.kt)("strong",{parentName:"p"},"false")," otherwise."),(0,r.kt)("h2",{id:"example"},"EXAMPLE"),(0,r.kt)("p",null,"podman start mywebserver"),(0,r.kt)("p",null,"podman start 860a4b231279 5421ab43b45"),(0,r.kt)("p",null,"podman start --interactive --attach 860a4b231279"),(0,r.kt)("p",null,"podman start -i -l"),(0,r.kt)("h2",{id:"see-also"},"SEE ALSO"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"/website-new/docs/podman"},"podman(1)"))),(0,r.kt)("h2",{id:"history"},"HISTORY"),(0,r.kt)("p",null,"November 2018, Originally compiled by Brent Baude ",(0,r.kt)("a",{parentName:"p",href:"mailto:bbaude@redhat.com"},"bbaude@redhat.com")))}u.isMDXComponent=!0}}]);