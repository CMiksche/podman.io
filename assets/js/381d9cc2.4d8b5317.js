"use strict";(self.webpackChunkpodman=self.webpackChunkpodman||[]).push([[84606],{3905:(e,t,r)=>{r.d(t,{Zo:()=>s,kt:()=>b});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var p=n.createContext({}),c=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},s=function(e){var t=c(e.components);return n.createElement(p.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=c(r),d=o,b=u["".concat(p,".").concat(d)]||u[d]||m[d]||a;return r?n.createElement(b,i(i({ref:t},s),{},{components:r})):n.createElement(b,i({ref:t},s))}));function b(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=d;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[u]="string"==typeof e?e:o,i[1]=l;for(var c=2;c<a;c++)i[c]=r[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},18018:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>m,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var n=r(87462),o=(r(67294),r(3905));const a={title:"New API coming for Podman",layout:"default",author:"baude",categories:["blogs"],tags:["community","open source","podman","hpc","api","REST","API"]},i="New API coming for Podman",l={permalink:"/blog/2020/01/17/podman-new-api",source:"@site/blog/2020-01-17-podman-new-api.md",title:"New API coming for Podman",description:"podman logo",date:"2020-01-17T00:00:00.000Z",formattedDate:"January 17, 2020",tags:[{label:"community",permalink:"/blog/tags/community"},{label:"open source",permalink:"/blog/tags/open-source"},{label:"podman",permalink:"/blog/tags/podman"},{label:"hpc",permalink:"/blog/tags/hpc"},{label:"api",permalink:"/blog/tags/api"},{label:"REST",permalink:"/blog/tags/rest"}],readingTime:2.38,hasTruncateMarker:!0,authors:[{name:"baude"}],frontMatter:{title:"New API coming for Podman",layout:"default",author:"baude",categories:["blogs"],tags:["community","open source","podman","hpc","api","REST","API"]},prevItem:{title:"New API coming for Podman",permalink:"/blog/2020/01/17/new"},nextItem:{title:"Bioinformatics with rootless Podman",permalink:"/blog/2020/01/15/bioinformatics-with-rootless-podman"}},p={authorsImageUrls:[void 0]},c=[{value:"By Brent Baude GitHub",id:"by-brent-baude-github",level:2}],s={toc:c},u="wrapper";function m(e){let{components:t,...a}=e;return(0,o.kt)(u,(0,n.Z)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"podman logo",src:r(1382).Z,width:"228",height:"61"})),(0,o.kt)("h2",{id:"by-brent-baude-github"},"By Brent Baude ",(0,o.kt)("a",{parentName:"h2",href:"https://github.com/baude"},"GitHub")),(0,o.kt)("p",null,"If you follow the traffic on IRC (#podman on libera.chat) or GitHub from the developers of ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/containers/podman/"},"libpod"),", you might have seen us referencing a new API. We often referred to it as ",(0,o.kt)("em",{parentName:"p"},"apiv2")," and for about a month, there has been an 'apiv2' branch for libpod on GitHub. This week, we have begun to merge that branch but have yet to \u201cwire it up.\u201d"),(0,o.kt)("p",null,"First and foremost, the Golang libpod API remains largely unchanged. What is changing is the API we expose for automation and remote usage. Our previous API was based on the ",(0,o.kt)("a",{parentName:"p",href:"https://varlink.org/"},"varlink")," protocol. But we heard from users that varlink was a hurdle for libpod adoption especially for those who were using the Docker API and its bindings. They simply could not or did not want to rewrite their custom applications for libpod\u2019s new, varlink-based API."))}m.isMDXComponent=!0},1382:(e,t,r)=>{r.d(t,{Z:()=>n});const n=r.p+"assets/images/podman-ce586c2894883ad9c353492b5e1893a8.svg"}}]);