"use strict";(self.webpackChunkpodman=self.webpackChunkpodman||[]).push([[9042],{3905:(e,n,t)=>{t.d(n,{Zo:()=>s,kt:()=>u});var a=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function d(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function m(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var p=a.createContext({}),i=function(e){var n=a.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):d(d({},n),e)),t},s=function(e){var n=i(e.components);return a.createElement(p.Provider,{value:n},e.children)},l="mdxType",c={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},k=a.forwardRef((function(e,n){var t=e.components,o=e.mdxType,r=e.originalType,p=e.parentName,s=m(e,["components","mdxType","originalType","parentName"]),l=i(t),k=o,u=l["".concat(p,".").concat(k)]||l[k]||c[k]||r;return t?a.createElement(u,d(d({ref:n},s),{},{components:t})):a.createElement(u,d({ref:n},s))}));function u(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var r=t.length,d=new Array(r);d[0]=k;var m={};for(var p in n)hasOwnProperty.call(n,p)&&(m[p]=n[p]);m.originalType=e,m[l]="string"==typeof e?e:o,d[1]=m;for(var i=2;i<r;i++)d[i]=t[i];return a.createElement.apply(null,d)}return a.createElement.apply(null,t)}k.displayName="MDXCreateElement"},5468:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>d,default:()=>c,frontMatter:()=>r,metadata:()=>m,toc:()=>i});var a=t(7462),o=(t(7294),t(3905));const r={},d=void 0,m={unversionedId:"commands/podman-network/podman-network",id:"commands/podman-network/podman-network",title:"podman-network",description:"% podman-network 1",source:"@site/docs/commands/podman-network/podman-network.md",sourceDirName:"commands/podman-network",slug:"/commands/podman-network/",permalink:"/docs/commands/podman-network/",draft:!1,editUrl:"https://github.com/containers/website-new/docs/commands/podman-network/podman-network.md",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"podman-mount",permalink:"/docs/commands/podman-mount"},next:{title:"podman-network-connect",permalink:"/docs/commands/podman-network/podman-network-connect"}},p={},i=[{value:"NAME",id:"name",level:2},{value:"SYNOPSIS",id:"synopsis",level:2},{value:"DESCRIPTION",id:"description",level:2},{value:"COMMANDS",id:"commands",level:2},{value:"SUBNET NOTES",id:"subnet-notes",level:2},{value:"Podman network",id:"podman-network",level:3},{value:"Slirp4netns",id:"slirp4netns",level:3},{value:"Podman network create",id:"podman-network-create",level:3},{value:"SEE ALSO",id:"see-also",level:2}],s={toc:i},l="wrapper";function c(e){let{components:n,...t}=e;return(0,o.kt)(l,(0,a.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"% podman-network 1"),(0,o.kt)("h2",{id:"name"},"NAME"),(0,o.kt)("p",null,"podman","-","network - Manage Podman networks"),(0,o.kt)("h2",{id:"synopsis"},"SYNOPSIS"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"podman network")," ",(0,o.kt)("em",{parentName:"p"},"subcommand")),(0,o.kt)("h2",{id:"description"},"DESCRIPTION"),(0,o.kt)("p",null,"The network command manages networks for Podman."),(0,o.kt)("p",null,"Podman supports two network backends ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/containers/netavark"},"Netavark"),"\nand ",(0,o.kt)("a",{parentName:"p",href:"https://www.cni.dev/"},"CNI"),". Netavark is the default network backend and was added in Podman v4.0. CNI will be\ndeprecated in the future in preference of Netavark. To configure\nthe network backend use the ",(0,o.kt)("inlineCode",{parentName:"p"},"network_backend"),"key under the ",(0,o.kt)("inlineCode",{parentName:"p"},"[Network]")," in\n",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("a",{parentName:"strong",href:"https://github.com/containers/common/blob/main/docs/containers.conf.5.md"},"containers.conf(5)")),".\nNew systems should use netavark by default, to check what backed is used run\n",(0,o.kt)("inlineCode",{parentName:"p"},"podman info --format {{.Host.NetworkBackend}}"),"."),(0,o.kt)("p",null,"All network commands work for both backends but CNI and Netavark use different config files\nso networks have to be created again after a backend change."),(0,o.kt)("h2",{id:"commands"},"COMMANDS"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Command"),(0,o.kt)("th",{parentName:"tr",align:null},"Man Page"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"connect"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/commands/podman-network/podman-network-connect"},"podman-network-connect(1)")),(0,o.kt)("td",{parentName:"tr",align:null},"Connect a container to a network")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"create"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/commands/podman-network/podman-network-create"},"podman-network-create(1)")),(0,o.kt)("td",{parentName:"tr",align:null},"Create a Podman network")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"disconnect"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/commands/podman-network/podman-network-disconnect"},"podman-network-disconnect(1)")),(0,o.kt)("td",{parentName:"tr",align:null},"Disconnect a container from a network")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"exists"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/commands/podman-network/podman-network-exists"},"podman-network-exists(1)")),(0,o.kt)("td",{parentName:"tr",align:null},"Check if the given network exists")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"inspect"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/commands/podman-network/podman-network-inspect"},"podman-network-inspect(1)")),(0,o.kt)("td",{parentName:"tr",align:null},"Displays the network configuration for one or more networks")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"ls"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/commands/podman-network/podman-network-ls"},"podman-network-ls(1)")),(0,o.kt)("td",{parentName:"tr",align:null},"Display a summary of networks")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"prune"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/commands/podman-network/podman-network-prune"},"podman-network-prune(1)")),(0,o.kt)("td",{parentName:"tr",align:null},"Remove all unused networks")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"reload"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/commands/podman-network/podman-network-reload"},"podman-network-reload(1)")),(0,o.kt)("td",{parentName:"tr",align:null},"Reload network configuration for containers")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"rm"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/commands/podman-network/podman-network-rm"},"podman-network-rm(1)")),(0,o.kt)("td",{parentName:"tr",align:null},"Remove one or more networks")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"update"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/commands/podman-network/podman-network-update"},"podman-network-update(1)")),(0,o.kt)("td",{parentName:"tr",align:null},"Update an existing Podman network")))),(0,o.kt)("h2",{id:"subnet-notes"},"SUBNET NOTES"),(0,o.kt)("p",null,"Podman requires specific default IPs and, thus, network subnets. The default values used by Podman can be modified in the ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("a",{parentName:"strong",href:"https://github.com/containers/common/blob/main/docs/containers.conf.5.md"},"containers.conf(5)"))," file."),(0,o.kt)("h3",{id:"podman-network"},"Podman network"),(0,o.kt)("p",null,"The default bridge network (called ",(0,o.kt)("inlineCode",{parentName:"p"},"podman"),") uses 10.88.0.0/16 as a subnet. When Podman runs as root, the ",(0,o.kt)("inlineCode",{parentName:"p"},"podman")," network is used as default. It is the same as adding the option ",(0,o.kt)("inlineCode",{parentName:"p"},"--network bridge")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"--network podman"),". This subnet can be changed in ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("a",{parentName:"strong",href:"https://github.com/containers/common/blob/main/docs/containers.conf.5.md"},"containers.conf(5)"))," under the ","[network]"," section. Set the ",(0,o.kt)("inlineCode",{parentName:"p"},"default_subnet")," to any subnet that is free in the environment. The name of the default network can also be changed from ",(0,o.kt)("inlineCode",{parentName:"p"},"podman")," to another name using the default network key. Note that this should only be done when no containers are running."),(0,o.kt)("h3",{id:"slirp4netns"},"Slirp4netns"),(0,o.kt)("p",null,"When Podman is run as rootless, the internet connectivity is provided with slirp4netns by default. Slirp4nents uses 10.0.2.0/24 for its default network. This can also be changed in ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("a",{parentName:"strong",href:"https://github.com/containers/common/blob/main/docs/containers.conf.5.md"},"containers.conf(5)"))," but under the ",(0,o.kt)("inlineCode",{parentName:"p"},"[engine]")," section. Use the ",(0,o.kt)("inlineCode",{parentName:"p"},"network_cmd_options")," key and add ",(0,o.kt)("inlineCode",{parentName:"p"},'["cidr=X.X.X.X/24"]')," as a value. Note that slirp4netns needs a network prefix size between 1 and 25. This option accepts an array, so more options can be added in a comma-separated string as described on the ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("a",{parentName:"strong",href:"/docs/commands/podman-network/podman-network-create"},"podman-network-create(1)"))," man page. To change the CIDR for just one container, specify it on the cli using the ",(0,o.kt)("inlineCode",{parentName:"p"},"--network")," option like this: ",(0,o.kt)("inlineCode",{parentName:"p"},"--network slirp4netns:cidr=19268.0/24"),"."),(0,o.kt)("p",null,"When using the default network as rootless, i.e. --network podman/bridge, then it also uses the same subnet as described above in addition to the slirp4netns subnet."),(0,o.kt)("h3",{id:"podman-network-create"},"Podman network create"),(0,o.kt)("p",null,"When a new network is created with a ",(0,o.kt)("inlineCode",{parentName:"p"},"podman network create")," command, and no subnet is given with the --subnet option, Podman will start picking a free subnet from 10.89.0.0/24 to 10.255.255.0/24. Use the ",(0,o.kt)("inlineCode",{parentName:"p"},"default_subnet_pools")," option under the ",(0,o.kt)("inlineCode",{parentName:"p"},"[network]")," section in ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("a",{parentName:"strong",href:"https://github.com/containers/common/blob/main/docs/containers.conf.5.md"},"containers.conf(5)"))," to change the range and/or size that is assigned by default."),(0,o.kt)("h2",{id:"see-also"},"SEE ALSO"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("a",{parentName:"strong",href:"/docs/podman"},"podman(1)")),", ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("a",{parentName:"strong",href:"/docs/commands/podman-network/podman-network-create"},"podman-network-create(1)")),", ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("a",{parentName:"strong",href:"https://github.com/containers/common/blob/main/docs/containers.conf.5.md"},"containers.conf(5)"))))}c.isMDXComponent=!0}}]);