"use strict";(self.webpackChunkpodman=self.webpackChunkpodman||[]).push([[3640],{3905:(e,n,t)=>{t.d(n,{Zo:()=>m,kt:()=>h});var a=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=a.createContext({}),d=function(e){var n=a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},m=function(e){var n=d(e.components);return a.createElement(l.Provider,{value:n},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},c=a.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,m=s(e,["components","mdxType","originalType","parentName"]),p=d(t),c=o,h=p["".concat(l,".").concat(c)]||p[c]||u[c]||i;return t?a.createElement(h,r(r({ref:n},m),{},{components:t})):a.createElement(h,r({ref:n},m))}));function h(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,r=new Array(i);r[0]=c;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s[p]="string"==typeof e?e:o,r[1]=s;for(var d=2;d<i;d++)r[d]=t[d];return a.createElement.apply(null,r)}return a.createElement.apply(null,t)}c.displayName="MDXCreateElement"},8450:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>d});var a=t(7462),o=(t(7294),t(3905));const i={},r=void 0,s={unversionedId:"tutorials/podman-for-windows",id:"tutorials/podman-for-windows",title:"podman-for-windows",description:'While "containers are Linux," Podman also runs on Mac and Windows, where it',source:"@site/docs/tutorials/podman-for-windows.md",sourceDirName:"tutorials",slug:"/tutorials/podman-for-windows",permalink:"/website-new/docs/tutorials/podman-for-windows",draft:!1,editUrl:"https://github.com/containers/website-new/docs/tutorials/podman-for-windows.md",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"podman-derivative-api",permalink:"/website-new/docs/tutorials/podman-derivative-api"},next:{title:"podman-install-certificate-authority",permalink:"/website-new/docs/tutorials/podman-install-certificate-authority"}},l={},d=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Installing Podman",id:"installing-podman",level:2},{value:"Automatic WSL Installation",id:"automatic-wsl-installation",level:2},{value:"Machine Init Process",id:"machine-init-process",level:2},{value:"Starting Machine",id:"starting-machine",level:2},{value:"First Podman Command",id:"first-podman-command",level:2},{value:"Port Forwarding",id:"port-forwarding",level:2},{value:"Using API Forwarding",id:"using-api-forwarding",level:2},{value:"Rootful &amp; Rootless",id:"rootful--rootless",level:2},{value:"Volume Mounting",id:"volume-mounting",level:2},{value:"Listing Podman Machine(s)",id:"listing-podman-machines",level:2},{value:"Accessing the Podman Linux Environment",id:"accessing-the-podman-linux-environment",level:2},{value:"Using SSH",id:"using-ssh",level:3},{value:"Using the WSL Command",id:"using-the-wsl-command",level:3},{value:"Using Windows Terminal Integration",id:"using-windows-terminal-integration",level:3},{value:"Stopping a Podman Machine",id:"stopping-a-podman-machine",level:2},{value:"Removing a Podman Machine",id:"removing-a-podman-machine",level:2},{value:"Troubleshooting",id:"troubleshooting",level:2}],m={toc:d},p="wrapper";function u(e){let{components:n,...i}=e;return(0,o.kt)(p,(0,a.Z)({},m,i,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://raw.githubusercontent.com/containers/common/main/logos/podman-logo-full-vert.png",alt:null})),(0,o.kt)("h1",{id:"podman-for-windows"},"Podman for Windows"),(0,o.kt)("p",null,'While "containers are Linux," Podman also runs on Mac and Windows, where it\nprovides a native CLI and embeds a guest Linux system to launch your\ncontainers. This guest is referred to as a Podman machine and is managed with\nthe ',(0,o.kt)("inlineCode",{parentName:"p"},"podman machine")," command. On Windows, each Podman machine is backed by a\nvirtualized Windows Subsystem for Linux (WSLv2) distribution. The podman command\ncan be run directly from your Windows PowerShell (or CMD) prompt, where it\nremotely communicates with the podman service running in the WSL environment.\nAlternatively, you can access Podman directly from the WSL instance if you\nprefer a Linux prompt and Linux tooling. In addition to command-line access,\nPodman also listens for Docker API clients, supporting direct usage of\nDocker-based tools and programmatic access from your language of choice."),(0,o.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,o.kt)("p",null,"Since Podman uses WSL, you need a recent release of Windows 10 or Windows 11.\nOn x64, WSL requires build 18362 or later, and 19041 or later is required for\narm64 systems. Internally, WSL uses virtualization, so your system must\nsupport and have hardware virtualization enabled. If you are running Windows\non a VM, you must have a VM that supports nested virtualization."),(0,o.kt)("p",null,'It is also recommended to install the modern "Windows Terminal," which\nprovides a superior user experience to the standard PowerShell and CMD\nprompts, as well as a WSL prompt, should you want it.'),(0,o.kt)("p",null,"You can install it by searching the Windows Store or by running the following\n",(0,o.kt)("inlineCode",{parentName:"p"},"winget")," command:"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"winget install Microsoft.WindowsTerminal")),(0,o.kt)("h2",{id:"installing-podman"},"Installing Podman"),(0,o.kt)("p",null,"Installing the Windows Podman client begins by downloading the Podman Windows\ninstaller. The Windows installer is built with each Podman release and can be\ndownloaded from the official\n",(0,o.kt)("a",{parentName:"p",href:"https://github.com/containers/podman/releases"},"Github release page"),".\nBe sure to download a 4.1 or later release for the capabilities discussed\nin this guide."),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Installing Podman 4.1.0",src:t(5124).Z,width:"2737",height:"1721"})),(0,o.kt)("p",null,"Once downloaded, simply run the EXE file, and relaunch a new terminal. After\nthis point, podman.exe will be present on your PATH, and you will be able to run\nthe ",(0,o.kt)("inlineCode",{parentName:"p"},"podman machine init")," command to create your first machine."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"PS C:\\Users\\User> podman machine init")),(0,o.kt)("h2",{id:"automatic-wsl-installation"},"Automatic WSL Installation"),(0,o.kt)("p",null,"If WSL has not been installed on your system, the first machine init command\nwill prompt a dialog to begin an automated install. If accepted, this process\nwill install the necessary Windows components, restart the system, and after\nlogin, relaunch the machine creation process in a terminal window. Be sure to\nwait a minute or two for the relaunch to occur, as Windows has a delay before\nexecuting startup items. Alternatively, you can decline automatic installation\nand install WSL manually. However, this will require additional download and\nsetup time."),(0,o.kt)("h2",{id:"machine-init-process"},"Machine Init Process"),(0,o.kt)("p",null,"After WSL is installed, the init command will install a minimal installation\nof Fedora, customizing it to run podman."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"PS C:\\Users\\User> podman machine init\nExtracting compressed file\nImporting operating system into WSL (this may take 5+ minutes on a new WSL install)...\nInstalling packages (this will take a while)...\nComplete!\nConfiguring system...\nGenerating public/private ed25519 key pair.\nYour identification has been saved in podman-machine-default\nYour public key has been saved in podman-machine-default.pub\nThe key fingerprint is:\nSHA256:RGTGg2Q/LX7ijN+mzu8+BzcS3cEWP6Hir6pYllJtceA root@WINPC\nMachine init complete\nTo start your machine run:\n\n        podman machine start\n")),(0,o.kt)("h2",{id:"starting-machine"},"Starting Machine"),(0,o.kt)("p",null,"After the machine init process completes, it can then be started and stopped\nas desired:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'PS C:\\Users\\User> podman machine start\n\nStarting machine "podman-machine-default"\n\nThis machine is currently configured in rootless mode. If your containers\nrequire root permissions (e.g. ports < 1024), or if you run into compatibility\nissues with non-podman clients, you can switch using the following command:\n\n        podman machine set --rootful\n\nAPI forwarding listening on: npipe:////./pipe/docker_engine\n\nDocker API clients default to this address. You do not need to set DOCKER_HOST.\nMachine "podman-machine-default" started successfully\n')),(0,o.kt)("h2",{id:"first-podman-command"},"First Podman Command"),(0,o.kt)("p",null,"From this point on, podman commands operate similarly to how they would on\nLinux."),(0,o.kt)("p",null,"For a quick working example with a small image, you can run the Linux date\ncommand on PowerShell."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"PS C:\\Users\\User> podman run ubi8-micro date\nThu May 5 21:56:42 UTC 2022\n")),(0,o.kt)("h2",{id:"port-forwarding"},"Port Forwarding"),(0,o.kt)("p",null,"Port forwarding also works as expected; ports will be bound against localhost\n(127.0.0.1). Note: When running as rootless (the default), you must use a port\ngreater than 1023. See the Rootful and Rootless section for more details."),(0,o.kt)("p",null,"To launch httpd, you can run:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"PS C:\\Users\\User> podman run --rm -d -p 8080:80 --name httpd docker.io/library/httpd\nf708641300564a6caf90c145e64cd852e76f77f6a41699478bb83a162dceada9\n")),(0,o.kt)("p",null,"A curl command against localhost on the PowerShell prompt will return a\nsuccessful HTTP response:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"PS C:\\Users\\User> curl http://localhost:8080/ -UseBasicParsing\n\nStatusCode : 200\nStatusDescription : OK\nContent : <html><body><h1>It works!</h1></body></html>\n")),(0,o.kt)("p",null,"As with Linux, to stop, run:"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"podman stop httpd")),(0,o.kt)("h2",{id:"using-api-forwarding"},"Using API Forwarding"),(0,o.kt)("p",null,"API forwarding allows Docker API tools and clients to use podman as if it was\nDocker. Provided there is no other service listening on the Docker API pipe;\nno special settings will be required."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'PS C:\\Users\\User> .\\docker.exe run -it fedora echo "Hello Podman!"\nHello Podman!\n')),(0,o.kt)("p",null,"Otherwise, after starting the machine, you will be notified of an environment\nvariable you can set for tools to point to podman. Alternatively, you can shut\ndown both the conflicting service and podman, then finally run ",(0,o.kt)("inlineCode",{parentName:"p"},"podman machine\nstart")," to restart, which should grab the Docker API address."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Another process was listening on the default Docker API pipe address.\nYou can still connect Docker API clients by setting DOCKER HOST using the\nfollowing PowerShell command in your terminal session:\n\n        $Env:DOCKER_HOST = 'npipe:////./pipe/podman-machine-default'\n\nOr in a classic CMD prompt:\n\n        set DOCKER_HOST=npipe:////./pipe/podman-machine-default\n\nAlternatively, terminate the other process and restart podman machine.\nMachine \"podman-machine-default\" started successfully\n\nPS C:\\Users\\User> $Env:DOCKER_HOST = 'npipe:////./pipe/podman-machine-default'\nPS C:\\Users\\User>.\\docker.exe version --format '{{(index .Server.Components 0).Name}}'\nPodman Engine\n")),(0,o.kt)("h2",{id:"rootful--rootless"},"Rootful & Rootless"),(0,o.kt)("p",null,"On the embedded WSL Linux distro, podman can either be run under the root user\n(rootful) or a non-privileged user (rootless). For behavioral consistency with\nPodman on Linux, rootless is the default. Note: Rootful and Rootless\ncontainers are distinct and isolated from one another. Podman commands against\none (e.g., podman ps) will not represent results/state for the other."),(0,o.kt)("p",null,"While most containers run fine in a rootless setting, you may find a case\nwhere the container only functions with root privileges. If this is the case,\nyou can switch the machine to rootful by stopping it and using the set\ncommand:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"podman machine stop\npodman machine set --rootful\n")),(0,o.kt)("p",null,"To restore rootless execution, set rootful to false:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Podman machine stop\nPodman machine set --rootful=false\n")),(0,o.kt)("p",null,"Another case in which you may wish to use rootful execution is binding a port\nless than 1024. However, future versions of podman will likely drop this to a\nlower number to improve compatibility with defaults on system port services (such\nas MySQL)"),(0,o.kt)("h2",{id:"volume-mounting"},"Volume Mounting"),(0,o.kt)("p",null,"New in Podman v4.1 is the ability to perform volume mounts from Windows paths into a\nLinux container. This supports several notation schemes, including:"),(0,o.kt)("p",null,"Windows Style Paths:"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"podman run --rm -v c:\\Users\\User\\myfolder:/myfolder ubi8-micro ls /myfolder")),(0,o.kt)("p",null,"Unixy Windows Paths:"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"podman run --rm -v /c/Users/User/myfolder:/myfolder ubi8-micro ls /myfolder")),(0,o.kt)("p",null,"Linux paths local to the WSL filesystem:"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"podman run --rm -v /var/myfolder:/myfolder ubi-micro ls /myfolder")),(0,o.kt)("p",null,"All of the above conventions work, whether running on a Windows prompt or the\nWSL Linux shell. Although when using Windows paths on Linux, appropriately quote\nor escape the Windows path portion of the argument."),(0,o.kt)("h2",{id:"listing-podman-machines"},"Listing Podman Machine(s)"),(0,o.kt)("p",null,"To list the available podman machine instances and their current resource\nusage, use the ",(0,o.kt)("inlineCode",{parentName:"p"},"podman machine ls")," command:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"PS C:\\Users\\User> podman machine ls\n\n\nNAME                    VM TYPE     CREATED      LAST UP            CPUS        MEMORY      DISK SIZE\npodman-machine-default  wsl         2 hours ago  Currently running  4           331.1MB     768MB\n")),(0,o.kt)("p",null,"Since WSL shares the same virtual machine and Linux kernel across multiple\ndistributions, the CPU and Memory values represent the total resources shared\nacross running systems. The opposite applies to the Disk value. It is\nindependent and represents the amount of storage for each individual\ndistribution."),(0,o.kt)("h2",{id:"accessing-the-podman-linux-environment"},"Accessing the Podman Linux Environment"),(0,o.kt)("p",null,"While using the podman.exe client on the Windows environment provides a\nseamless native experience supporting the usage of local desktop tools and\nAPIs, there are a few scenarios in which you may wish to access the Linux\nenvironment:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Updating to the latest stable packages on the embedded Fedora instance"),(0,o.kt)("li",{parentName:"ul"},"Using Linux development tools directly"),(0,o.kt)("li",{parentName:"ul"},"Using a workflow that relies on EXT4 filesystem performance or behavior\nsemantics")),(0,o.kt)("p",null,"There are three mechanisms to access the embedded WSL distribution:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"SSH using ",(0,o.kt)("inlineCode",{parentName:"li"},"podman machine ssh")),(0,o.kt)("li",{parentName:"ol"},"WSL command on the Windows PowerShell prompt"),(0,o.kt)("li",{parentName:"ol"},"Windows Terminal Integration")),(0,o.kt)("h3",{id:"using-ssh"},"Using SSH"),(0,o.kt)("p",null,"SSH access provides a similar experience as Podman on Mac. It immediately\ndrops you into the appropriate user based on your machine's rootful/rootless\nconfiguration (root in the former, 'user' in the latter). The --username\noption can be used to override with a specific user."),(0,o.kt)("p",null,"An example task using SSH is updating your Linux environment to pull down the\nlatest OS bugfixes:"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"podman machine ssh sudo dnf upgrade -y")),(0,o.kt)("h3",{id:"using-the-wsl-command"},"Using the WSL Command"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"wsl")," command provides direct access to the Linux system but enters the\nshell as root first. This is due to design limitations of WSL, where running\nsystemd (Linux's system services) requires the usage of a privileged process\nnamespace."),(0,o.kt)("p",null,"Unless you have no other distributions of WSL installed, it's recommended to\nuse the ",(0,o.kt)("inlineCode",{parentName:"p"},"-d")," option with the name of your podman machine (podman-machine-default\nis the default)"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"PS C:\\Users\\User> wsl -d podman-machine-default\n")),(0,o.kt)("p",null,"You will be automatically entered into a nested process namespace where\nsystemd is running. If you need to access the parent namespace, hit ",(0,o.kt)("inlineCode",{parentName:"p"},"ctrl-d"),"\nor type exit. This also means to log out, you need to exit twice."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"[root@WINPC /]# podman --version\npodman version 4.1.0\n")),(0,o.kt)("p",null,"To access commands as the non-privileged user (rootless podman), you must\nfirst type ",(0,o.kt)("inlineCode",{parentName:"p"},"su user"),". Alternatively, you can prefix the ",(0,o.kt)("inlineCode",{parentName:"p"},"wsl")," command to use the\nspecial ",(0,o.kt)("inlineCode",{parentName:"p"},"enterns"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"wsl -d podman-machine-default enterns su user\n[user@WINPC /]$ id\nuid=1000(user) gid=1000(user) groups=1000(user),10(wheel)\n")),(0,o.kt)("p",null,"Likewise, running commands as root without entering a prompt should also be\nprefixed with ",(0,o.kt)("inlineCode",{parentName:"p"},"enterns"),"."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"wsl -d podman-machine-default enterns systemctl status")),(0,o.kt)("p",null,"Accessing the WSL instance as a specific user using ",(0,o.kt)("inlineCode",{parentName:"p"},"wsl -u")," or using inline\ncommands without ",(0,o.kt)("inlineCode",{parentName:"p"},"enterns")," is not recommended since commands will execute\nagainst the incorrect namespace."),(0,o.kt)("h3",{id:"using-windows-terminal-integration"},"Using Windows Terminal Integration"),(0,o.kt)("p",null,"Entering WSL as root is a 2-click operation. Simply click the drop-down tag,\nand pick 'podman-machine-default,' where you will be entered directly as root."),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Using WSL in Windows Terminal",src:t(4404).Z,width:"1825",height:"717"})),(0,o.kt)("p",null,"As before, to switch to a non-privileged user for rootless podman commands,\ntype ",(0,o.kt)("inlineCode",{parentName:"p"},"su user"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"[root@WINPC /]# su user\n[user@WINPC /]$ podman info --format '{{.Store.RunRoot}}'\n/run/user/1000/containers\n")),(0,o.kt)("h2",{id:"stopping-a-podman-machine"},"Stopping a Podman Machine"),(0,o.kt)("p",null,"To stop a running podman machine, use the ",(0,o.kt)("inlineCode",{parentName:"p"},"podman machine stop")," command:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'PS C:\\Users\\User> podman machine stop\nMachine "podman-machine-default" stopped successfully\n')),(0,o.kt)("h2",{id:"removing-a-podman-machine"},"Removing a Podman Machine"),(0,o.kt)("p",null,"To remove a machine, use the ",(0,o.kt)("inlineCode",{parentName:"p"},"podman machine rm")," command:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"PS C:\\Users\\User> podman machine rm\n\nThe following files will be deleted:\n\nC:\\Users\\User\\.ssh\\podman-machine-default\nC:\\Users\\User\\.ssh\\podman-machine-default.pub\nC:\\Users\\User\\.local\\share\\containers\\podman\\machine\\wsl\\podman-machine-default_fedora-35-x86_64.tar\nC:\\Users\\User\\.config\\containers\\podman\\machine\\wsl\\podman-machine-default.json\nC:\\Users\\User\\.local\\share\\containers\\podman\\machine\\wsl\\wsldist\\podman-machine-default\n\n\nAre you sure you want to continue? [y/N] y\n")),(0,o.kt)("h2",{id:"troubleshooting"},"Troubleshooting"),(0,o.kt)("p",null,"Recovering from a failed auto-installation of WSL"),(0,o.kt)("p",null,"If auto-install fails and retrying is unsuccessful, you can attempt to reset\nyour WSL system state and perform a manual WSL installation using the ",(0,o.kt)("inlineCode",{parentName:"p"},"wsl\n--install command"),". To do so, perform the following steps:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Launch PowerShell as administrator",(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre"},"Start-Process powershell -Verb RunAs\n"))),(0,o.kt)("li",{parentName:"ol"},"Disable WSL Features",(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre"},"dism.exe /online /disable-feature /featurename:Microsoft-Windows-Subsystem-Linux /norestart\ndism.exe /online /enable-feature /featurename:VirtualMachinePlatform /norestart\n"))),(0,o.kt)("li",{parentName:"ol"},"Reboot"),(0,o.kt)("li",{parentName:"ol"},"Run manual WSL install",(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre"},"wsl --install\n"))),(0,o.kt)("li",{parentName:"ol"},"Continue with podman machine init")),(0,o.kt)("h1",{id:"install-certificate-authority"},"Install Certificate Authority"),(0,o.kt)("p",null,"Instructions for installing a CA certificate can be found ",(0,o.kt)("a",{parentName:"p",href:"/website-new/docs/tutorials/podman-install-certificate-authority"},"here"),"."))}u.isMDXComponent=!0},5124:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/podman-win-install-9b848cd0e3daa6c6736f1cd2ad636cc9.jpg"},4404:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/podman-wsl-term-231ee5d34e5c32c393d70867ede7d6bd.jpg"}}]);