"use strict";(self.webpackChunkpodman=self.webpackChunkpodman||[]).push([[7914],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),m=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=m(e.components);return a.createElement(p.Provider,{value:t},e.children)},d="mdxType",l={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},g=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=m(n),g=r,f=d["".concat(p,".").concat(g)]||d[g]||l[g]||o;return n?a.createElement(f,i(i({ref:t},c),{},{components:n})):a.createElement(f,i({ref:t},c))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=g;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s[d]="string"==typeof e?e:r,i[1]=s;for(var m=2;m<o;m++)i[m]=n[m];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}g.displayName="MDXCreateElement"},437:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>l,frontMatter:()=>o,metadata:()=>s,toc:()=>m});var a=n(7462),r=(n(7294),n(3905));const o={},i=void 0,s={unversionedId:"commands/podman-import",id:"commands/podman-import",title:"podman-import",description:"% podman-import 1",source:"@site/docs/commands/podman-import.md",sourceDirName:"commands",slug:"/commands/podman-import",permalink:"/docs/commands/podman-import",draft:!1,editUrl:"https://github.com/containers/website-new/docs/commands/podman-import.md",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"podman-images",permalink:"/docs/commands/podman-images"},next:{title:"podman-info",permalink:"/docs/commands/podman-info"}},p={},m=[{value:"NAME",id:"name",level:2},{value:"SYNOPSIS",id:"synopsis",level:2},{value:"DESCRIPTION",id:"description",level:2},{value:"OPTIONS",id:"options",level:2},{value:"<strong>--arch</strong>",id:"--arch",level:4},{value:"<strong>--change</strong>, <strong>-c</strong>=<em>instruction</em>",id:"--change--cinstruction",level:4},{value:"<strong>--help</strong>, <strong>-h</strong>",id:"--help--h",level:4},{value:"<strong>--message</strong>, <strong>-m</strong>=<em>message</em>",id:"--message--mmessage",level:4},{value:"<strong>--os</strong>",id:"--os",level:4},{value:"<strong>--quiet</strong>, <strong>-q</strong>",id:"--quiet--q",level:4},{value:"<strong>--variant</strong>",id:"--variant",level:4},{value:"EXAMPLES",id:"examples",level:2},{value:"SEE ALSO",id:"see-also",level:2},{value:"HISTORY",id:"history",level:2}],c={toc:m},d="wrapper";function l(e){let{components:t,...n}=e;return(0,r.kt)(d,(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"% podman-import 1"),(0,r.kt)("h2",{id:"name"},"NAME"),(0,r.kt)("p",null,"podman","-","import - Import a tarball and save it as a filesystem image"),(0,r.kt)("h2",{id:"synopsis"},"SYNOPSIS"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"podman import")," ","[",(0,r.kt)("em",{parentName:"p"},"options"),"]"," ",(0,r.kt)("em",{parentName:"p"},"path")," ","[",(0,r.kt)("em",{parentName:"p"},"reference"),"]"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"podman image import")," ","[",(0,r.kt)("em",{parentName:"p"},"options"),"]"," ",(0,r.kt)("em",{parentName:"p"},"path")," ","[",(0,r.kt)("em",{parentName:"p"},"reference"),"]"),(0,r.kt)("h2",{id:"description"},"DESCRIPTION"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"podman import")," imports a tarball (.tar, .tar.gz, .tgz, .bzip, .tar.xz, .txz)\nand saves it as a filesystem image. Remote tarballs can be specified using a URL.\nVarious image instructions can be configured with the ",(0,r.kt)("strong",{parentName:"p"},"--change")," flag and\na commit message can be set using the ",(0,r.kt)("strong",{parentName:"p"},"--message")," flag.\n",(0,r.kt)("strong",{parentName:"p"},"reference"),", if present, is a tag to assign to the image.\n",(0,r.kt)("strong",{parentName:"p"},"podman import")," is used for importing from the archive generated by ",(0,r.kt)("strong",{parentName:"p"},"podman export"),", that includes the container's filesystem. To import the archive of image layers created by ",(0,r.kt)("strong",{parentName:"p"},"podman save"),", use ",(0,r.kt)("strong",{parentName:"p"},"podman load"),".\nNote: ",(0,r.kt)("inlineCode",{parentName:"p"},":")," is a restricted character and cannot be part of the file name."),(0,r.kt)("h2",{id:"options"},"OPTIONS"),(0,r.kt)("h4",{id:"--arch"},(0,r.kt)("strong",{parentName:"h4"},"--arch")),(0,r.kt)("p",null,"Set architecture of the imported image."),(0,r.kt)("h4",{id:"--change--cinstruction"},(0,r.kt)("strong",{parentName:"h4"},"--change"),", ",(0,r.kt)("strong",{parentName:"h4"},"-c"),"=",(0,r.kt)("em",{parentName:"h4"},"instruction")),(0,r.kt)("p",null,"Apply the following possible instructions to the created image:\n",(0,r.kt)("strong",{parentName:"p"},"CMD")," | ",(0,r.kt)("strong",{parentName:"p"},"ENTRYPOINT")," | ",(0,r.kt)("strong",{parentName:"p"},"ENV")," | ",(0,r.kt)("strong",{parentName:"p"},"EXPOSE")," | ",(0,r.kt)("strong",{parentName:"p"},"LABEL")," | ",(0,r.kt)("strong",{parentName:"p"},"STOPSIGNAL")," | ",(0,r.kt)("strong",{parentName:"p"},"USER")," | ",(0,r.kt)("strong",{parentName:"p"},"VOLUME")," | ",(0,r.kt)("strong",{parentName:"p"},"WORKDIR")),(0,r.kt)("p",null,"Can be set multiple times"),(0,r.kt)("h4",{id:"--help--h"},(0,r.kt)("strong",{parentName:"h4"},"--help"),", ",(0,r.kt)("strong",{parentName:"h4"},"-h")),(0,r.kt)("p",null,"Print usage statement"),(0,r.kt)("h4",{id:"--message--mmessage"},(0,r.kt)("strong",{parentName:"h4"},"--message"),", ",(0,r.kt)("strong",{parentName:"h4"},"-m"),"=",(0,r.kt)("em",{parentName:"h4"},"message")),(0,r.kt)("p",null,"Set commit message for imported image"),(0,r.kt)("h4",{id:"--os"},(0,r.kt)("strong",{parentName:"h4"},"--os")),(0,r.kt)("p",null,"Set OS of the imported image."),(0,r.kt)("h4",{id:"--quiet--q"},(0,r.kt)("strong",{parentName:"h4"},"--quiet"),", ",(0,r.kt)("strong",{parentName:"h4"},"-q")),(0,r.kt)("p",null,"Shows progress on the import"),(0,r.kt)("h4",{id:"--variant"},(0,r.kt)("strong",{parentName:"h4"},"--variant")),(0,r.kt)("p",null,"Set variant of the imported image."),(0,r.kt)("h2",{id:"examples"},"EXAMPLES"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"$ podman import --change CMD=/bin/bash --change ENTRYPOINT=/bin/sh --change LABEL=blue=image ctr.tar image-imported\nGetting image source signatures\nCopying blob sha256:b41deda5a2feb1f03a5c1bb38c598cbc12c9ccd675f438edc6acd815f7585b86\n 25.80 MB / 25.80 MB [======================================================] 0s\nCopying config sha256:c16a6d30f3782288ec4e7521c754acc29d37155629cb39149756f486dae2d4cd\n 448 B / 448 B [============================================================] 0s\nWriting manifest to image destination\nStoring signatures\ndb65d991f3bbf7f31ed1064db9a6ced7652e3f8166c4736aa9133dadd3c7acb3\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'$ podman import --change \'ENTRYPOINT ["/bin/sh","-c","test-image"]\'  --change LABEL=blue=image test-image.tar image-imported\nGetting image source signatures\nCopying blob e3b0c44298fc skipped: already exists\nCopying config 1105523502 done\nWriting manifest to image destination\nStoring signatures\n110552350206337183ceadc0bdd646dc356e06514c548b69a8917b4182414b\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'$ podman import --change "CMD /bin/sh"  --change LABEL=blue=image test-image.tar image-imported\nGetting image source signatures\nCopying blob e3b0c44298fc skipped: already exists\nCopying config ae9a27e249 done\nWriting manifest to image destination\nStoring signatures\nae9a27e249f801aff11a4ba54a81751ea9fbc9db45a6df3f1bfd63fc2437bb9c\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'$ cat ctr.tar | podman -q import --message "importing the ctr.tar tarball" - image-imported\ndb65d991f3bbf7f31ed1064db9a6ced7652e3f8166c4736aa9133dadd3c7acb3\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"$ cat ctr.tar | podman import -\nGetting image source signatures\nCopying blob sha256:b41deda5a2feb1f03a5c1bb38c598cbc12c9ccd675f438edc6acd815f7585b86\n 25.80 MB / 25.80 MB [======================================================] 0s\nCopying config sha256:d61387b4d5edf65edee5353e2340783703074ffeaaac529cde97a8357eea7645\n 378 B / 378 B [============================================================] 0s\nWriting manifest to image destination\nStoring signatures\ndb65d991f3bbf7f31ed1064db9a6ced7652e3f8166c4736aa9133dadd3c7acb3\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'$ podman import http://example.com/ctr.tar url-image\nDownloading from "http://example.com/ctr.tar"\nGetting image source signatures\nCopying blob sha256:b41deda5a2feb1f03a5c1bb38c598cbc12c9ccd675f438edc6acd815f7585b86\n 25.80 MB / 25.80 MB [======================================================] 0s\nCopying config sha256:5813fe8a3b18696089fd09957a12e88bda43dc1745b5240879ffffe93240d29a\n 419 B / 419 B [============================================================] 0s\nWriting manifest to image destination\nStoring signatures\ndb65d991f3bbf7f31ed1064db9a6ced7652e3f8166c4736aa9133dadd3c7acb3\n')),(0,r.kt)("h2",{id:"see-also"},"SEE ALSO"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"/docs/podman"},"podman(1)")),", ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"/docs/commands/podman-export"},"podman-export(1)"))),(0,r.kt)("h2",{id:"history"},"HISTORY"),(0,r.kt)("p",null,"November 2017, Originally compiled by Urvashi Mohnani ",(0,r.kt)("a",{parentName:"p",href:"mailto:umohnani@redhat.com"},"umohnani@redhat.com")))}l.isMDXComponent=!0}}]);