"use strict";(self.webpackChunkpodman=self.webpackChunkpodman||[]).push([[5028],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>u});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function d(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),s=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):d(d({},t),e)),n},l=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},m="mdxType",k={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),m=s(n),c=r,u=m["".concat(p,".").concat(c)]||m[c]||k[c]||o;return n?a.createElement(u,d(d({ref:t},l),{},{components:n})):a.createElement(u,d({ref:t},l))}));function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,d=new Array(o);d[0]=c;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[m]="string"==typeof e?e:r,d[1]=i;for(var s=2;s<o;s++)d[s]=n[s];return a.createElement.apply(null,d)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},9250:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>d,default:()=>k,frontMatter:()=>o,metadata:()=>i,toc:()=>s});var a=n(7462),r=(n(7294),n(3905));const o={},d=void 0,i={unversionedId:"podman-network/podman-network",id:"podman-network/podman-network",title:"podman-network",description:"% podman-network 1",source:"@site/docs/podman-network/podman-network.md",sourceDirName:"podman-network",slug:"/podman-network/",permalink:"/website-new/docs/podman-network/",draft:!1,editUrl:"https://github.com/containers/website-new/docs/podman-network/podman-network.md",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"podman-mount",permalink:"/website-new/docs/podman-mount"},next:{title:"podman-network-connect",permalink:"/website-new/docs/podman-network/podman-network-connect"}},p={},s=[{value:"NAME",id:"name",level:2},{value:"SYNOPSIS",id:"synopsis",level:2},{value:"DESCRIPTION",id:"description",level:2},{value:"COMMANDS",id:"commands",level:2},{value:"SUBNET NOTES",id:"subnet-notes",level:2},{value:"Podman network",id:"podman-network",level:3},{value:"Slirp4netns",id:"slirp4netns",level:3},{value:"Podman network create",id:"podman-network-create",level:3},{value:"SEE ALSO",id:"see-also",level:2}],l={toc:s},m="wrapper";function k(e){let{components:t,...n}=e;return(0,r.kt)(m,(0,a.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"% podman-network 1"),(0,r.kt)("h2",{id:"name"},"NAME"),(0,r.kt)("p",null,"podman","-","network - Manage Podman networks"),(0,r.kt)("h2",{id:"synopsis"},"SYNOPSIS"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"podman network")," ",(0,r.kt)("em",{parentName:"p"},"subcommand")),(0,r.kt)("h2",{id:"description"},"DESCRIPTION"),(0,r.kt)("p",null,"The network command manages networks for Podman."),(0,r.kt)("p",null,"Podman supports two network backends ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/containers/netavark"},"Netavark"),"\nand ",(0,r.kt)("a",{parentName:"p",href:"https://www.cni.dev/"},"CNI"),". Netavark is the default network backend and was added in Podman v4.0. CNI will be\ndeprecated in the future in preference of Netavark. To configure\nthe network backend use the ",(0,r.kt)("inlineCode",{parentName:"p"},"network_backend"),"key under the ",(0,r.kt)("inlineCode",{parentName:"p"},"[Network]")," in\n",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"https://github.com/containers/common/blob/main/docs/containers.conf.5.md"},"containers.conf(5)")),".\nNew systems should use netavark by default, to check what backed is used run\n",(0,r.kt)("inlineCode",{parentName:"p"},"podman info --format {{.Host.NetworkBackend}}"),"."),(0,r.kt)("p",null,"All network commands work for both backends but CNI and Netavark use different config files\nso networks have to be created again after a backend change."),(0,r.kt)("h2",{id:"commands"},"COMMANDS"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Command"),(0,r.kt)("th",{parentName:"tr",align:null},"Man Page"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"connect"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/website-new/docs/podman-network/podman-network-connect"},"podman-network-connect(1)")),(0,r.kt)("td",{parentName:"tr",align:null},"Connect a container to a network")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"create"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/website-new/docs/podman-network/podman-network-create"},"podman-network-create(1)")),(0,r.kt)("td",{parentName:"tr",align:null},"Create a Podman network")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"disconnect"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/website-new/docs/podman-network/podman-network-disconnect"},"podman-network-disconnect(1)")),(0,r.kt)("td",{parentName:"tr",align:null},"Disconnect a container from a network")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"exists"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/website-new/docs/podman-network/podman-network-exists"},"podman-network-exists(1)")),(0,r.kt)("td",{parentName:"tr",align:null},"Check if the given network exists")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"inspect"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/website-new/docs/podman-network/podman-network-inspect"},"podman-network-inspect(1)")),(0,r.kt)("td",{parentName:"tr",align:null},"Displays the network configuration for one or more networks")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"ls"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/website-new/docs/podman-network/podman-network-ls"},"podman-network-ls(1)")),(0,r.kt)("td",{parentName:"tr",align:null},"Display a summary of networks")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"prune"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/website-new/docs/podman-network/podman-network-prune"},"podman-network-prune(1)")),(0,r.kt)("td",{parentName:"tr",align:null},"Remove all unused networks")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"reload"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/website-new/docs/podman-network/podman-network-reload"},"podman-network-reload(1)")),(0,r.kt)("td",{parentName:"tr",align:null},"Reload network configuration for containers")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"rm"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/website-new/docs/podman-network/podman-network-rm"},"podman-network-rm(1)")),(0,r.kt)("td",{parentName:"tr",align:null},"Remove one or more networks")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"update"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/website-new/docs/podman-network/podman-network-update"},"podman-network-update(1)")),(0,r.kt)("td",{parentName:"tr",align:null},"Update an existing Podman network")))),(0,r.kt)("h2",{id:"subnet-notes"},"SUBNET NOTES"),(0,r.kt)("p",null,"Podman requires specific default IPs and, thus, network subnets. The default values used by Podman can be modified in the ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"https://github.com/containers/common/blob/main/docs/containers.conf.5.md"},"containers.conf(5)"))," file."),(0,r.kt)("h3",{id:"podman-network"},"Podman network"),(0,r.kt)("p",null,"The default bridge network (called ",(0,r.kt)("inlineCode",{parentName:"p"},"podman"),") uses 10.88.0.0/16 as a subnet. When Podman runs as root, the ",(0,r.kt)("inlineCode",{parentName:"p"},"podman")," network is used as default. It is the same as adding the option ",(0,r.kt)("inlineCode",{parentName:"p"},"--network bridge")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"--network podman"),". This subnet can be changed in ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"https://github.com/containers/common/blob/main/docs/containers.conf.5.md"},"containers.conf(5)"))," under the ","[network]"," section. Set the ",(0,r.kt)("inlineCode",{parentName:"p"},"default_subnet")," to any subnet that is free in the environment. The name of the default network can also be changed from ",(0,r.kt)("inlineCode",{parentName:"p"},"podman")," to another name using the default network key. Note that this should only be done when no containers are running."),(0,r.kt)("h3",{id:"slirp4netns"},"Slirp4netns"),(0,r.kt)("p",null,"When Podman is run as rootless, the internet connectivity is provided with slirp4netns by default. Slirp4nents uses 10.0.2.0/24 for its default network. This can also be changed in ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"https://github.com/containers/common/blob/main/docs/containers.conf.5.md"},"containers.conf(5)"))," but under the ",(0,r.kt)("inlineCode",{parentName:"p"},"[engine]")," section. Use the ",(0,r.kt)("inlineCode",{parentName:"p"},"network_cmd_options")," key and add ",(0,r.kt)("inlineCode",{parentName:"p"},'["cidr=X.X.X.X/24"]')," as a value. Note that slirp4netns needs a network prefix size between 1 and 25. This option accepts an array, so more options can be added in a comma-separated string as described on the ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"/website-new/docs/podman-network/podman-network-create"},"podman-network-create(1)"))," man page. To change the CIDR for just one container, specify it on the cli using the ",(0,r.kt)("inlineCode",{parentName:"p"},"--network")," option like this: ",(0,r.kt)("inlineCode",{parentName:"p"},"--network slirp4netns:cidr=19268.0/24"),"."),(0,r.kt)("p",null,"When using the default network as rootless, i.e. --network podman/bridge, then it also uses the same subnet as described above in addition to the slirp4netns subnet."),(0,r.kt)("h3",{id:"podman-network-create"},"Podman network create"),(0,r.kt)("p",null,"When a new network is created with a ",(0,r.kt)("inlineCode",{parentName:"p"},"podman network create")," command, and no subnet is given with the --subnet option, Podman will start picking a free subnet from 10.89.0.0/24 to 10.255.255.0/24. Use the ",(0,r.kt)("inlineCode",{parentName:"p"},"default_subnet_pools")," option under the ",(0,r.kt)("inlineCode",{parentName:"p"},"[network]")," section in ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"https://github.com/containers/common/blob/main/docs/containers.conf.5.md"},"containers.conf(5)"))," to change the range and/or size that is assigned by default."),(0,r.kt)("h2",{id:"see-also"},"SEE ALSO"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"/website-new/docs/podman"},"podman(1)")),", ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"/website-new/docs/podman-network/podman-network-create"},"podman-network-create(1)")),", ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"https://github.com/containers/common/blob/main/docs/containers.conf.5.md"},"containers.conf(5)"))))}k.isMDXComponent=!0}}]);