"use strict";(self.webpackChunkpodman=self.webpackChunkpodman||[]).push([[6332],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>k});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},m="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,p=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),m=s(n),u=a,k=m["".concat(p,".").concat(u)]||m[u]||c[u]||l;return n?r.createElement(k,o(o({ref:t},d),{},{components:n})):r.createElement(k,o({ref:t},d))}));function k(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,o=new Array(l);o[0]=u;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[m]="string"==typeof e?e:a,o[1]=i;for(var s=2;s<l;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},2098:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>c,frontMatter:()=>l,metadata:()=>i,toc:()=>s});var r=n(7462),a=(n(7294),n(3905));const l={},o=void 0,i={unversionedId:"podman-restart",id:"podman-restart",title:"podman-restart",description:"% podman-restart 1",source:"@site/docs/podman-restart.md",sourceDirName:".",slug:"/podman-restart",permalink:"/websites-new/docs/podman-restart",draft:!1,editUrl:"https://github.com/containers/website-new/docs/podman-restart.md",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"podman-rename",permalink:"/websites-new/docs/podman-rename"},next:{title:"podman-rm",permalink:"/websites-new/docs/podman-rm"}},p={},s=[{value:"NAME",id:"name",level:2},{value:"SYNOPSIS",id:"synopsis",level:2},{value:"DESCRIPTION",id:"description",level:2},{value:"OPTIONS",id:"options",level:2},{value:"<strong>--all</strong>, <strong>-a</strong>",id:"--all--a",level:4},{value:"<strong>--cidfile</strong>",id:"--cidfile",level:4},{value:"<strong>--filter</strong>, <strong>-f</strong>=<em>filter</em>",id:"--filter--ffilter",level:4},{value:"<strong>--running</strong>",id:"--running",level:4},{value:"EXAMPLES",id:"examples",level:2},{value:"SEE ALSO",id:"see-also",level:2},{value:"HISTORY",id:"history",level:2}],d={toc:s},m="wrapper";function c(e){let{components:t,...n}=e;return(0,a.kt)(m,(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"% podman-restart 1"),(0,a.kt)("h2",{id:"name"},"NAME"),(0,a.kt)("p",null,"podman","-","restart - Restart one or more containers"),(0,a.kt)("h2",{id:"synopsis"},"SYNOPSIS"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"podman restart")," ","[",(0,a.kt)("em",{parentName:"p"},"options"),"]"," ",(0,a.kt)("em",{parentName:"p"},"container")," ..."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"podman container restart")," ","[",(0,a.kt)("em",{parentName:"p"},"options"),"]"," ",(0,a.kt)("em",{parentName:"p"},"container")," ..."),(0,a.kt)("h2",{id:"description"},"DESCRIPTION"),(0,a.kt)("p",null,"The restart command allows containers to be restarted using their ID or name.\nContainers will be stopped if they are running and then restarted. Stopped\ncontainers will not be stopped and will only be started."),(0,a.kt)("h2",{id:"options"},"OPTIONS"),(0,a.kt)("h4",{id:"--all--a"},(0,a.kt)("strong",{parentName:"h4"},"--all"),", ",(0,a.kt)("strong",{parentName:"h4"},"-a")),(0,a.kt)("p",null,"Restart all containers regardless of their current state."),(0,a.kt)("h4",{id:"--cidfile"},(0,a.kt)("strong",{parentName:"h4"},"--cidfile")),(0,a.kt)("p",null,"Read container ID from the specified file and restart the container. Can be specified multiple times."),(0,a.kt)("h4",{id:"--filter--ffilter"},(0,a.kt)("strong",{parentName:"h4"},"--filter"),", ",(0,a.kt)("strong",{parentName:"h4"},"-f"),"=",(0,a.kt)("em",{parentName:"h4"},"filter")),(0,a.kt)("p",null,"Filter what containers restart.\nMultiple filters can be given with multiple uses of the --filter flag.\nFilters with the same key work inclusive with the only exception being\n",(0,a.kt)("inlineCode",{parentName:"p"},"label")," which is exclusive. Filters with different keys always work exclusive."),(0,a.kt)("p",null,"Valid filters are listed below:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},(0,a.kt)("strong",{parentName:"th"},"Filter")),(0,a.kt)("th",{parentName:"tr",align:null},(0,a.kt)("strong",{parentName:"th"},"Description")))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"id"),(0,a.kt)("td",{parentName:"tr",align:null},"[ID]"," Container's ID (accepts regex)")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"name"),(0,a.kt)("td",{parentName:"tr",align:null},"[Name]"," Container's name (accepts regex)")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"label"),(0,a.kt)("td",{parentName:"tr",align:null},"[Key]"," or ","[Key=Value]"," Label assigned to a container")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"exited"),(0,a.kt)("td",{parentName:"tr",align:null},"[Int]"," Container's exit code")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"status"),(0,a.kt)("td",{parentName:"tr",align:null},"[Status]"," Container's status: 'created', 'exited', 'paused', 'running', 'unknown'")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"ancestor"),(0,a.kt)("td",{parentName:"tr",align:null},"[ImageName]"," Image or descendant used to create container")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"before"),(0,a.kt)("td",{parentName:"tr",align:null},"[ID]"," or ","[Name]"," Containers created before this container")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"since"),(0,a.kt)("td",{parentName:"tr",align:null},"[ID]"," or ","[Name]"," Containers created since this container")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"volume"),(0,a.kt)("td",{parentName:"tr",align:null},"[VolumeName]"," or ","[MountpointDestination]"," Volume mounted in container")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"health"),(0,a.kt)("td",{parentName:"tr",align:null},"[Status]"," healthy or unhealthy")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"pod"),(0,a.kt)("td",{parentName:"tr",align:null},"[Pod]"," name or full or partial ID of pod")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"network"),(0,a.kt)("td",{parentName:"tr",align:null},"[Network]"," name or full ID of network")))),(0,a.kt)("p",null,"@@option latest"),(0,a.kt)("h4",{id:"--running"},(0,a.kt)("strong",{parentName:"h4"},"--running")),(0,a.kt)("p",null,"Restart all containers that are already in the ",(0,a.kt)("em",{parentName:"p"},"running")," state."),(0,a.kt)("p",null,"@@option time"),(0,a.kt)("h2",{id:"examples"},"EXAMPLES"),(0,a.kt)("p",null,"Restart the latest container"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"$ podman restart -l\nec588fc80b05e19d3006bf2e8aa325f0a2e2ff1f609b7afb39176ca8e3e13467\n")),(0,a.kt)("p",null,"Restart a specific container by partial container ID"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"$ podman restart ff6cf1\nff6cf1e5e77e6dba1efc7f3fcdb20e8b89ad8947bc0518be1fcb2c78681f226f\n")),(0,a.kt)("p",null,"Restart two containers by name with a timeout of 4 seconds"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"$ podman restart --time 4 test1 test2\nc3bb026838c30e5097f079fa365c9a4769d52e1017588278fa00d5c68ebc1502\n17e13a63081a995136f907024bcfe50ff532917988a152da229db9d894c5a9ec\n")),(0,a.kt)("p",null,"Restart all running containers"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"$ podman restart --running\n")),(0,a.kt)("p",null,"Restart all containers"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"$ podman restart --all\n")),(0,a.kt)("p",null,"Restart container using ID specified in a given files."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"$ podman restart --cidfile /home/user/cidfile-1\n$ podman restart --cidfile /home/user/cidfile-1 --cidfile ./cidfile-2\n")),(0,a.kt)("h2",{id:"see-also"},"SEE ALSO"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("a",{parentName:"strong",href:"/websites-new/docs/podman"},"podman(1)"))),(0,a.kt)("h2",{id:"history"},"HISTORY"),(0,a.kt)("p",null,"March 2018, Originally compiled by Matt Heon ",(0,a.kt)("a",{parentName:"p",href:"mailto:mheon@redhat.com"},"mheon@redhat.com")))}c.isMDXComponent=!0}}]);